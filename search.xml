<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux安装SSR</title>
      <link href="/2024/09/20/install-ssr/"/>
      <url>/2024/09/20/install-ssr/</url>
      
        <content type="html"><![CDATA[<h3 id="脚本代码"><a href="#脚本代码" class="headerlink" title="脚本代码"></a>脚本代码</h3><p>系统推荐Debian11或者Ubuntu 20.04<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br><span class="line"><span class="comment"># 1 - 10 2 - - - - - -</span></span><br><span class="line"></span><br><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span></span><br><span class="line">chmod +x tcp.sh</span><br><span class="line">./tcp.sh</span><br><span class="line"><span class="comment"># 1 y 6</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker部署appium服务器</title>
      <link href="/2024/09/20/docker-appium/"/>
      <url>/2024/09/20/docker-appium/</url>
      
        <content type="html"><![CDATA[<h3 id="脚本代码"><a href="#脚本代码" class="headerlink" title="脚本代码"></a>脚本代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-d \</span><br><span class="line">-v /usr/src/key:/root/.android \</span><br><span class="line">-p 4723:4723 \</span><br><span class="line">-e REMOTE_ADB=<span class="literal">true</span> \</span><br><span class="line">-e ANDROID_DEVICES=116.62.65.226:1000,116.62.65.226:1002 \</span><br><span class="line">-e REMOTE_ADB_POLLING_SEC=60 \</span><br><span class="line">-e APPIUM_ADDITIONAL_PARAMS=<span class="string">&quot;--ssl-cert-path=/root/.android/cert.pem --ssl-key-path=/root/.android/key.pem&quot;</span> \</span><br><span class="line">--name appium \</span><br><span class="line">appium/appium</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WindowsServer自动下载并安装软件的脚本</title>
      <link href="/2023/05/31/windows-server-deploy/"/>
      <url>/2023/05/31/windows-server-deploy/</url>
      
        <content type="html"><![CDATA[<h3 id="脚本代码"><a href="#脚本代码" class="headerlink" title="脚本代码"></a>脚本代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 开始下载应用程序...</span><br><span class="line">bitsadmin /transfer n https://geshui-data.oss-cn-hangzhou.aliyuncs.com/hf-rpa-setup.exe c:\1.exe</span><br><span class="line"><span class="built_in">echo</span> 开始安装应用程序...</span><br><span class="line">start /<span class="built_in">wait</span> c:\1.exe /silent</span><br><span class="line"><span class="built_in">echo</span> 安装完成</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 开始下载应用程序...</span><br><span class="line">bitsadmin /transfer n https://geshui-data.oss-cn-hangzhou.aliyuncs.com/vcredist_x86.exe c:\2.exe</span><br><span class="line"><span class="built_in">echo</span> 开始安装应用程序...</span><br><span class="line">start /<span class="built_in">wait</span> c:\2.exe /silent</span><br><span class="line"><span class="built_in">echo</span> 安装完成</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot测试类MockMvcResultHandlers.print()乱码</title>
      <link href="/2021/01/27/spring-boot-test-encoding-error/"/>
      <url>/2021/01/27/spring-boot-test-encoding-error/</url>
      
        <content type="html"><![CDATA[<h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>Spring boot升级到2.3以后，测试类中的MockMvcResultHandlers.print()打印出来的字符都是乱码了，查了一下改动比较大，一个一个修改很麻烦，可以抽象到BaseTest中</p><h3 id="基类中的公共方法"><a href="#基类中的公共方法" class="headerlink" title="基类中的公共方法"></a>基类中的公共方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试post接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postForTest</span><span class="params">(String except, Object content, String url, <span class="keyword">boolean</span> isPrint)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    ResultActions resultActions = <span class="keyword">this</span>.mock.perform(</span><br><span class="line">            post(url).headers(headers).content(<span class="keyword">new</span> JsonMapper().toJson(content))</span><br><span class="line">    ).andExpect(status().isOk());</span><br><span class="line">    resultActions.andReturn().getResponse().setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (isPrint) &#123;</span><br><span class="line">        resultActions.andDo(MockMvcResultHandlers.print());</span><br><span class="line">    &#125;</span><br><span class="line">    resultActions.andExpect(content().json(except));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot Admin添加安全验证</title>
      <link href="/2021/01/27/securing-spring-boot-admin/"/>
      <url>/2021/01/27/securing-spring-boot-admin/</url>
      
        <content type="html"><![CDATA[<h3 id="阿里云安全警告"><a href="#阿里云安全警告" class="headerlink" title="阿里云安全警告"></a>阿里云安全警告</h3><p>阿里云受工业和信息化部网络安全管理局委托通知您，您的资产：XX.XX.XX.XX，存在Spring Boot Admin 未授权访问漏洞，漏洞报告地址：…，详情请查阅邮件或站内信。请您参照修复建议尽快进行整改，避免漏洞被黑客利用，对于长期存在安全隐患但未整改的网络资源，监管部门可能会下达行政处罚（关停、约谈等），望您务必重视。</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Spring Boot监控系统一直没有加安全机制，被工信部点名了，需要加上账号密码验证。</p><h3 id="Spring-Boot-Admin-Server端"><a href="#Spring-Boot-Admin-Server端" class="headerlink" title="Spring Boot Admin Server端"></a>Spring Boot Admin Server端</h3><p>pom.xml中添加security<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><br>项目里面添加配置类SecuritySecureConfig.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecuritySecureConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> AdminServerProperties adminServer;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SecuritySecureConfig</span><span class="params">(AdminServerProperties adminServer)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.adminServer = adminServer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    SavedRequestAwareAuthenticationSuccessHandler successHandler = <span class="keyword">new</span> SavedRequestAwareAuthenticationSuccessHandler();</span><br><span class="line">    successHandler.setTargetUrlParameter(<span class="string">&quot;redirectTo&quot;</span>);</span><br><span class="line">    successHandler.setDefaultTargetUrl(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/&quot;</span>));</span><br><span class="line"></span><br><span class="line">    http.authorizeRequests(</span><br><span class="line">        (authorizeRequests) -&gt; authorizeRequests.antMatchers(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/assets/**&quot;</span>)).permitAll() </span><br><span class="line">            .antMatchers(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/login&quot;</span>)).permitAll().anyRequest().authenticated() </span><br><span class="line">    ).formLogin(</span><br><span class="line">        (formLogin) -&gt; formLogin.loginPage(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/login&quot;</span>)).successHandler(successHandler).and() </span><br><span class="line">    ).logout((logout) -&gt; logout.logoutUrl(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/logout&quot;</span>))).httpBasic(Customizer.withDefaults()) </span><br><span class="line">        .csrf((csrf) -&gt; csrf.csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse()) </span><br><span class="line">            .ignoringRequestMatchers(</span><br><span class="line">                <span class="keyword">new</span> AntPathRequestMatcher(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/instances&quot;</span>),</span><br><span class="line">                    HttpMethod.POST.toString()), </span><br><span class="line">                <span class="keyword">new</span> AntPathRequestMatcher(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/instances/*&quot;</span>),</span><br><span class="line">                    HttpMethod.DELETE.toString()), </span><br><span class="line">                <span class="keyword">new</span> AntPathRequestMatcher(<span class="keyword">this</span>.adminServer.path(<span class="string">&quot;/actuator/**&quot;</span>)) </span><br><span class="line">            ))</span><br><span class="line">        .rememberMe((rememberMe) -&gt; rememberMe.key(UUID.randomUUID().toString()).tokenValiditySeconds(<span class="number">1209600</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Required to provide UserDetailsService for &quot;remember functionality&quot;</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 这里的账号密码改成自己需要的        </span></span><br><span class="line">    auth.inMemoryAuthentication().withUser(<span class="string">&quot;user&quot;</span>).password(<span class="string">&quot;&#123;noop&#125;password&quot;</span>).roles(<span class="string">&quot;USER&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>注意： 记录一下最后一个方法的账号密码，Client端需要填写相关的配置</p><h3 id="Spring-Boot-Admin-Client端"><a href="#Spring-Boot-Admin-Client端" class="headerlink" title="Spring Boot Admin Client端"></a>Spring Boot Admin Client端</h3><p>添加账号密码的配置<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.boot.admin.client.username</span>=<span class="string">user</span></span><br><span class="line"><span class="meta">spring.boot.admin.client.password</span>=<span class="string">password</span></span><br></pre></td></tr></table></figure></p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><p>Spring Boot Admin版本：<code>2.3.0</code><br>官网相关文章： <a href="https://codecentric.github.io/spring-boot-admin/2.3.0/#securing-spring-boot-admin">保护Spring Boot Admin服务器</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重装系统提示无法创建新的分区，也找不到现有的分区</title>
      <link href="/2021/01/27/windows-install/"/>
      <url>/2021/01/27/windows-install/</url>
      
        <content type="html"><![CDATA[<p>终结解决方案：利用Windows自带的引导文件进行安装<br>首先进入PE，在PE下找到你的系统ISO镜像，解压缩，然后将镜像里的<code>boot文件夹、sources文件夹和bootmgr文件</code>提取出来，然后复制到你要安装的分区（比如c盘），接下来拔下U盘，重新启动计算机，即可进入Windows安装界面进行正常安装。</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot Too many open files错误</title>
      <link href="/2020/07/24/spring-boot-too-many-open-files/"/>
      <url>/2020/07/24/spring-boot-too-many-open-files/</url>
      
        <content type="html"><![CDATA[<h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>前端同事突然告知集成环境连不上了，然后我连ssh测试一下，发现整个服务器都变得很慢了，监控显示有个dbus进程占用了100%的CPU。首先反应是被攻击了？最近就只是部署了一个新版本的webflux项目，查看了一下各种日志，发现到处都在报<code>Too many open files</code>。该服务器是测试服务器，里面用Docker部署了一堆容器：<code>Jenkins</code>,<code>MySQL</code>,<code>Redis</code>,<code>Spring boot admin</code>等等。此时Jenkins容器已经挂了，其他的虽然没挂但是也连不上了。猜测是Linux文件系统出了问题。</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>各种搜索后，发现这是<code>io.projectreactor.netty:reactor-netty:0.9.8.RELEASE</code>的一个bug，更新到<code>0.9.9.RELEASE</code>就可以修复了。<br>相关链接：<br><a href="https://github.com/spring-projects/spring-boot/issues/21923">Too many open files after upgrade to Spring Boot 2.2.8 #21923</a><br><a href="https://github.com/spring-projects/spring-boot/issues/21934">Many File Open Issue : Spring Boot 2.3.0 -&gt; Spring Boot 2.3.1 #21934</a><br><a href="https://github.com/wayne-robinson/thule/commit/c13d2ce7c92f420612e658419bb1236f59cfd011">Spring Boot uses version 0.9.8.RELEASE which contains a bug producing…</a></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>临时处理：先解决眼下的问题，kill掉dbus进程，然后重启服务器，做一下清理工作（redis日志多出来10个G撑爆了磁盘），然后重启每个容器，一切都正常了。后续还要关注一下Spring boot新版本这个问题的修复情况。<br>Spring boot 2.3.2将会修复这个bug，应该快了，再等等吧。OVER</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring boot </tag>
            
            <tag> Netty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot升级到2.3.1笔记</title>
      <link href="/2020/07/06/spring-boot-update-version2/"/>
      <url>/2020/07/06/spring-boot-update-version2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>老版本的Spring boot已经继续用了2年了，最近发现官网的推荐版本已经没有了1.5系列的了，下决心要升级大版本，把之前写的升级方案找出来参考了一下，这次应该还会碰到一些其他问题，特此记录以备不时之需</p></blockquote><ul><li>Spring boot版本：<code>1.5.8.RELEASE</code> -&gt; <code>2.3.1.RELEASE</code></li><li>Spring Data JPA版本: <code>1.11.8.RELEASE</code> -&gt; <code>2.3.1.RELEASE</code></li></ul><p>本来想按官网的更稳妥的方案一步一步升级，但是由于我们使用的Spring boot功能比较少，CTO建议直接升级到最新版本<br>先按两年前的方案修改各种配置：<a href="/blog/2018/11/26/spring-boot-update-version">Spring boot升级到2.1</a></p><h3 id="添加升级工具"><a href="#添加升级工具" class="headerlink" title="添加升级工具"></a>添加升级工具</h3><p>升级文档中发现有升级工具，添加到pom中<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 升级工具 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-properties-migrator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="本地h2数据库保留字问题"><a href="#本地h2数据库保留字问题" class="headerlink" title="本地h2数据库保留字问题"></a>本地h2数据库保留字问题</h3><p>查询了一下，h2数据库版本从<code>1.4.196</code>到<code>1.4.200</code>，原先数据库表中有一些名称为<code>row</code>的字段，这些字段都变成保留字了，初始化的sql执行报错<br>原先思路是修改字段名称，这样改动太大了，CTO建议h2单独切换回老版本，测试后没有问题了<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.196<span class="tag">&lt;/<span class="name">version</span>&gt;</span><span class="comment">&lt;!-- 添加一行指定版本号 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="swagger2版本冲突问题"><a href="#swagger2版本冲突问题" class="headerlink" title="swagger2版本冲突问题"></a>swagger2版本冲突问题</h3><p>启动仍然报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">***************************</span><br><span class="line">APPLICATION FAILED TO START</span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line"></span><br><span class="line">Parameter 0 of method linkDiscoverers in org.springframework.hateoas.config.HateoasConfiguration required a single bean, but 3 were found:</span><br><span class="line">- relProviderPluginRegistry: defined by method &#39;relProviderPluginRegistry&#39; in class path resource [org&#x2F;springframework&#x2F;hateoas&#x2F;config&#x2F;HateoasConfiguration.class]</span><br><span class="line">- linkDiscovererRegistry: defined in null</span><br><span class="line">- entityLinksPluginRegistry: defined by method &#39;entityLinksPluginRegistry&#39; in class path resource [org&#x2F;springframework&#x2F;hateoas&#x2F;config&#x2F;WebMvcEntityLinksConfiguration.class]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Action:</span><br><span class="line"></span><br><span class="line">Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed</span><br><span class="line"></span><br><span class="line">Disconnected from the target VM, address: &#39;127.0.0.1:61337&#39;, transport: &#39;socket&#39;</span><br><span class="line"></span><br><span class="line">Process finished with exit code 1</span><br></pre></td></tr></table></figure><br>网上搜索了一下这个报错，说是和swagger2版本有关，修改pom中的版本号（<code>2.2.2</code>-&gt;<code>2.9.2</code>）之后问题就解决了</p><h3 id="时间格式问题"><a href="#时间格式问题" class="headerlink" title="时间格式问题"></a>时间格式问题</h3><p>测试类报了时间比对错误，去官网升级指南中找到了相关说明：<br>In 2.0, we’ve flipped a Jackson configuration default to write JSR-310 dates as ISO-8601 strings. If you wish to return to the previous behavior, you can add <code>spring.jackson.serialization.write-dates-as-timestamps=true</code> to your configuration.<br>在测试类中添加时间格式设置<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.jackson.serialization.write-dates-as-timestamps</span> = <span class="string">true</span></span><br></pre></td></tr></table></figure><br>到此为止，新版本的兼容已经OK了，项目能正常运行了，测试类也全部可以通过了。<br>后面仍需要完善一些警告，过时方法等，经过小范围的试用后就可以确定升级方案了。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>Spring boot v1.5 → v2.0 升级指南：<a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide">Spring Boot 2.0 Migration Guide</a><br>Spring boot 最新文档：<a href="https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/html/">Spring Boot Reference Documentation</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java封装orika实现对象拷贝</title>
      <link href="/2020/06/19/java-orika/"/>
      <url>/2020/06/19/java-orika/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>一直使用orika复制对象，最近偶然发现了orika还有属性复制的功能，研究后封装了一下，以后用起来就更方便了</p><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ma.glasnost.orika<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>orika-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><ul><li>做了简单的封装，按业务需要可以选择是否覆盖空值</li><li>还有很多更灵活的配置暂时没用到，比如可以指定不同名字、不同类型字段的映射关系，这些等以后有需求的时候再加上<figure class="highlight java"><figcaption><span>BeanMapper.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ma.glasnost.orika.MapperFacade;</span><br><span class="line"><span class="keyword">import</span> ma.glasnost.orika.MapperFactory;</span><br><span class="line"><span class="keyword">import</span> ma.glasnost.orika.impl.DefaultMapperFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单封装orika, 实现深度转换Bean&lt;-&gt;Bean的Mapper.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MapperFacade defaultMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MapperFacade ignoreNullMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        MapperFactory defaultMapperFactory = <span class="keyword">new</span> DefaultMapperFactory.Builder().build();</span><br><span class="line">        defaultMapper = defaultMapperFactory.getMapperFacade();</span><br><span class="line">        MapperFactory ignoreNullMapperFactory = <span class="keyword">new</span> DefaultMapperFactory.Builder().mapNulls(<span class="keyword">false</span>).build();</span><br><span class="line">        ignoreNullMapper = ignoreNullMapperFactory.getMapperFacade();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制对象的属性（忽略null）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, D&gt; <span class="function"><span class="keyword">void</span> <span class="title">mapIgnoreNull</span><span class="params">(S sourceObject, D destinationObject)</span> </span>&#123;</span><br><span class="line">        ignoreNullMapper.map(sourceObject, destinationObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制对象的属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, D&gt; <span class="function"><span class="keyword">void</span> <span class="title">map</span><span class="params">(S sourceObject, D destinationObject)</span> </span>&#123;</span><br><span class="line">        defaultMapper.map(sourceObject, destinationObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, D&gt; <span class="function">D <span class="title">map</span><span class="params">(S source, Class&lt;D&gt; destinationClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> defaultMapper.map(source, destinationClass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 复制对象list</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, D&gt; <span class="function">List&lt;D&gt; <span class="title">mapList</span><span class="params">(Iterable&lt;S&gt; sourceList, Class&lt;D&gt; destinationClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> defaultMapper.mapAsList(sourceList, destinationClass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java获取文件真实格式</title>
      <link href="/2020/01/16/java-input-stream-get-file-type/"/>
      <url>/2020/01/16/java-input-stream-get-file-type/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>很多时候，文件的类型和后缀名不一致，这样就不能简单的用后缀名判断文件的格式。<br>例如：POI导入excel只能支持.xls和.xlsx的文件解析，但有些真实格式为csv或html的.xls文件混入其中就会导致导入失败，那么就需要根据头部信息匹配格式</p><h3 id="获取文件真实类型"><a href="#获取文件真实类型" class="headerlink" title="获取文件真实类型"></a>获取文件真实类型</h3><ol><li>获取文件的头部字节</li><li>将头部字节转换成16进制字符串</li><li>匹配字符串获取文件类型</li></ol><figure class="highlight java"><figcaption><span>FileTypeJudge.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件类型判断类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FileTypeJudge</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FileTypeJudge</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将文件头转换成16进制字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">bytesToHexString</span><span class="params">(<span class="keyword">byte</span>[] src)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">if</span> (src == <span class="keyword">null</span> || src.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">byte</span> b : src) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = b &amp; <span class="number">0xFF</span>;</span><br><span class="line">            String hv = Integer.toHexString(v);</span><br><span class="line">            <span class="keyword">if</span> (hv.length() &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                stringBuilder.append(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            stringBuilder.append(hv);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到文件头</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getFileContent</span><span class="params">(InputStream inputStream)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">28</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream.read(b, <span class="number">0</span>, <span class="number">28</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                inputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bytesToHexString(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> FileType <span class="title">getType</span><span class="params">(InputStream inputStream)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String fileHead = getFileContent(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fileHead == <span class="keyword">null</span> || fileHead.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (FileType type : FileType.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (fileHead.startsWith(type.code)) &#123;</span><br><span class="line">                <span class="keyword">return</span> type;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * InputStream转ByteArrayOutputStream，用于流的复制</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ByteArrayOutputStream <span class="title">cloneInputStream</span><span class="params">(InputStream input)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = input.read(buffer)) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">            baos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        baos.flush();</span><br><span class="line">        <span class="keyword">return</span> baos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关于流的复制"><a href="#关于流的复制" class="headerlink" title="关于流的复制"></a>关于流的复制</h3><p>由于判断文件格式需要读取流的头部信息，这个读取是不可逆的，而判断完文件格式后通常还需要读文件，所以需要复制一个InputStream<br><figure class="highlight java"><figcaption><span>复制InputStream</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">InputStream fis = request.getFile(<span class="string">&quot;file&quot;</span>).getInputStream();</span><br><span class="line">ByteArrayOutputStream temp = cloneInputStream(fis);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开两个新的输入流，一个用于判断文件类型，还有一个用于读取文件内容</span></span><br><span class="line">InputStream stream1 = <span class="keyword">new</span> ByteArrayInputStream(temp.toByteArray());</span><br><span class="line">InputStream stream2 = <span class="keyword">new</span> ByteArrayInputStream(temp.toByteArray());</span><br></pre></td></tr></table></figure></p><h3 id="文件类型枚举"><a href="#文件类型枚举" class="headerlink" title="文件类型枚举"></a>文件类型枚举</h3><p>罗列了大部分文件格式的头部信息，如果有新的格式可以测试后添加进去<br><figure class="highlight java"><figcaption><span>FileType.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件类型枚取</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">FileType</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JPEG(jpg)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    JPG(<span class="string">&quot;ffd8ffe000104a464946&quot;</span>,<span class="string">&quot;jpg&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * PNG(png)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PNG(<span class="string">&quot;89504e470d0a1a0a0000&quot;</span>,<span class="string">&quot;png&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * GIF(gif)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    GIF(<span class="string">&quot;47494638396126026f01&quot;</span>,<span class="string">&quot;gif&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * TIFF(tif)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    TIF(<span class="string">&quot;49492a00227105008037&quot;</span>,<span class="string">&quot;tif&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 16色位图(bmp)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    BMP_16(<span class="string">&quot;424d228c010000000000&quot;</span>,<span class="string">&quot;bmp&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 24位位图(bmp)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    BMP_24(<span class="string">&quot;424d8240090000000000&quot;</span>,<span class="string">&quot;bmp&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 256色位图(bmp)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    BMP_256(<span class="string">&quot;424d8e1b030000000000&quot;</span>,<span class="string">&quot;bmp&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CAD(dwg)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    DWG(<span class="string">&quot;41433130313500000000&quot;</span>,<span class="string">&quot;dwg&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HTML(html)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    HTML(<span class="string">&quot;3c21444f435459504520&quot;</span>,<span class="string">&quot;html&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HTM(htm)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    HTM(<span class="string">&quot;3c21646f637479706520&quot;</span>,<span class="string">&quot;htm&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 猎聘、智联简历。htm</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    HTM_2(<span class="string">&quot;3c68746d6c20786d6c6e&quot;</span>,<span class="string">&quot;htm&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * css</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CSS(<span class="string">&quot;48544d4c207b0d0a0942&quot;</span>,<span class="string">&quot;css&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * js</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    JS(<span class="string">&quot;696b2e71623d696b2e71&quot;</span>,<span class="string">&quot;js&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * RichTextFormat(rtf)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RTF(<span class="string">&quot;7b5c727466315c616e73&quot;</span>,<span class="string">&quot;rtf&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Photoshop(psd)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PSD(<span class="string">&quot;38425053000100000000&quot;</span>,<span class="string">&quot;psd&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Email[OutlookExpress6](eml)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    EML(<span class="string">&quot;46726f6d3a203d3f6762&quot;</span>,<span class="string">&quot;eml&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * MSExcel注意：word、msi和excel的文件头一样</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    DOC(<span class="string">&quot;d0cf11e0a1b11ae10000&quot;</span>,<span class="string">&quot;doc&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * docx文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    DOCX(<span class="string">&quot;504b0304140006000800&quot;</span>,<span class="string">&quot;docx&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * MSAccess(mdb)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MDB(<span class="string">&quot;5374616E64617264204A&quot;</span>,<span class="string">&quot;mdb&quot;</span>),</span><br><span class="line">    PS(<span class="string">&quot;252150532D41646F6265&quot;</span>,<span class="string">&quot;ps&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AdobeAcrobat(pdf)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PDF(<span class="string">&quot;255044462d312e350d0a&quot;</span>,<span class="string">&quot;pdf&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * rmvb/rm相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RMVB(<span class="string">&quot;2e524d46000000120001&quot;</span>,<span class="string">&quot;rmvb&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * flv与f4v相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FLV(<span class="string">&quot;464c5601050000000900&quot;</span>,<span class="string">&quot;flv&quot;</span>),</span><br><span class="line">    MP4(<span class="string">&quot;00000020667479706d70&quot;</span>,<span class="string">&quot;mp4&quot;</span>),</span><br><span class="line">    MP3(<span class="string">&quot;49443303000000002176&quot;</span>,<span class="string">&quot;mp3&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MPG(<span class="string">&quot;000001ba210001000180&quot;</span>,<span class="string">&quot;mpg&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * wmv与asf相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    WMV(<span class="string">&quot;3026b2758e66cf11a6d9&quot;</span>,<span class="string">&quot;wmv&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Wave(wav)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    WAV(<span class="string">&quot;52494646e27807005741&quot;</span>,<span class="string">&quot;wav&quot;</span>),</span><br><span class="line">    AVI(<span class="string">&quot;52494646d07d60074156&quot;</span>,<span class="string">&quot;avi&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * MIDI(mid)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MID(<span class="string">&quot;4d546864000000060001&quot;</span>,<span class="string">&quot;mid&quot;</span>),</span><br><span class="line">    ZIP(<span class="string">&quot;504b0304140000000800&quot;</span>,<span class="string">&quot;zip&quot;</span>),</span><br><span class="line">    RAR(<span class="string">&quot;526172211a0700cf9073&quot;</span>,<span class="string">&quot;rar&quot;</span>),</span><br><span class="line">    INI(<span class="string">&quot;235468697320636f6e66&quot;</span>,<span class="string">&quot;ini&quot;</span>),</span><br><span class="line">    JAR(<span class="string">&quot;504b03040a0000000000&quot;</span>,<span class="string">&quot;jar&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 可执行文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    EXE(<span class="string">&quot;4d5a9000030000000400&quot;</span>,<span class="string">&quot;exe&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jsp文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    JSP(<span class="string">&quot;3c25402070616765206c&quot;</span>,<span class="string">&quot;jsp&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * MF文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MF(<span class="string">&quot;4d616e69666573742d56&quot;</span>,<span class="string">&quot;mf&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * xml文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    XML(<span class="string">&quot;3c3f786d6c2076657273&quot;</span>,<span class="string">&quot;xml&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sql文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SQL(<span class="string">&quot;494e5345525420494e54&quot;</span>,<span class="string">&quot;sql&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * java文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    JAVA(<span class="string">&quot;7061636b616765207765&quot;</span>,<span class="string">&quot;java&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bat文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    BAT(<span class="string">&quot;406563686f206f66660d&quot;</span>,<span class="string">&quot;bat&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * gz文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    GZ(<span class="string">&quot;1f8b0800000000000000&quot;</span>,<span class="string">&quot;gz&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bat文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PROPERTIES(<span class="string">&quot;6c6f67346a2e726f6f74&quot;</span>,<span class="string">&quot;properties&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bat文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CLASS(<span class="string">&quot;cafebabe0000002e0041&quot;</span>,<span class="string">&quot;class&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bat文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CHM(<span class="string">&quot;49545346030000006000&quot;</span>,<span class="string">&quot;chm&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * bat文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MXP(<span class="string">&quot;04000000010000001300&quot;</span>,<span class="string">&quot;mxp&quot;</span>),</span><br><span class="line">    TORRENT(<span class="string">&quot;6431303a637265617465&quot;</span>,<span class="string">&quot;torrent&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 51job简历。mht</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MHT(<span class="string">&quot;46726f6d3a3cd3c920cd&quot;</span>,<span class="string">&quot;mht&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Quicktime(mov)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MOV(<span class="string">&quot;6D6F6F76&quot;</span>,<span class="string">&quot;mov&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * WordPerfect(wpd)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    WPD(<span class="string">&quot;FF575043&quot;</span>,<span class="string">&quot;wpd&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * OutlookExpress(dbx)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    DBX(<span class="string">&quot;CFAD12FEC5FD746F&quot;</span>,<span class="string">&quot;dbx&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Outlook(pst)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PST(<span class="string">&quot;2142444E&quot;</span>,<span class="string">&quot;pst&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Quicken(qdf)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    QDF(<span class="string">&quot;AC9EBD8F&quot;</span>,<span class="string">&quot;qdf&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * WindowsPassword(pwl)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PWL(<span class="string">&quot;E3828596&quot;</span>,<span class="string">&quot;pwl&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * RealAudio(ram)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RAM(<span class="string">&quot;2E7261FD&quot;</span>,<span class="string">&quot;ram&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String code;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    FileType(String code, String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java使用Jsoup把html流转成Apache POI的EXCEL格式</title>
      <link href="/2020/01/16/java-html-to-excel/"/>
      <url>/2020/01/16/java-html-to-excel/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>一些银行导出的excel真实格式为html，这种情况无法导入到系统，所以要程序中转换一下格式</p><h3 id="通用方法"><a href="#通用方法" class="headerlink" title="通用方法"></a>通用方法</h3><p>主要逻辑：Jsoup解析html获取所有table对象的行和列生成二维数组，再根据二维数组生成Workbook对象</p><blockquote><p><strong>注意：</strong> 表头部分有时候是<code>&lt;th&gt;</code>标签</p></blockquote><p>如何根据数据流判断是否为html格式，请看另一篇文章：<a href="/2020/01/16/java-input-stream-get-file-type">Java获取文件真实格式</a></p><figure class="highlight java"><figcaption><span>PoiUtils.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * html格式的流转成xls格式的workbook</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Workbook <span class="title">getWorkbookByHtml</span><span class="params">(InputStream inputStream)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    Document document = Jsoup.parse(inputStream, <span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    ArrayList&lt;String[]&gt; dataList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Elements rows = document.getElementsByTag(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Element row : rows) &#123;</span><br><span class="line">        List&lt;String&gt; temp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Elements ths = row.getElementsByTag(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Element th : ths) &#123;</span><br><span class="line">            temp.add(th.text());</span><br><span class="line">        &#125;</span><br><span class="line">        Elements tds = row.getElementsByTag(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Element td : tds) &#123;</span><br><span class="line">            temp.add(td.text());</span><br><span class="line">        &#125;</span><br><span class="line">        String[] array = <span class="keyword">new</span> String[temp.size()];</span><br><span class="line">        temp.toArray(array);</span><br><span class="line">        dataList.add(array);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> getWorkbook(dataList);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二维数组生成workbook对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Workbook <span class="title">getWorkbook</span><span class="params">(ArrayList&lt;String[]&gt; dataList)</span> </span>&#123;</span><br><span class="line">    HSSFWorkbook result = <span class="keyword">new</span> HSSFWorkbook();</span><br><span class="line">    HSSFSheet sheet = result.createSheet(<span class="string">&quot;new sheet&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> rowNum = <span class="number">0</span>; rowNum &lt; dataList.size(); rowNum++) &#123;</span><br><span class="line">        String[] data = dataList.get(rowNum);</span><br><span class="line">        HSSFRow row = sheet.createRow(rowNum);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> columnNum = <span class="number">0</span>; columnNum &lt; data.length; columnNum++) &#123;</span><br><span class="line">            HSSFCell cell = row.createCell(columnNum);</span><br><span class="line">            cell.setCellValue(data[columnNum]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Jsoup </tag>
            
            <tag> Apache </tag>
            
            <tag> POI </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反射获取和修改成员变量</title>
      <link href="/2019/12/25/java-reflect/"/>
      <url>/2019/12/25/java-reflect/</url>
      
        <content type="html"><![CDATA[<p>特定的需求需要根据前端传的字段名称设置值，这时候使用反射比较方便</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 反射工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectionUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入的属性名字符串，获取对应的属性值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     *            属性名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     *            要获取的实例对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getField</span><span class="params">(String name, Object obj)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clazz = obj.getClass();</span><br><span class="line">        Field field = clazz.getDeclaredField(name);</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> field.get(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入的属性名字符串，修改对应的属性值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     *            属性名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     *            要修改的实例对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     *            修改后的新值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setField</span><span class="params">(String name, Object obj, Object value)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clazz = obj.getClass();</span><br><span class="line">        Field field = clazz.getDeclaredField(name);</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException </span>&#123;</span><br><span class="line">        IncomeTaxDeclarationMain a = <span class="keyword">new</span> IncomeTaxDeclarationMain();</span><br><span class="line">        a.row9 = BigDecimal.TEN;</span><br><span class="line">        IncomeTaxDeclarationMain b = <span class="keyword">new</span> IncomeTaxDeclarationMain();</span><br><span class="line">        setField(<span class="string">&quot;row9&quot;</span>, b, getField(<span class="string">&quot;row9&quot;</span>, a));</span><br><span class="line">        System.out.println(b.row9);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一条命令安装docker</title>
      <link href="/2019/12/18/docker-one-key/"/>
      <url>/2019/12/18/docker-one-key/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不搞那么复杂，就一行命令搞定：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -fSsL http://www.chenb.top/deploy/docker-install.sh)</span><br></pre></td></tr></table></figure></p><h3 id="脚本代码"><a href="#脚本代码" class="headerlink" title="脚本代码"></a>脚本代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># install docker</span></span><br><span class="line"><span class="comment"># bash &lt;(curl -fSsL http://www.chenb.top/deploy/docker-install.sh)</span></span><br><span class="line"></span><br><span class="line">now=`date +%s`</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">log</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;[<span class="subst">$((`date +%s` - now )</span>)] ## <span class="variable">$@</span> ##&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;Installation start at `date`&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check</span></span><br><span class="line">[[ `whoami` != <span class="string">&quot;root&quot;</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Root Privilege needed, use sudo please.&quot;</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line">OS=`awk -F= <span class="string">&#x27;/^NAME/&#123;print $2&#125;&#x27;</span> /etc/os-release | sed <span class="string">&quot;s/\&quot;//g&quot;</span>`</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$OS</span>&quot;</span> == <span class="string">&quot;Ubuntu&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">  :</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$OS</span>&quot;</span> == <span class="string">&quot;CentOS Linux&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">  OS=<span class="string">&quot;CentOS&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Unknown OS: \&quot;<span class="variable">$OS</span>\&quot;, exit&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install docker</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;install and upgrade docker&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$OS</span>&quot;</span> == <span class="string">&quot;Ubuntu&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">  apt-get update</span><br><span class="line">  apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line">  curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | apt-key add -</span><br><span class="line">  add-apt-repository -u <span class="string">&quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line">  apt-get -y install docker-ce</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$OS</span>&quot;</span> == <span class="string">&quot;CentOS&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">  yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">  yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">  yum makecache fast</span><br><span class="line">  yum -y install docker-ce</span><br><span class="line">  systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl start docker  </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># congifure mirror and insecure registries</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;congifure mirror and insecure registries&quot;</span></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [&quot;https://m.mirror.aliyuncs.com&quot;]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;Installation end at `date`&quot;</span></span><br></pre></td></tr></table></figure><h3 id="启动Jenkins的命令"><a href="#启动Jenkins的命令" class="headerlink" title="启动Jenkins的命令"></a>启动Jenkins的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">  --name jenkins \</span><br><span class="line">  -d \</span><br><span class="line">  -u root \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -v jenkins-data:/var/jenkins_home \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  -v /usr/bin/docker:/usr/bin/docker \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -v <span class="string">&quot;<span class="variable">$HOME</span>&quot;</span>:/home \</span><br><span class="line">  -m 2g \</span><br><span class="line">  jenkins/jenkins:2.401.1</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>GitHub项目地址：<a href="https://github.com/chenbin-353549444/deploy">https://github.com/chenbin-353549444/deploy</a><br>参考别人的项目：<a href="https://github.com/wrfly/k8s-install.sh">https://github.com/wrfly/k8s-install.sh</a><br>官网安装链接：<a href="https://docs.docker.com/install/linux/docker-ce/centos/">https://docs.docker.com/install/linux/docker-ce/centos/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker定制镜像</title>
      <link href="/2019/12/03/docker-java-mysql-redis/"/>
      <url>/2019/12/03/docker-java-mysql-redis/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>项目新增了redis相关的依赖后，变的越来越庞大，部署也很麻烦了，CTO想把这些环境都打包到一个镜像中去做一个mini版本，用于测试和客户的临时试用。<br>这样做似乎违背了Docker一个容器内只有一个主进程的设计原则，但是能让初学者低门槛使用镜像，也是有些作用的。</p><h3 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h3><ul><li><code>Dockerfile</code> :镜像构建脚本，环境安装和初始化，只运行一次</li><li><code>docker-entrypoint.sh</code> :容器入口脚本，开启服务，每次启动容器都会运行</li><li><code>mysql-init.sh</code> :MySQL初始化脚本，在构建镜像时调用</li><li><code>mysql.cnf</code> <code>mysqld.cnf</code> :MySQL配置文件</li><li><code>schema.sql</code> <code>data.sql</code> :MySQL初始化sql文件，表结构和预置数据</li><li><code>Jenkinsfile</code> :持续集成脚本</li></ul><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>选择Ubuntu作为基础镜像安装软件非常方便，以后也好扩展<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get install -y redis-server \</span></span><br><span class="line"><span class="bash">                       openjdk-8-jdk \</span></span><br><span class="line"><span class="bash">                       mysql-server \</span></span><br><span class="line"><span class="bash">                       mysql-client</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> miniFund/docker-entrypoint.sh /docker-entrypoint.sh</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> miniFund/mysql-init.sh /mysql-init.sh</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> miniFund/mysql.cnf /etc/mysql/conf.d/mysql.cnf</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> miniFund/mysqld.cnf /etc/mysql/mysql.conf.d/mysqld.cnf</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> src/main/resources/db/migration/V1.0__schema.sql schema.sql</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> src/main/resources/db/migration/V1.1__import_presetTable_data.sql data.sql</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> target/efi-1.0.jar app.jar</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod 777 /docker-entrypoint.sh &amp;&amp; chmod 777 /mysql-init.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> [<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;/mysql-init.sh&quot;</span>]</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;/docker-entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure></p><h3 id="docker-entrypoint-sh"><a href="#docker-entrypoint-sh" class="headerlink" title="docker-entrypoint.sh"></a>docker-entrypoint.sh</h3><p>docker-entrypoint.sh是容器入口脚本，里面可以启动服务，需要注意：前几条是后台启动，最后一条要前台启动，不然容器会自动退出<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 启动mysql</span></span><br><span class="line">/etc/init.d/mysql <span class="built_in">start</span></span><br><span class="line"><span class="comment"># 启动redis</span></span><br><span class="line">redis<span class="literal">-server</span> &amp;</span><br><span class="line"><span class="comment"># 启动java</span></span><br><span class="line">java <span class="literal">-Duser</span>.timezone=Asia/Shanghai <span class="literal">-Djava</span>.security.egd=file:/dev/./urandom <span class="literal">-Dspring</span>.profiles.active=mini <span class="literal">-jar</span> /app.jar</span><br></pre></td></tr></table></figure></p><h3 id="mysql-init-sh"><a href="#mysql-init-sh" class="headerlink" title="mysql-init.sh"></a>mysql-init.sh</h3><p>mysql-init.sh是MySQL初始化脚本，包括设置root密码，权限，数据库初始化，编码设置等操作<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">## mysql初始化脚本</span></span><br><span class="line">/etc/init.d/mysql <span class="built_in">start</span></span><br><span class="line">mysql &lt;&lt;&lt;<span class="string">&quot;CREATE DATABASE IF NOT EXISTS efi CHARACTER SET &#x27;utf8mb4&#x27; COLLATE &#x27;utf8mb4_general_ci&#x27;;&quot;</span></span><br><span class="line">mysql efi &lt; schema.sql</span><br><span class="line">mysql efi &lt; data.sql</span><br><span class="line">mysql &lt;&lt;&lt;<span class="string">&quot;update mysql.user set authentication_string=PASSWORD(&#x27;123456&#x27;), plugin=&#x27;mysql_native_password&#x27;, host=&#x27;%&#x27; where user=&#x27;root&#x27;;flush privileges;&quot;</span></span><br><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure></p><ul><li>这里的root密码设置的很简单，host也设置成了%，是为了跑压力测试软件用的，如果是给客户试用就不用开MySQL访问权限了。</li><li>主要解决问题：权限、编码、交互式脚本</li><li><code>schema.sql</code>是表结构，<code>data.sql</code>是预置数据</li></ul><h3 id="MySQL配置文件"><a href="#MySQL配置文件" class="headerlink" title="MySQL配置文件"></a>MySQL配置文件</h3><p><code>mysql.cnf</code>: /etc/mysql/conf.d/mysql.cnf<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">mysql</span>]</span><br><span class="line"><span class="comment"># 添加编码设置</span></span><br><span class="line"><span class="string">default-character-set=utf8</span></span><br></pre></td></tr></table></figure><br><code>mysqld.cnf</code>: /etc/mysql/mysql.conf.d/mysqld.cnf<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"><span class="comment"># 去掉host限制</span></span><br><span class="line"><span class="comment"># bind-address = 127.0.0.1</span></span><br><span class="line"><span class="comment"># 添加编码设置</span></span><br><span class="line"><span class="string">character-set-server=utf8</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><br>编码查看语句：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%char%&#x27;</span>;</span><br></pre></td></tr></table></figure></p><h3 id="Jenkinsfile"><a href="#Jenkinsfile" class="headerlink" title="Jenkinsfile"></a>Jenkinsfile</h3><p>持续集成脚本，先构建jar包，再构建minifund镜像<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!groovy</span><br><span class="line">pipeline &#123;</span><br><span class="line">    agent none</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Build&#x27;</span>) &#123;</span><br><span class="line">            agent &#123;</span><br><span class="line">                docker &#123;</span><br><span class="line">                    image <span class="string">&#x27;maven:3.5.0-jdk-8-alpine&#x27;</span></span><br><span class="line">                    args <span class="string">&#x27;-v mavenRepository:/root/.m2 -e TZ=Asia/Shanghai&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;mvn -B -DskipTests clean package --settings settings.xml&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;Deliver&#x27;</span>) &#123;</span><br><span class="line">            agent any</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;docker build -f miniFund/Dockerfile -t minifund .&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="容器使用"><a href="#容器使用" class="headerlink" title="容器使用"></a>容器使用</h3><p>按上面的脚本构建出的minifund镜像，直接启动就有一个完整的后端环境了，使用者不用关心redis和mysql的部署，学习成本较低<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8088:8088 -p 7654:3306 --name mini minifund</span><br></pre></td></tr></table></figure></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>构建好的镜像保证50人正常使用时要占1G内存，降低资源消耗需要长期的各种优化，当硬件环境有限制的时候，代码的问题就会显示出来了。<br>另外，大杂烩还是微服务，这是个问题</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MySQL </tag>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot集成分布式锁Redisson</title>
      <link href="/2019/10/10/spring-boot-redisson/"/>
      <url>/2019/10/10/spring-boot-redisson/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>引入锁机制后基本满足了软件的并发需求，但是也有一些问题：</p><ol><li>系统变慢了，当用户进行一些慢速的修改操作时（导入，批量等），其他用户进行同类操作需要等待解锁，为了解决这个问题，需要结合业务实际情况细化锁的粒度</li><li>不同的服务之间不能共享锁，导致分布式的环境小概率出现并发问题</li></ol><p>之前的互斥锁：<a href="/2019/05/21/spring-boot-aop-lock">自定义注解+AOP实现互斥锁</a><br>以上情况随着业务量的增加会越来越明显，简单的互斥锁预计只能撑到年底，所以需要引入Redisson</p><h3 id="改进互斥锁方案"><a href="#改进互斥锁方案" class="headerlink" title="改进互斥锁方案"></a>改进互斥锁方案</h3><p>最初的想法是改进原先的互斥锁，细化锁的粒度，简单的说就是各人取个人的锁。那么需要自己写存入锁和取出锁的规则，还要考虑很多并发的情况，属于造轮子。<br>后来CTO建议我用Redisson，了解后发现完美解决了问题，于是放弃了这个方案。</p><h3 id="关于Redis"><a href="#关于Redis" class="headerlink" title="关于Redis"></a>关于Redis</h3><p>由于Redisson是基于Redis的，所以要先部署Redis，和其他应用一样，直接开一个Docker容器就行了，参考<a href="https://hub.docker.com/_/redis">DockerHub Redis</a></p><blockquote><p>注意：最初是在自己服务器上测试的，redis容器没加密码，结果过几天就被挖矿了，于是老老实实加上密码</p></blockquote><p>redis加密码：redis.conf中修改两行<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把host限制注释掉</span></span><br><span class="line"><span class="string">bind</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment"># 打开密码设置</span></span><br><span class="line"><span class="string">requirepass</span> <span class="string">XXXXXXXX</span></span><br></pre></td></tr></table></figure><br><strong><code>推荐:</code></strong> Windows上的免费Redis可视化工具  <a href="http://electronjs.org/apps/anotherredisdesktopmanager">AnotherRedisDesktopManager</a><br><strong><code>收藏:</code></strong> Windows上Redis的安装包  <a href="https://www.nuget.org/packages/Redis-64/3.0.500">Redis-64</a></p><h3 id="添加Maven依赖"><a href="#添加Maven依赖" class="headerlink" title="添加Maven依赖"></a>添加Maven依赖</h3><p>pom.xml中添加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.11.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="添加Redisson配置类"><a href="#添加Redisson配置类" class="headerlink" title="添加Redisson配置类"></a>添加Redisson配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenbin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedissonConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;redisson.address&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedissonClient <span class="title">getRedisson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Config config = <span class="keyword">new</span> Config();</span><br><span class="line">        config.useSingleServer().setAddress(address);</span><br><span class="line">        config.useSingleServer().setPassword(<span class="string">&quot;XXXXXXXX&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Redisson.create(config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于每个环境redis地址不同，把地址放到对应的配置文件中了<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">redisson.address</span>=<span class="string">redis://127.0.0.1:6379</span></span><br></pre></td></tr></table></figure></p><h3 id="新版的切面代码"><a href="#新版的切面代码" class="headerlink" title="新版的切面代码"></a>新版的切面代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 同步锁 AOP</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenbin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Profile(NOT_DEVELOPMENT)</span></span><br><span class="line"><span class="meta">@Scope</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LockAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.profiles.active&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String active;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Service层切点     用于记录错误日志</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hongfund.efi.service.lock.ServiceLock)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lockAspect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;lockAspect()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();</span><br><span class="line">        String accountBookId = request.getHeader(<span class="string">&quot;accountBookId&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(accountBookId)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">&quot;账套校验失败!&quot;</span>, ErrorCode.BAD_REQUEST);</span><br><span class="line">        &#125;</span><br><span class="line">        RLock lock = redissonClient.getLock(active + <span class="string">&quot;_&quot;</span> + accountBookId);</span><br><span class="line">        <span class="keyword">boolean</span> res = lock.tryLock(<span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">        Object obj;</span><br><span class="line">        <span class="keyword">if</span> (res) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                obj = joinPoint.proceed();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">&quot;其他用户正在操作，请等待!&quot;</span>, ErrorCode.BAD_REQUEST);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里根据业务情况把锁细化到账套级别</li><li>为防止本地环境报错，设置为非测试环境过滤</li><li>更新后暂时没问题，还需要测试性能和参数调优后再决定是否上线</li></ul><p><strong><code>参考:</code></strong>  <a href="https://github.com/redisson/redisson/wiki">Redisson官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Redis </tag>
            
            <tag> Redisson </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node语音识别</title>
      <link href="/2019/06/26/node-ffmpeg/"/>
      <url>/2019/06/26/node-ffmpeg/</url>
      
        <content type="html"><![CDATA[<h2 id="语音识别（支持pcm和m4a）"><a href="#语音识别（支持pcm和m4a）" class="headerlink" title="语音识别（支持pcm和m4a）"></a>语音识别（支持pcm和m4a）</h2><p>测试： <a href="http://web.chenb.top">http://web.chenb.top</a><br>Github项目： <a href="https://github.com/chenbin-353549444/node-ffmpeg">https://github.com/chenbin-353549444/node-ffmpeg</a></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>使用百度的语音识别接口，用FFMPEG转音频文件</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>修改server.js的<code>API Key</code>和<code>Secret Key</code><br>在安装好Docker的机器上运行<code>sh run.sh</code>，如果有Jenkins可以直接新建管道构建<br>完成后访问测试页面(<a href="http://127.0.0.1:80/index.htm">http://127.0.0.1:80/index.htm</a>)<br><img src="/images/view.jpg" alt=""></p><h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><p>server.js<br><figure class="highlight javascript"><figcaption><span>1.8</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> ffmpeg = <span class="built_in">require</span>(<span class="string">&#x27;fluent-ffmpeg&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> app = express();</span><br><span class="line"><span class="keyword">let</span> AipSpeech = <span class="built_in">require</span>(<span class="string">&quot;baidu-aip-sdk&quot;</span>).speech;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 百度语音应用后台中的`API Key`和`Secret Key`</span></span><br><span class="line"><span class="keyword">let</span> client = <span class="keyword">new</span> AipSpeech(<span class="number">0</span>, <span class="string">&#x27;API Key&#x27;</span>, <span class="string">&#x27;Secret Key&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> multer  = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">&#x27;/public&#x27;</span>, express.static(<span class="string">&#x27;public&#x27;</span>));</span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(multer(&#123; <span class="attr">dest</span>: <span class="string">&#x27;/tmp/&#x27;</span>&#125;).array(<span class="string">&#x27;buf&#x27;</span>));</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.sendFile( __dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;index.htm&quot;</span> );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/pcm&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.writeHead(<span class="number">200</span>,&#123;<span class="string">&#x27;Content-Type&#x27;</span>:<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>&#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(req.files[<span class="number">0</span>]);  <span class="comment">// 上传的文件信息</span></span><br><span class="line">    fs.readFile( req.files[<span class="number">0</span>].path, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> voiceBase64 = <span class="keyword">new</span> Buffer(data);</span><br><span class="line">        client.recognize(voiceBase64, <span class="string">&#x27;pcm&#x27;</span>, <span class="number">16000</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">            res.end(<span class="built_in">JSON</span>.stringify(result));</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            res.end(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/m4a&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.writeHead(<span class="number">200</span>,&#123;<span class="string">&#x27;Content-Type&#x27;</span>:<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>&#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(req);  <span class="comment">// 上传的文件信息</span></span><br><span class="line">    <span class="keyword">let</span> voiceBase64 = <span class="keyword">new</span> Buffer(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> command = ffmpeg(req.files[<span class="number">0</span>].path)</span><br><span class="line">        .noVideo()</span><br><span class="line">        .inputFormat(<span class="string">&#x27;m4a&#x27;</span>)</span><br><span class="line">        .audioCodec(<span class="string">&#x27;pcm_s16le&#x27;</span>)</span><br><span class="line">        .audioBitrate(<span class="number">16</span>)</span><br><span class="line">        .audioFrequency(<span class="number">16000</span>)</span><br><span class="line">        .audioChannels(<span class="number">1</span>)</span><br><span class="line">        .format(<span class="string">&#x27;s16le&#x27;</span>)</span><br><span class="line">        .on(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;An error occurred: &#x27;</span> + err.message);</span><br><span class="line">        &#125;)</span><br><span class="line">        .on(<span class="string">&#x27;end&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;success&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="keyword">let</span> ffstream = command.pipe();</span><br><span class="line">    ffstream.on(<span class="string">&#x27;data&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">        voiceBase64 = Buffer.concat([voiceBase64, <span class="keyword">new</span> Buffer(chunk)]);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;ffmpeg just wrote &#x27;</span> + chunk.length + <span class="string">&#x27; bytes&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    ffstream.on(<span class="string">&#x27;end&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;data &#x27;</span> + voiceBase64.length + <span class="string">&#x27; bytes&#x27;</span>);</span><br><span class="line">        client.recognize(voiceBase64, <span class="string">&#x27;pcm&#x27;</span>, <span class="number">16000</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">            res.end(<span class="built_in">JSON</span>.stringify(result));</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            res.end(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> server = app.listen(<span class="number">80</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> host = server.address().address;</span><br><span class="line">    <span class="keyword">var</span> port = server.address().port;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;应用实例，访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>百度接口文档:(<a href="http://ai.baidu.com/docs#/ASR-Online-Node-SDK/8b3186c3">http://ai.baidu.com/docs#/ASR-Online-Node-SDK/8b3186c3</a>)<br>node-fluent-ffmpeg:(<a href="https://github.com/fluent-ffmpeg/node-fluent-ffmpeg#creating-an-ffmpeg-command">https://github.com/fluent-ffmpeg/node-fluent-ffmpeg#creating-an-ffmpeg-command</a>)<br>FFMPEG:(<a href="http://www.ffmpeg.org">http://www.ffmpeg.org</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot 自定义注解+AOP实现互斥锁</title>
      <link href="/2019/05/21/spring-boot-aop-lock/"/>
      <url>/2019/05/21/spring-boot-aop-lock/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>随着业务量的不断增长，并发问题时有出现，要解决这些问题需要引入锁机制</p><h3 id="同步关键字解决方案"><a href="#同步关键字解决方案" class="headerlink" title="同步关键字解决方案"></a>同步关键字解决方案</h3><p>最初在方法上加同步关键字<code>synchronized</code>，这种方式只能限制同一个类中的方法，不同类中的方法仍然可以并发<br>那么可以使用同步代码块解决该问题，定义一个公共的锁，然后在需要同步的方法开始和结束加上同步代码块，这样就能解决问题了，但是这种写法很繁琐，需要每个方法头尾去加代码，由此想到了AOP和自定义注解</p><h3 id="定义锁注解"><a href="#定义锁注解" class="headerlink" title="定义锁注解"></a>定义锁注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.PARAMETER, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ServiceLock &#123;</span><br><span class="line">    <span class="function">String <span class="title">description</span><span class="params">()</span> <span class="keyword">default</span> &quot;service lock&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AOP切面"><a href="#AOP切面" class="headerlink" title="AOP切面"></a>AOP切面</h3><p>在Service层定义切面，方法执行前后分别加锁和解锁，使用时需要同步的方法加上<code>@ServiceLock</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 同步锁 AOP</span></span><br><span class="line"><span class="comment"> * https://docs.spring.io/spring/docs/4.3.14.RELEASE/spring-framework-reference/htmlsingle/#transaction-declarative-annotations</span></span><br><span class="line"><span class="comment"> * https://docs.spring.io/spring/docs/4.3.14.RELEASE/javadoc-api/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Scope</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LockAspect</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 互斥锁 参数默认false，不公平锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Lock lock = <span class="keyword">new</span> ReentrantLock(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Service层切点     用于记录错误日志</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.xxx.xxx.service.lock.ServiceLock)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lockAspect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;lockAspect()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        Object obj;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            obj = joinPoint.proceed();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现数学公式计算</title>
      <link href="/2019/05/20/java-rpn/"/>
      <url>/2019/05/20/java-rpn/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>最近国家税务政策变动，财务报表需要更新公式和格式了，这类更新经常会发生，为了以后维护方便，想到了解析字符串格式的数学公式。查阅了一下资料，可以用逆波兰表达式实现。</p><h3 id="中缀表达式转后缀表达式"><a href="#中缀表达式转后缀表达式" class="headerlink" title="中缀表达式转后缀表达式"></a>中缀表达式转后缀表达式</h3><p>中缀表达式：平常见到的表达式，如<code>3+(5*(6-1/2))</code><br>后缀表达式：即逆波兰表达式，指的是不包含括号，运算符放在两个运算对象的后面，所有的计算按运算符出现的顺序，严格从左向右进行（不再考虑运算符的优先规则），既然没了运算符的优先规则，那么计算机解析起来自然容易的多。上面的中缀表达式对应的后缀表达式<code>[3, 5, 6, 1, 2, /, -, *, +]</code><br>解析公式需要先将通俗的中缀表达式转化成后缀表达式，具体算法如下：</p><ul><li>首先设置运算符的优先级（这样设置也是为了简化程序）： <ul><li><code>null</code> 栈顶若为空，假设优先级为0</li><li><code>左括号</code> 优先级设为1</li><li><code>+-</code> 优先级设为2</li><li><code>*/</code> 优先级设为3</li></ul></li><li>从左向右遍历中缀表达式<ul><li>遇到数字直接输出</li><li>遇到符号 <ul><li>遇到左括号，直接压栈</li><li>遇到右括号，弹栈输出直到弹出左括号（左括号不输出）</li><li>遇到运算符，比较栈顶符号，若该运算符优先级大于栈顶，直接压栈；若小于栈顶，弹栈输出直到大于栈顶，然后将改运算符压栈。</li></ul></li></ul></li><li>最后将符合栈弹栈并输出</li></ul><h3 id="后缀表达式计算结果"><a href="#后缀表达式计算结果" class="headerlink" title="后缀表达式计算结果"></a>后缀表达式计算结果</h3><ul><li>从左往右遍历</li><li>遇到数字直接放入容器</li><li>遇到运算符，将最后两个数字取出，进行该运算，将结果再放入容器</li><li>遍历结束后，容器中的数字即为运算结果</li></ul><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p>以上算法不难实现，下面是我修改后的工具类，可以计算浮点数的公式，精确到2位有效数字<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.hongfund.efi.utils.RegExpUtil.FLOAT_NUMBER;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.math.BigDecimal.ZERO;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.math.RoundingMode.HALF_UP;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数学公式计算</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenbin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RpnUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; test = Arrays.asList(<span class="string">&quot;3 + ( 5 * ( 6 - 1 / 2 ) )&quot;</span>.split(<span class="string">&quot; &quot;</span>));</span><br><span class="line">        System.out.println(getRpn(test));</span><br><span class="line">        System.out.println(calculate(test));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算指定公式的数值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">calculate</span><span class="params">(List&lt;String&gt; formulaList)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; rpn = getRpn(formulaList);</span><br><span class="line">        <span class="keyword">return</span> calculateRpn(rpn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 中序转后序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getRpn</span><span class="params">(List&lt;String&gt; formulaList)</span> </span>&#123;</span><br><span class="line">        Stack&lt;String&gt; operators=<span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String formula : formulaList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (formula.matches(FLOAT_NUMBER)) &#123;</span><br><span class="line">                result.add(formula);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (formula.equals(<span class="string">&quot;(&quot;</span>)) &#123;</span><br><span class="line">                operators.push(formula);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (formula.equals(<span class="string">&quot;)&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">while</span> (!operators.peek().equals(<span class="string">&quot;(&quot;</span>)) &#123;</span><br><span class="line">                    result.add(operators.pop());</span><br><span class="line">                &#125;</span><br><span class="line">                operators.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (operators.size() != <span class="number">0</span> &amp;&amp; getLevel(operators.peek()) &gt;= getLevel(formula)) &#123;</span><br><span class="line">                    result.add(operators.pop());</span><br><span class="line">                &#125;</span><br><span class="line">                operators.push(formula);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (operators.size() != <span class="number">0</span>) &#123;</span><br><span class="line">            result.add(operators.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 逆序计算结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">calculateRpn</span><span class="params">(List&lt;String&gt; formulaList)</span> </span>&#123;</span><br><span class="line">        Stack&lt;BigDecimal&gt; s=<span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String formula : formulaList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (formula.matches(FLOAT_NUMBER)) &#123;</span><br><span class="line">                s.push(BigDecimalUtils.getDecimalValue(formula));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                BigDecimal b = s.pop();</span><br><span class="line">                BigDecimal a = s.pop();</span><br><span class="line">                BigDecimal temp = ZERO;</span><br><span class="line">                <span class="keyword">switch</span> (formula) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;+&quot;</span> : temp = a.add(b);<span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;-&quot;</span> : temp = a.subtract(b);<span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;*&quot;</span> : temp = a.multiply(b);<span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;/&quot;</span> : temp = a.divide(b, <span class="number">2</span>, HALF_UP);<span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&quot;max&quot;</span> : temp = a.max(b);<span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                s.push(temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> FormatUtils.DECIMAL_FORMAT_2.format(s.pop());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 运算符优先级</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getLevel</span><span class="params">(String operator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(operator)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (operator) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;(&quot;</span> : <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;+&quot;</span> :</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;-&quot;</span> : <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;*&quot;</span> :</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/&quot;</span> :</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;max&quot;</span> : <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">default</span> : <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="判断浮点数的正则"><a href="#判断浮点数的正则" class="headerlink" title="判断浮点数的正则"></a>判断浮点数的正则</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 正则表达式工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExpUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 匹配浮点数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FLOAT_NUMBER = <span class="string">&quot;^(-?\\d+)(\\.\\d+)?$&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Data JPA解决批量修改与唯一索引冲突的问题</title>
      <link href="/2019/04/23/spring-data-jpa-multi-modify-unique-index/"/>
      <url>/2019/04/23/spring-data-jpa-multi-modify-unique-index/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>最近发现数据库凭证表中有脏数据（数量不多，直接手动修复了），于是想到了加唯一索引，加上之后发现有个批量修改的地方不能用了，报索引冲突问题，只能先撤回想解决办法</p><h3 id="索引规约"><a href="#索引规约" class="headerlink" title="索引规约"></a>索引规约</h3><p><code>强制</code> 业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。<br>说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的；另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>发现JPA中的save方法不会发送sql更新语句，要等事务提交或者有新的查询语句需要用到之前修改的数据时才会更新到数据库，于是查阅资料和源码后找到了flush方法。详细解决见代码</p><h3 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*凭证表*/</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> voucher;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> voucher(</span><br><span class="line">id <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">account_book_id <span class="type">bigint</span>,</span><br><span class="line">accessory_no <span class="type">int</span>,</span><br><span class="line">audit_date <span class="type">date</span>,</span><br><span class="line">audit_person <span class="type">varchar</span>(<span class="number">32</span>),</span><br><span class="line">cash_flow_flag <span class="type">int</span>,</span><br><span class="line">category <span class="type">int</span>,</span><br><span class="line">dftotal <span class="type">decimal</span>(<span class="number">14</span>,<span class="number">2</span>),</span><br><span class="line">isassigned <span class="type">int</span>,</span><br><span class="line">jftotal <span class="type">decimal</span>(<span class="number">14</span>,<span class="number">2</span>),</span><br><span class="line">operator <span class="type">int</span>,</span><br><span class="line"><span class="keyword">period</span> <span class="type">varchar</span>(<span class="number">64</span>),</span><br><span class="line">remark <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">state <span class="type">int</span>,</span><br><span class="line">voucher_date <span class="type">date</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">voucher_no <span class="type">varchar</span>(<span class="number">64</span>),</span><br><span class="line">written_date <span class="type">TIMESTAMP</span> <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">written_person <span class="type">varchar</span>(<span class="number">32</span>),</span><br><span class="line"><span class="keyword">primary</span> <span class="keyword">key</span> (id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index UK_voucher <span class="keyword">on</span> voucher(account_book_id, <span class="keyword">period</span>, voucher_no);</span><br></pre></td></tr></table></figure><h3 id="原来的逻辑"><a href="#原来的逻辑" class="headerlink" title="原来的逻辑"></a>原来的逻辑</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String voucherNo = voucherDto.voucherNo;</span><br><span class="line"><span class="comment">// 之后的每张凭证号加一，如果下一张凭证号不重复了就跳出</span></span><br><span class="line"><span class="keyword">for</span> (Voucher v : vouchers) &#123;</span><br><span class="line">    <span class="keyword">if</span> (v.voucherNo.equals(voucherNo)) &#123;</span><br><span class="line">        voucherNo = getNextNo(voucherNo, VOUCHER_NO_LENGTH);</span><br><span class="line">        v.voucherNo = voucherNo;</span><br><span class="line">        voucherDao.save(v);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改后的逻辑"><a href="#修改后的逻辑" class="headerlink" title="修改后的逻辑"></a>修改后的逻辑</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String voucherNo = voucherDto.voucherNo;</span><br><span class="line">List&lt;Voucher&gt; needToSaveVouchers = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="comment">// 之后的每张凭证号加一，如果下一张凭证号不重复了就跳出</span></span><br><span class="line"><span class="keyword">for</span> (Voucher v : vouchers) &#123;</span><br><span class="line">    <span class="keyword">if</span> (v.voucherNo.equals(voucherNo)) &#123;</span><br><span class="line">        voucherNo = getNextNo(voucherNo, VOUCHER_NO_LENGTH);</span><br><span class="line">        needToSaveVouchers.add(<span class="number">0</span>, v);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 从后往前改，防止唯一索引重复</span></span><br><span class="line"><span class="keyword">for</span> (Voucher v : needToSaveVouchers) &#123;</span><br><span class="line">    v.voucherNo = getNextNo(v.voucherNo, VOUCHER_NO_LENGTH);</span><br><span class="line">    voucherDao.saveAndFlush(v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>flush,saveAndFlush会刷新当前session中所有持久化对象的状态到数据库，所以在调用时要考虑别的持久化对象的状态</li><li>保存顺序不是按照list的顺序，所以要手动控制</li><li>flush,saveAndFlush需要dao继承<code>JpaRepository</code>才能使用</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Spring Data JPA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git提交规范，GitHub表情规范指南</title>
      <link href="/2019/04/11/git-commit-emoji/"/>
      <url>/2019/04/11/git-commit-emoji/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>使用git很久了一直都随便写commit信息，导致查看历史时比较混乱，所以搜集了网上的提交规范，摘录到这里备用</p><h3 id="提交规范"><a href="#提交规范" class="headerlink" title="提交规范"></a>提交规范</h3><p>格式：括号中部分的可以省略<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>(<span class="tag">&lt;<span class="name">scope</span>&gt;</span>): <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BLANK</span> <span class="attr">LINE</span>&gt;</span></span><br><span class="line">(<span class="tag">&lt;<span class="name">body</span>&gt;</span>)</span><br><span class="line"><span class="tag">&lt;<span class="name">BLANK</span> <span class="attr">LINE</span>&gt;</span></span><br><span class="line">(<span class="tag">&lt;<span class="name">footer</span>&gt;</span>)</span><br></pre></td></tr></table></figure></p><ul><li>header: 只有一行，包括三个字段：type、scope、subject<ul><li>type: 提交的类别</li><li>scope: 影响的范围，比如数据层、控制层、视图层等等（可空）</li><li>subject: 描述</li></ul></li><li>body: 提交的类别（可空）</li><li>footer: 不兼容变动、Close Issue、Revert等</li></ul><p>type的类型：</p><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>feat</td><td>新功能（feature）</td></tr><tr><td>fix</td><td>修补bug</td></tr><tr><td>docs</td><td>文档（documentation）</td></tr><tr><td>style</td><td>格式（不影响代码运行的变动）</td></tr><tr><td>refactor</td><td>重构（即不是新增功能，也不是修改bug的代码变动）</td></tr><tr><td>test</td><td>增加测试</td></tr><tr><td>chore</td><td>构建过程或辅助工具的变动</td></tr></tbody></table><h3 id="GitHub表情指南"><a href="#GitHub表情指南" class="headerlink" title="GitHub表情指南"></a>GitHub表情指南</h3><table><thead><tr><th>emoji</th><th>emoji 代码</th><th>commit 说明</th></tr></thead><tbody><tr><td>🎉 (庆祝)</td><td>:tada:</td><td>初次提交</td></tr><tr><td>✨ (火花)</td><td>:sparkles:</td><td>引入新功能</td></tr><tr><td>🔖 (书签)</td><td>:bookmark:</td><td>发行/版本标签</td></tr><tr><td>🐛 (bug)</td><td>:bug:</td><td>修复 bug</td></tr><tr><td>🚑 (急救车)</td><td>:ambulance:</td><td>重要补丁</td></tr><tr><td>🌐 (地球)</td><td>:globe_with_meridians:</td><td>国际化与本地化</td></tr><tr><td>💄 (口红)</td><td>:lipstick:</td><td>更新 UI 和样式文件</td></tr><tr><td>🎬 (场记板)</td><td>:clapper:</td><td>更新演示/示例</td></tr><tr><td>🚨 (警车灯)</td><td>:rotating_light:</td><td>移除 linter 警告</td></tr><tr><td>🔧 (扳手)</td><td>:wrench:</td><td>修改配置文件</td></tr><tr><td>➕ (加号)</td><td>:heavy_plus_sign:</td><td>增加一个依赖</td></tr><tr><td>➖ (减号)</td><td>:heavy_minus_sign:</td><td>减少一个依赖</td></tr><tr><td>⬆️ (上升箭头)</td><td>:arrow_up:</td><td>升级依赖</td></tr><tr><td>⬇️ (下降箭头)</td><td>:arrow_down:</td><td>降级依赖</td></tr><tr><td>⚡️ (闪电)</td><td>:zap:</td><td>提升性能</td></tr><tr><td>🐎 (赛马)</td><td>:racehorse:</td><td>提升性能</td></tr><tr><td>📈 (上升趋势图)</td><td>:chart_with_upwards_trend:</td><td>添加分析或跟踪代码</td></tr><tr><td>🚀 (火箭)</td><td>:rocket:</td><td>部署功能</td></tr><tr><td>✅ (白色复选框)</td><td>:white_check_mark:</td><td>增加测试</td></tr><tr><td>📝 (备忘录)</td><td>:memo:</td><td>撰写文档</td></tr><tr><td>🔨 (锤子)</td><td>:hammer:</td><td>重大重构</td></tr><tr><td>🎨 (调色板)</td><td>:art:</td><td>改进代码结构/代码格式</td></tr><tr><td>🔥 (火焰)</td><td>:fire:</td><td>移除代码或文件</td></tr><tr><td>✏️ (铅笔)</td><td>:pencil2:</td><td>修复 typo</td></tr><tr><td>🚧 (施工)</td><td>:construction:</td><td>工作进行中</td></tr><tr><td>👷 (工人)</td><td>:construction_worker:</td><td>添加 CI 构建系统</td></tr><tr><td>💚 (绿心)</td><td>:green_heart:</td><td>修复 CI 构建问题</td></tr><tr><td>🔒 (锁)</td><td>:lock:</td><td>修复安全问题</td></tr><tr><td>🐳 (鲸鱼)</td><td>:whale:</td><td>Docker 相关工作</td></tr><tr><td>🍎 (苹果)</td><td>:apple:</td><td>修复 macOS 下的问题</td></tr><tr><td>🐧 (企鹅)</td><td>:penguin:</td><td>修复 Linux 下的问题</td></tr><tr><td>🏁 (旗帜)</td><td>:checked_flag:</td><td>修复 Windows 下的问题</td></tr></tbody></table><p>原项目链接：<a href="https://github.com/liuchengxu/git-commit-emoji-cn">git commit message emoji 使用指南</a><br>参考：<a href="https://gitmoji.carloscuesta.me/">gitmoji</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反爬虫：tyc-num.woff字体加密</title>
      <link href="/2018/12/06/web-crawler-tyc-num/"/>
      <url>/2018/12/06/web-crawler-tyc-num/</url>
      
        <content type="html"><![CDATA[<h2 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h2><blockquote><p>之前写的Jsoup爬虫中有个日期格式解码，一直以来都不知道是在哪里加密的，近期更新了爬虫程序，顺便发现了很多网站用字体加密的反爬虫套路，这种方式利用修改默认字体文件中的对应关系实现加密，传统方式很难破解。</p></blockquote><h3 id="奇怪的字体"><a href="#奇怪的字体" class="headerlink" title="奇怪的字体"></a>奇怪的字体</h3><p>在一些加密的数字和文字上，发现了一个奇怪的class属性<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;tyc-num lh24&quot;</span>&gt;</span>8348-39-88<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这个属性在css中就是使用一个字体：<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tyc-num</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;tyc-num&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在开发者工具NetWork-Font下找到了该字体：tyc-num.woff<br>Preview中看到的数字明显是乱序的，也就是说正常的数字显示已经混乱了，上面的<code>8348-39-88</code>在页面中显示为<code>2012-05-22</code></p><h3 id="tyc-num-woff字体文件"><a href="#tyc-num-woff字体文件" class="headerlink" title="tyc-num.woff字体文件"></a>tyc-num.woff字体文件</h3><p>下载了tyc-num.woff文件后，可以使用字体编辑工具打开，这里我用的是<code>FontCreator</code>。打开后发现不光是数字混乱了，有370个左右的中文字也做了混淆，例如搜索<code>可</code>对应看到的是<code>从</code>，查看原网页中的<code>可</code>在页面中显示的果然是<code>从</code>。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li>目前暂时对数字做了解码，只要把字体中的数字对应关系替换回来就行了。</li><li>中文字符太多暂时没有好的办法。但是从一些未替换的字中也能大概猜出语义了。</li><li>有的网站会定期更换加密字体，这样也会破解失败！<br><strong>新的数字解码：</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新的数字解码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">decode2</span><span class="params">(String date)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] charArray = date.toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charArray.length; i++) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (charArray[i]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;3&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;4&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;6&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;8&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> String(charArray);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新爬虫程序"><a href="#更新爬虫程序" class="headerlink" title="更新爬虫程序"></a>更新爬虫程序</h3>这次更新是因为原来的网站添加了一些反爬虫机制，例如IP和访问次数这些，使用阿布云后仍无法成功，所以先更换了别的网站：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AccountBookInfo <span class="title">getInfo</span><span class="params">(String bookName)</span> </span>&#123;</span><br><span class="line">    AccountBookInfo result = <span class="keyword">new</span> AccountBookInfo();</span><br><span class="line">    String encodeName;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        encodeName = URLEncoder.encode(bookName, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Document doc = JsoupUtils.getUrlDocument(<span class="string">&quot;https://www.tianyancha.com/search?key=&quot;</span> + encodeName);</span><br><span class="line">    <span class="keyword">if</span> (doc == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取详情页地址（列表的第一个公司）</span></span><br><span class="line">    Elements rows = doc.select(<span class="string">&quot;.result-list a&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (rows.size() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Element row = rows.get(<span class="number">0</span>);</span><br><span class="line">    Document infoDoc = JsoupUtils.getUrlDocument(row.attr(<span class="string">&quot;href&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span> (infoDoc == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    result.accountBookName = infoDoc.select(<span class="string">&quot;h1[class=name]&quot;</span>).text();</span><br><span class="line">    result.legalPerson = infoDoc.select(<span class="string">&quot;.legal-representative a&quot;</span>).text();</span><br><span class="line">    result.registeredCapital = infoDoc.select(<span class="string">&quot;td:containsOwn(实缴资本)&quot;</span>).next().text();</span><br><span class="line">    result.establishDate = decode2(infoDoc.select(<span class="string">&quot;td:containsOwn(核准日期)&quot;</span>).next().text());</span><br><span class="line">    result.registeredNo = infoDoc.select(<span class="string">&quot;td:containsOwn(工商注册号)&quot;</span>).next().text();</span><br><span class="line">    result.organizationCode = infoDoc.select(<span class="string">&quot;td:containsOwn(组织机构代码)&quot;</span>).next().text();</span><br><span class="line">    result.socialCreditCode = infoDoc.select(<span class="string">&quot;td:containsOwn(统一社会信用代码)&quot;</span>).next().text();</span><br><span class="line">    result.businessStatus = infoDoc.select(<span class="string">&quot;div:containsOwn(公司状态)&quot;</span>).next().text();</span><br><span class="line">    result.companyType = infoDoc.select(<span class="string">&quot;td:containsOwn(公司类型)&quot;</span>).next().text();</span><br><span class="line">    result.businessScope = infoDoc.select(<span class="string">&quot;td:containsOwn(经营范围)&quot;</span>).next().text();</span><br><span class="line">    result.address = infoDoc.select(<span class="string">&quot;td:containsOwn(注册地址)&quot;</span>).next().text();</span><br><span class="line">    result.businessPeriod = infoDoc.select(<span class="string">&quot;td:containsOwn(营业期限)&quot;</span>).next().text();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="传送门："><a href="#传送门：" class="headerlink" title="传送门："></a>传送门：</h3><a href="/2018/07/09/jsoup-company-info">Java爬虫获取企业工商信息</a><br><a href="https://jsoup.org/cookbook/extracting-data/selector-syntax">Jsoup选择器语法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Jsoup </tag>
            
            <tag> Crawler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot升级到2.1</title>
      <link href="/2018/11/26/spring-boot-update-version/"/>
      <url>/2018/11/26/spring-boot-update-version/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>用了Spring boot一段时间了，之前都是小版本升级，后来稳定在1.5.8，最近想研究一下升级大版本，于是开始升级之路，将遇到的问题和解决方案记录一下，以备不时之需</p></blockquote><ul><li>Spring boot版本：<code>1.5.8.RELEASE</code> -&gt; <code>2.1.0.RELEASE</code></li><li>Spring Data JPA版本: <code>1.11.8.RELEASE</code> -&gt; <code>2.1.2.RELEASE</code></li></ul><h3 id="更新版本号-pom-xml"><a href="#更新版本号-pom-xml" class="headerlink" title="更新版本号 - pom.xml"></a>更新版本号 - <code>pom.xml</code></h3><p>在pom.xml中更换版本号，然后maven更新<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="入口-SpringBootServletInitializer"><a href="#入口-SpringBootServletInitializer" class="headerlink" title="入口 - SpringBootServletInitializer"></a>入口 - <code>SpringBootServletInitializer</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新前</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.support.SpringBootServletInitializer;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新后</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.support.SpringBootServletInitializer;</span><br></pre></td></tr></table></figure><h3 id="错误处理-ErrorPageController"><a href="#错误处理-ErrorPageController" class="headerlink" title="错误处理 - ErrorPageController"></a>错误处理 - <code>ErrorPageController</code></h3><p>之前的ErrorPageController是一个错误处理的控制类，替换默认的控制类加入写日志的操作，更新版本后一些默认的类已经发生改变了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以下3个对象已经更换到新的包中</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.DefaultErrorAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ErrorAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.ErrorController;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新后</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.error.DefaultErrorAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.error.ErrorAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.error.ErrorController;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ErrorAttributes.getErrorAttributes方法参数从HttpServletRequest改为WebRequest</span></span><br><span class="line"><span class="keyword">private</span> ErrorAttributes errorAttributes = <span class="keyword">new</span> DefaultErrorAttributes();</span><br><span class="line"><span class="function"><span class="keyword">private</span> Map&lt;String, Object&gt; <span class="title">getErrorAttributes</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">    RequestAttributes requestAttributes = <span class="keyword">new</span> ServletRequestAttributes(request);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.errorAttributes.getErrorAttributes(requestAttributes, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新后</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Map&lt;String, Object&gt; <span class="title">getErrorAttributes</span><span class="params">(WebRequest request)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.errorAttributes.getErrorAttributes(request, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="开启多个连接器（同时支持http和https）-MultiConnectorsConfiguration"><a href="#开启多个连接器（同时支持http和https）-MultiConnectorsConfiguration" class="headerlink" title="开启多个连接器（同时支持http和https） - MultiConnectorsConfiguration"></a>开启多个连接器（同时支持http和https） - <code>MultiConnectorsConfiguration</code></h3><p>有些小改动，照抄官网例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新前</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.embedded.EmbeddedServletContainerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> EmbeddedServletContainerFactory <span class="title">servletContainer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    TomcatEmbeddedServletContainerFactory tomcat = <span class="keyword">new</span> TomcatEmbeddedServletContainerFactory();</span><br><span class="line">    tomcat.addAdditionalTomcatConnectors(createStandardConnector());</span><br><span class="line">    <span class="keyword">return</span> tomcat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 更新后</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.server.ServletWebServerFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletWebServerFactory <span class="title">servletContainer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    TomcatServletWebServerFactory tomcat = <span class="keyword">new</span> TomcatServletWebServerFactory();</span><br><span class="line">    tomcat.addAdditionalTomcatConnectors(createStandardConnector());</span><br><span class="line">    <span class="keyword">return</span> tomcat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="计数器-CounterService"><a href="#计数器-CounterService" class="headerlink" title="计数器 - CounterService"></a>计数器 - <code>CounterService</code></h3><p>新版本没有这个类了，暂时先去掉<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.actuate.metrics.CounterService;</span><br><span class="line"></span><br><span class="line"><span class="comment">// codehale metrics</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(&quot;counterService&quot;)</span></span><br><span class="line"><span class="keyword">private</span> CounterService counterService;</span><br></pre></td></tr></table></figure></p><h3 id="Spring-Data-JPA相关的问题"><a href="#Spring-Data-JPA相关的问题" class="headerlink" title="Spring Data JPA相关的问题"></a>Spring Data JPA相关的问题</h3><p>存储库的一些自带方法变化了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 老的版本</span></span><br><span class="line">Book book = dao.findOne(id);</span><br><span class="line">dao.save(list);</span><br><span class="line">dao.delete(id);</span><br><span class="line">dao.delete(list);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新的版本</span></span><br><span class="line">Optional&lt;Book&gt; book = dao.findById(id);</span><br><span class="line">dao.saveAll(list);</span><br><span class="line">dao.deleteById(id);</span><br><span class="line">dao.deleteAll(list);</span><br></pre></td></tr></table></figure></p><h3 id="Spring-Boot-Admin相关的问题"><a href="#Spring-Boot-Admin相关的问题" class="headerlink" title="Spring Boot Admin相关的问题"></a>Spring Boot Admin相关的问题</h3><p>Spring Boot Admin也需要使用新的版本了，否则无法启动，配置文件一些参数发生了变化<br>版本升级：<code>1.5.4</code> -&gt; <code>2.1.0</code></p><blockquote><p>Spring Boot Admin的server端也需要更新，更新后的UI已经用Vue重写了，很惊艳！</p></blockquote><p>配置文件改动：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 老的版本</span></span><br><span class="line"><span class="string">spring.boot.admin.url=...</span></span><br><span class="line"><span class="string">spring.boot.admin.client.service-url=...</span></span><br><span class="line"><span class="string">management.security.enabled=false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新的版本</span></span><br><span class="line"><span class="string">spring.boot.admin.client.url=...</span></span><br><span class="line"><span class="string">spring.boot.admin.client.instance.service-url=...</span></span><br><span class="line"><span class="string">management.endpoints.web.exposure.include=*</span></span><br></pre></td></tr></table></figure></p><h3 id="其他配置改动-application-properties"><a href="#其他配置改动-application-properties" class="headerlink" title="其他配置改动 - application.properties"></a>其他配置改动 - <code>application.properties</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 老的版本</span></span><br><span class="line"><span class="string">spring.http.multipart.max-file-size=10MB</span></span><br><span class="line"><span class="string">spring.http.multipart.max-request-size=20MB</span></span><br><span class="line"></span><br><span class="line"><span class="string">spring.datasource.initialize=true</span></span><br><span class="line"><span class="string">flyway.enabled=false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新的版本</span></span><br><span class="line"><span class="string">spring.servlet.multipart.max-file-size=10MB</span></span><br><span class="line"><span class="string">spring.servlet.multipart.max-request-size=20MB</span></span><br><span class="line"></span><br><span class="line"><span class="string">spring.datasource.initialization-mode=always</span></span><br><span class="line"><span class="string">spring.flyway.enabled=false</span></span><br></pre></td></tr></table></figure><h3 id="跨域问题-CORSConfiguration"><a href="#跨域问题-CORSConfiguration" class="headerlink" title="跨域问题 - CORSConfiguration"></a>跨域问题 - <code>CORSConfiguration</code></h3><p>原先配置的WebMvcConfigurerAdapter已经过期了，现在直接用WebMvcConfigurer<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 老的版本</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"><span class="comment">// 新的版本</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br></pre></td></tr></table></figure></p><h3 id="未完待续。。。"><a href="#未完待续。。。" class="headerlink" title="未完待续。。。"></a>未完待续。。。</h3><p>经过修改，项目已经可以运行了，接下来开始解决测试类报错的问题</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客成长之路</title>
      <link href="/2018/11/01/blog-way/"/>
      <url>/2018/11/01/blog-way/</url>
      
        <content type="html"><![CDATA[<hr><ul><li><code>2021-02-18</code> <strong>新版本hexo转义字符显示异常</strong><br>突然发现首页的Prev和Next这两个按钮显示出问题了，转义字符<code>&amp;laquo;</code>和<code>&amp;raquo;</code>没有正常显示，也是更新版本导致的。在GitHub的Issues中搜到了解决方案<figure class="highlight js"><figcaption><span>archive.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav id=<span class="string">&quot;page-nav&quot;</span>&gt;</span><br><span class="line">  &lt;%- paginator(&#123;</span><br><span class="line">    <span class="comment">// 添加转义的相关配置解决这个问题</span></span><br><span class="line">    <span class="built_in">escape</span>: <span class="literal">false</span>,</span><br><span class="line">    prev_text: <span class="string">&#x27;&amp;laquo; Prev&#x27;</span>,</span><br><span class="line">    next_text: <span class="string">&#x27;Next &amp;raquo;&#x27;</span></span><br><span class="line">  &#125;) %&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><strong>我的解决提交：</strong><a href="https://github.com/chenbin-353549444/hexo-theme-yelee/commit/50feba02967d9770072d0ed0395daa67cc4aca13">🎨 修复hexo新版本中转义字符显示问题</a></li></ul><hr><ul><li><code>2021-02-02</code> <strong>NPM更新后导致build失败</strong><br>重做系统之后，发现博客工程build失败了，是NPM版本更新导致的，于是吧hexo的版本也一起升级到最新的版本，这个问题就解决了，同时也产生了一些其他问题<br><strong>hexo版本更新：</strong> <code>3.9.0</code> -&gt; <code>5.3.0</code><br><strong>更新提交：</strong><a href="https://github.com/chenbin-353549444/blog/commit/87e0cd60ee2a7779983265f07ec522f44b77ffbd">🚀 更新hexo版本</a><br>在Github的分支build还是失败，新版本的配置文件中url格式添加了校验，之前的不规范的格式导致无法build了，所以要规范化url格式<br><strong>我的解决提交：</strong><a href="https://github.com/chenbin-353549444/blog/commit/8317509dc23c8f6643d08c7c9475fcf8f45c4835">🎨 修复url格式错误</a></li></ul><hr><ul><li><code>2020-01-16</code> <strong>手机左侧导航栏滑动失效问题：</strong><br>手机左侧导航栏划出后样式错乱，并且缩不回去了，解决办法，去掉<code>mobile.js</code>中的高度设置<br>具体：<del>wrap.style.height = document.body.scrollHeight + ‘px’;</del><br><strong>我的解决提交：</strong><a href="https://github.com/chenbin-353549444/hexo-theme-yelee/commit/1bb76093e4b7bd6d9bd29572fbdcb086e2ce2f7b">🐛 修复手机左侧导航栏滑动失效问题</a></li></ul><hr><ul><li><code>2019-05-21</code> <strong>解决代码块行数限制问题：</strong><br>困扰我很久的问题，偶然在Github上发现了解决方案，很简单，去掉<code>highlight.styl</code>中的最大高度设置就可以了<br>具体：<del>max-height: 50em</del><br><strong>我的解决提交：</strong><a href="https://github.com/chenbin-353549444/hexo-theme-yelee/commit/1813bde713c6a8b0f69aab8edc01dad058d2d4b0">🎨 删除代码块40行的限制</a></li></ul><hr><ul><li><code>2019-04-22</code> <strong>解决分享相关问题：</strong><br>分享的问题已经有一段时间了，今天才真正解决。<br>首先，https无法使用百度分享，所以用了一段时间的addthis，但是换成自己的<code>addthis_pubid</code>后就失效了，最近才发现这个大坑，官网复制的pubid是大写的RA，改成小写后就起作用了<br>其次，addthis的效果不如百度统计，最近搜了一下https下使用百度分享，发现是有解决方案的，于是终于能解决这个问题了。<br><strong>具体解决方案见：</strong><a href="https://github.com/hrwhisper/baiduShare">百度分享不支持Https的解决方案</a><br><strong>我的解决提交：</strong><a href="https://github.com/chenbin-353549444/hexo-theme-yelee/commit/af3114ffb8f0a5beac97bcf089a3585c2b11ed23">🐛 fix share bugs</a></li></ul><hr><ul><li><code>2019-01-21</code> <strong>解决java标签页排版错乱：</strong><br>同事发现java标签页排版错乱了，开始排查，发现本地是正常的，服务器上的那个页面的代码和本地也是一样的，再对比远程和本地页面发现本地少了一篇文章，原因不详<br><strong>解决办法：</strong>修改那篇文章的tag重新部署后就正常了<br><strong>分析：</strong>没找到原因，猜测是hexo的bug，以后再继续关注这类事件</li></ul><hr><ul><li><code>2018-12-28</code> <strong>解决markdown表格内<code>|</code>转码问题：</strong><br>markdown表格内<code>|</code>需要用<code>&amp;#124;</code>转码，否则因为语法问题无法正常显示<br>最近发现之前写的转码失效了，原因把转码的文字设置成了文本高亮，文本高亮中的转码会失效，去掉文本高亮就解决了</li></ul><hr><ul><li><code>2018-11-01</code> <strong>解决畅言广告问题：</strong><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#feedAv</span>,<span class="selector-id">#MZAD_POP_PLACEHOLDER</span>,<span class="selector-id">#pop_ad</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">250px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transform</span>: scale(<span class="number">0</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><code>2018-10-25</code> <strong>解决底部统计失效问题：</strong><br>不蒜子更换域名导致的，更新地址解决<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><code>2018-10-23</code> <strong>解决GitHub提示的安全问题：</strong><br>发现是一些依赖的版本过低导致的，更新package.json中的版本号<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;cryptiles&quot;</span>: <span class="string">&quot;&gt;=4.1.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;randomatic&quot;</span>: <span class="string">&quot;&gt;=3.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><code>2018-06-28</code> <strong>解决域名更新失败问题：</strong><br>页脚部分添加备案号的链接<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.miitbeian.gov.cn&quot;</span>&gt;</span>苏ICP备17039650号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><code>2018-05-24</code> <strong>解决一些cdn失效的问题：</strong><br>由于bootcss把top域名给封了，导致一些cdn失效，解决办法：找到失效的cdn并更新<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="attr">jquery:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js</span></span><br><span class="line">  <span class="attr">require:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/require.js/2.2.0/require.min.js</span></span><br><span class="line">  <span class="attr">fontawesome:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css</span></span><br><span class="line">  <span class="attr">fancybox_js:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.js</span></span><br><span class="line">  <span class="attr">fancybox_css:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css</span></span><br><span class="line">  <span class="attr">animate_css:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.1/animate.min.css</span></span><br><span class="line">  <span class="attr">jquery_ui_js:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js</span></span><br><span class="line">  <span class="attr">jquery_ui_css:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.10.4/css/jquery-ui.min.css</span></span><br><span class="line">  <span class="attr">pace_js:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js</span></span><br><span class="line">  <span class="attr">clipboard:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.5.10/clipboard.min.js</span></span><br><span class="line">  <span class="attr">mathjax:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/mathjax/2.6.1/MathJax.js</span></span><br><span class="line">  <span class="attr">scrollreveal:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/scrollReveal.js/3.1.4/scrollreveal.min.js</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><code>2018-05-22</code> <strong>解决GitHub Pages部署每次都要手动修改CNAME的问题：</strong><br>在source文件夹下添加CNAME文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.chenb.top</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><code>2018-03-27</code> <strong>解决搜索失效的问题：</strong><br>修改_config.yml配置中写法<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span> </span><br><span class="line">  <span class="comment">#on: true</span></span><br><span class="line">  <span class="attr">onload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>改成<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span> </span><br><span class="line">  <span class="attr">on:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java内存分页工具</title>
      <link href="/2018/08/17/spring-boot-ram-pager/"/>
      <url>/2018/08/17/spring-boot-ram-pager/</url>
      
        <content type="html"><![CDATA[<p>代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 内存分页工具</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenb</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RamPager</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_PAGE_SIZE = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; data;</span><br><span class="line">    <span class="keyword">private</span> Pageable pageable;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RamPager</span><span class="params">(List&lt;T&gt; data, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">        <span class="keyword">this</span>.pageable = pageable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">page</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (data == <span class="keyword">null</span> || data.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pageNum = pageable == <span class="keyword">null</span> ? <span class="number">1</span> : pageable.getPageNumber() + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> pageSize = pageable == <span class="keyword">null</span> ? DEFAULT_PAGE_SIZE : pageable.getPageSize();</span><br><span class="line">        <span class="keyword">if</span> (pageNum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            pageNum = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> from = (pageNum - <span class="number">1</span>) * pageSize;</span><br><span class="line">        <span class="keyword">int</span> to = pageNum * pageSize;</span><br><span class="line">        <span class="keyword">if</span> (to &gt; data.size()) &#123;</span><br><span class="line">            to = data.size();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (from &gt;= data.size() || to &lt;= from) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data.subList(from, to);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><ul><li>各类特殊情况都返回空的List</li><li>pageable接口页码从0开始（与Spring Data JPA相匹配）</li><li>默认pageSize为20</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Spring Data JPA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java使用JavaCSV把CSV流转成Apache POI的EXCEL格式</title>
      <link href="/2018/08/13/java-csv-to-excel/"/>
      <url>/2018/08/13/java-csv-to-excel/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><blockquote><p>由于Apache POI不支持CSV格式的文件读取，所以需要在Java程序中手动转一下格式</p></blockquote><h3 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a>Maven依赖</h3><p>Apache POI:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">poi.version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">poi.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">poi-ooxml.version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">poi-ooxml.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi-ooxml.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><br>JavaCSV:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sourceforge.javacsv<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javacsv<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="转换方法"><a href="#转换方法" class="headerlink" title="转换方法"></a>转换方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * csv格式的流转成xls格式的workbook</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Workbook <span class="title">getWorkbookByCsv</span><span class="params">(InputStream inputStream)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    ArrayList&lt;String[]&gt; dataList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文件的编码，这里设为GB2312</span></span><br><span class="line">    CsvReader reader = <span class="keyword">new</span> CsvReader(inputStream, <span class="string">&#x27;,&#x27;</span>, Charset.forName(<span class="string">&quot;GB2312&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (reader.readRecord()) &#123;</span><br><span class="line">        dataList.add(reader.getValues());</span><br><span class="line">    &#125;</span><br><span class="line">    reader.close();</span><br><span class="line"></span><br><span class="line">    HSSFWorkbook result = <span class="keyword">new</span> HSSFWorkbook();</span><br><span class="line">    HSSFSheet sheet = result.createSheet(<span class="string">&quot;new sheet&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> rowNum = <span class="number">0</span>; rowNum &lt; dataList.size(); rowNum++) &#123;</span><br><span class="line">        String[] data = dataList.get(rowNum);</span><br><span class="line">        HSSFRow row = sheet.createRow(rowNum);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> columnNum = <span class="number">0</span>; columnNum &lt; data.length; columnNum++) &#123;</span><br><span class="line">            HSSFCell cell = row.createCell(columnNum);</span><br><span class="line">            cell.setCellValue(data[columnNum]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>注意：</strong> 不同的CSV文件编码不同，如果乱码可以改上边的编码</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaCSV </tag>
            
            <tag> Apache </tag>
            
            <tag> POI </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL简单存储过程修复用户表</title>
      <link href="/2018/08/09/mysql-code/"/>
      <url>/2018/08/09/mysql-code/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> temp_id <span class="type">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> temp_accounter_id <span class="type">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> temp_accounter_no <span class="type">VARCHAR</span>(<span class="number">64</span>);</span><br><span class="line">  <span class="keyword">DECLARE</span> state <span class="type">VARCHAR</span>(<span class="number">30</span>);</span><br><span class="line">  <span class="keyword">DECLARE</span> account_book_cursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> id,accounter_id <span class="keyword">FROM</span> account_book;</span><br><span class="line">  <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="number">1329</span></span><br><span class="line">  <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SET</span> state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">  <span class="keyword">END</span>; </span><br><span class="line">  <span class="keyword">OPEN</span> account_book_cursor;</span><br><span class="line">  REPEAT</span><br><span class="line">    <span class="keyword">FETCH</span> account_book_cursor <span class="keyword">INTO</span> temp_id,temp_accounter_id;</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">no</span> <span class="keyword">INTO</span> temp_accounter_no <span class="keyword">FROM</span> account <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_accounter_id;</span><br><span class="line">    <span class="keyword">UPDATE</span> account_book <span class="keyword">SET</span> accounter_no <span class="operator">=</span> temp_accounter_no <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_id;</span><br><span class="line">    UNTIL state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line">  <span class="keyword">END</span> REPEAT;</span><br><span class="line">  <span class="keyword">CLOSE</span> account_book_cursor;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码块 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows共享文件夹设置</title>
      <link href="/2018/07/25/windows-share-folders/"/>
      <url>/2018/07/25/windows-share-folders/</url>
      
        <content type="html"><![CDATA[<h3 id="Windows-7"><a href="#Windows-7" class="headerlink" title="Windows 7"></a>Windows 7</h3><ul><li>我们首先打开“网络和共享中心”，选择“更改高级共享设置”</li><li>将“启用网络发现”和“启用文件和打印机共享”勾选，然后保存修改。</li><li>接着我们打开“计算机”右键菜单，选择“管理”</li><li>在“计算机管理”中，我们依次点击：本地用户和组—用户—Guest ，双击Guest 。</li><li>在“Guest属性”中，将“账户已禁用”取消勾选，然后确定。</li><li>接着我们打开开始菜单，输入 secpol.msc 并回车。</li><li>打开“本地安装策略”之后，我们依次点击：本地策略—用户权限分配—拒绝从网络访问这台计算机，并双击“拒绝从网络访问这台计算机”</li><li>接着在“拒绝从网络访问这台计算机 属性”中，选中“Guest ”，将其删除，然后确定。</li><li>然后我们依次点击：本地策略—安全选项—网络访问：本地账户的共享和安全模型，并双击“网络访问：本地账户的共享和安全模型”</li><li>在“网络访问：本地账户的共享和安全模型 属性”中，选择“仅来宾—对本地用户进行身份验证，其身份为来宾”，确定退出。</li><li>然后，找到我们需要局域网共享的文件或文件夹，打开右键菜单依次选择：共享—特定用户。</li><li>然后再下拉列表中选择”Guest” ，然后点击“共享”</li><li>到这里Win7局域网共享设置就完成了!</li></ul><h3 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h3><p>和<code>Windows 7</code>大致相同，找相似的地方修改相似的配置就行了</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins Docker实现自动复制MySQL数据库</title>
      <link href="/2018/07/23/jenkins-docker-mysql-copy/"/>
      <url>/2018/07/23/jenkins-docker-mysql-copy/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><blockquote><p>测试环境需要持续模拟生产环境的数据库，由于生产的数据库只能晚上复制，所以想写一个自动复制数据库的脚本，决定使用Jenkins的管道脚本，方便设置定时运行</p></blockquote><h3 id="Pipeline脚本"><a href="#Pipeline脚本" class="headerlink" title="Pipeline脚本"></a>Pipeline脚本</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!groovy</span><br><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line"></span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;clean&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;((docker stop mysql_prod &amp;&amp; docker rm mysql_prod) &amp;&amp; echo &quot;clean success&quot;) || echo &quot;clean error&quot;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;start&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;docker run --name mysql_prod -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=??? -e MYSQL_USER=??? -e MYSQL_PASSWORD=??? -e MYSQL_DATABASE=efi mysql:5.7.18 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;wait to start&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sleep <span class="number">10</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;dump&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;docker exec mysql_prod sh -c &quot;exec mysqldump -h??? -u??? -p??? efi &gt; efi.sql&quot;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;import&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;docker exec mysql_prod sh -c &quot;exec mysql -u??? -p??? efi &lt; efi.sql&quot;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>clean</code>： 停止并删除老的数据库容器，因为测试用所以数据可以直接丢弃</li><li><code>start</code>： 运行一个新的数据库容器，指定root密码、管理用户的用户名密码、默认数据库名称等</li><li><code>wait to start</code>： 等待容器启动和初始化，一般10s就可以了，去掉这步后面的命令会有奇怪的问题</li><li><code>dump</code>： 使用mysqldump命令导出制定的数据源，-h可以指定远程数据库的host</li><li><code>import</code>： 使用mysql命令导入刚刚导出的sql文件到本地数据库</li></ul><blockquote><p><a href="https://hub.docker.com/_/mysql">MySQL官方镜像</a>的说明中推荐使用<code>/docker-entrypoint-initdb.d</code>目录存放初始化的sql脚本，但是这种方法需要挂载目录到容器中，由于本人不喜欢做挂载目录（感觉会把宿主机弄脏），所以利用Jenkins的脚本做了以上的简单实现</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Docker </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java爬虫获取企业工商信息</title>
      <link href="/2018/07/09/jsoup-company-info/"/>
      <url>/2018/07/09/jsoup-company-info/</url>
      
        <content type="html"><![CDATA[<h3 id="Jsoup请求网址数据"><a href="#Jsoup请求网址数据" class="headerlink" title="Jsoup请求网址数据"></a>Jsoup请求网址数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求网址数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Document <span class="title">getUrlDocument</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 此处自己处理异常、其他参数等</span></span><br><span class="line">        Document doc = Jsoup.connect(url).timeout(<span class="number">3000</span>).get();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (doc != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> doc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        logger.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用隧道代理"><a href="#使用隧道代理" class="headerlink" title="使用隧道代理"></a>使用隧道代理</h3><blockquote><p>大量调用一些网站会被封ip，可以使用阿布云隧道代理，参照<a href="https://www.abuyun.com">阿布云官网</a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsoupUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 阿布云通行证书和通行密钥，注册地址：https://www.abuyun.com</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String ProxyUser = <span class="string">&quot;XXXXXXXXXXXXXXXX&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String ProxyPass = <span class="string">&quot;XXXXXXXXXXXXXXXX&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 代理服务器</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String ProxyHost = <span class="string">&quot;http-dyn.abuyun.com&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Integer ProxyPort = <span class="number">9020</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用阿布云隧道代理请求网址数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Document <span class="title">getUrlProxyDocument</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        Authenticator.setDefault(<span class="keyword">new</span> Authenticator() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(ProxyUser, ProxyPass.toCharArray());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Proxy proxy = <span class="keyword">new</span> Proxy(Proxy.Type.HTTP, <span class="keyword">new</span> InetSocketAddress(ProxyHost, ProxyPort));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 此处自己处理异常、其他参数等</span></span><br><span class="line">            Document doc = Jsoup.connect(url).timeout(<span class="number">3000</span>).proxy(proxy).get();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (doc != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> doc;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            logger.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="根据公司名称获取工商信息并解析"><a href="#根据公司名称获取工商信息并解析" class="headerlink" title="根据公司名称获取工商信息并解析"></a>根据公司名称获取工商信息并解析</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据公司名称获取工商信息并解析</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AccountBookInfo <span class="title">getInfo</span><span class="params">(String bookName)</span> </span>&#123;</span><br><span class="line">    AccountBookInfo result = <span class="keyword">new</span> AccountBookInfo();</span><br><span class="line">    String encodeName;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        encodeName = URLEncoder.encode(bookName, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;encode error!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Document doc = JsoupUtils.getUrlDocument(<span class="string">&quot;http://m.qixin.com/search/&quot;</span> + encodeName + <span class="string">&quot;.html&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (doc == <span class="keyword">null</span>) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;first page get error!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取详情页地址（列表的第一个公司）</span></span><br><span class="line">    Elements rows = doc.select(<span class="string">&quot;.new-search-result a&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (rows.size() == <span class="number">0</span>) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;html match error!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Element row = rows.get(<span class="number">0</span>);</span><br><span class="line">    Document infoDoc = JsoupUtils.getUrlDocument(<span class="string">&quot;http://m.qixin.com&quot;</span> + row.attr(<span class="string">&quot;href&quot;</span>) + <span class="string">&quot;/info&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (infoDoc == <span class="keyword">null</span>) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;second page get error!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Elements headInfo = infoDoc.select(<span class="string">&quot;.container-fluid &gt; div:eq(1)&quot;</span>);</span><br><span class="line">    result.accountBookName = headInfo.select(<span class="string">&quot;&gt; div:eq(0)&quot;</span>).text();</span><br><span class="line">    result.legalPerson = headInfo.select(<span class="string">&quot;&gt; div:eq(1) &gt; div &gt; a&quot;</span>).text();</span><br><span class="line">    result.registeredCapital = decode(headInfo.select(<span class="string">&quot;&gt; div:eq(2) &gt; span&quot;</span>).text());</span><br><span class="line">    <span class="comment">// 需要解码</span></span><br><span class="line">    result.establishDate = decode(headInfo.select(<span class="string">&quot;&gt; div:eq(3) &gt; span&quot;</span>).text());</span><br><span class="line">    Elements detailInfo = infoDoc.select(<span class="string">&quot;.particular-information &gt; .padding-b-1-3x&quot;</span>);</span><br><span class="line">    result.registeredNo = detailInfo.select(<span class="string">&quot;&gt; div:eq(0) &gt; div &gt; div:eq(0) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    result.organizationCode = detailInfo.select(<span class="string">&quot;&gt; div:eq(0) &gt; div &gt; div:eq(1) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    result.socialCreditCode = detailInfo.select(<span class="string">&quot;&gt; div:eq(1) &gt; div &gt; div:eq(0) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    result.businessStatus = detailInfo.select(<span class="string">&quot;&gt; div:eq(1) &gt; div &gt; div:eq(1) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    result.companyType = detailInfo.select(<span class="string">&quot;&gt; div:eq(2) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    result.businessScope = detailInfo.select(<span class="string">&quot;&gt; div:eq(3) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    result.address = detailInfo.select(<span class="string">&quot;&gt; div:eq(4) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    result.businessPeriod = detailInfo.select(<span class="string">&quot;&gt; div:eq(5) &gt; div:eq(1)&quot;</span>).text();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>输入公司名称或缩写，例如<code>阿里巴巴</code></li><li>这里使用<code>Jsoup</code>中<code>Jquery</code>选择器的语法获取对应的信息，更多的解析方式见：<a href="https://jsoup.org">Jsoup官网</a></li></ul></blockquote><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountBookInfo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="keyword">public</span> Long id;</span><br><span class="line">    <span class="keyword">public</span> String accountBookName;       <span class="comment">//公司名称</span></span><br><span class="line">    <span class="keyword">public</span> String taxPayerCode;          <span class="comment">//纳税人识别号</span></span><br><span class="line">    <span class="keyword">public</span> String taxPayerId;            <span class="comment">//纳税人身份证号</span></span><br><span class="line">    <span class="keyword">public</span> Integer nationalLoginWay;     <span class="comment">//国税登录方式</span></span><br><span class="line">    <span class="keyword">public</span> String nationalPwd;           <span class="comment">//国税密码</span></span><br><span class="line">    <span class="keyword">public</span> Integer landLoginWay;         <span class="comment">//地税登录方式</span></span><br><span class="line">    <span class="keyword">public</span> String landPwd;               <span class="comment">//地税密码</span></span><br><span class="line">    <span class="keyword">public</span> String legalPerson;           <span class="comment">//法人</span></span><br><span class="line">    <span class="keyword">public</span> String registeredCapital;     <span class="comment">//注册资本</span></span><br><span class="line">    <span class="keyword">public</span> String registeredNo;          <span class="comment">//注册号</span></span><br><span class="line">    <span class="keyword">public</span> String organizationCode;      <span class="comment">//组织机构代码</span></span><br><span class="line">    <span class="keyword">public</span> String socialCreditCode;      <span class="comment">//社会信用代码</span></span><br><span class="line">    <span class="keyword">public</span> String establishDate;         <span class="comment">//成立日期</span></span><br><span class="line">    <span class="keyword">public</span> String companyType;           <span class="comment">//公司类型</span></span><br><span class="line">    <span class="keyword">public</span> String businessScope;         <span class="comment">//经营范围</span></span><br><span class="line">    <span class="keyword">public</span> String businessStatus;        <span class="comment">//经营状态</span></span><br><span class="line">    <span class="keyword">public</span> String address;               <span class="comment">//地址</span></span><br><span class="line">    <span class="keyword">public</span> String businessPeriod;        <span class="comment">//营业期限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日期解码"><a href="#日期解码" class="headerlink" title="日期解码"></a>日期解码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期格式解码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">decode</span><span class="params">(String date)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] charArray = date.toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charArray.length; i++) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (charArray[i]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;4&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;8&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;7&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;3&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;5&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;6&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                charArray[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> String(charArray);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Jsoup </tag>
            
            <tag> Crawler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot MySQL连接超时</title>
      <link href="/2018/07/09/spring-boot-mysql-timeout/"/>
      <url>/2018/07/09/spring-boot-mysql-timeout/</url>
      
        <content type="html"><![CDATA[<h2 id="错误场景"><a href="#错误场景" class="headerlink" title="错误场景"></a>错误场景</h2><blockquote><p>风控项目每个月都要执行定时任务计算大量数据，最近发现定时任务执行失败了，查了一下日志是数据库连接超时导致的，查阅资料后解决该问题</p></blockquote><ul><li>Spring boot版本：<code>1.5.8.RELEASE</code></li></ul><h3 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">The last packet successfully received from the server was 1,607,221,718 milliseconds ago.  </span><br><span class="line">    The last packet sent successfully to the server was 1,607,221,719 milliseconds ago. </span><br><span class="line">    is longer than the server configured value of &#39;wait_timeout&#39;. </span><br><span class="line">    You should consider either expiring and&#x2F;or testing connection validity before use in your application, </span><br><span class="line">    increasing the server configured values for client timeouts, </span><br><span class="line">    or using the Connector&#x2F;J connection property &#39;autoReconnect&#x3D;true&#39; to avoid this problem.</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><blockquote><p><strong>注意：</strong> 错误提示中说的<code>autoReconnect=true</code>配置只在低版本（MySQL1.5以下）数据库中适用</p></blockquote><p>使用Spring boot数据源的连接池配置：<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#验证连接的有效性</span></span><br><span class="line"><span class="comment">#获取连接时候验证，会影响性能</span></span><br><span class="line"><span class="comment">#空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟</span></span><br><span class="line"><span class="comment">#连接池空闲连接的有效时间 ，设置30分钟</span></span><br><span class="line"><span class="meta">spring.datasource.prod.test-while-idle</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#spring.datasource.prod.test-on-borrow=true</span></span><br><span class="line"><span class="meta">spring.datasource.prod.validation-query</span>=<span class="string">SELECT 1 FROM DUAL</span></span><br><span class="line"><span class="meta">spring.datasource.prod.time-between-eviction-runs-millis</span>=<span class="string">300000</span></span><br><span class="line"><span class="meta">spring.datasource.prod.min-evictable-idle-time-millis</span>=<span class="string">1800000</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.credit.test-while-idle</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#spring.datasource.credit.test-on-borrow=true</span></span><br><span class="line"><span class="meta">spring.datasource.credit.validation-query</span>=<span class="string">SELECT 1 FROM DUAL</span></span><br><span class="line"><span class="meta">spring.datasource.credit.time-between-eviction-runs-millis</span>=<span class="string">300000</span></span><br><span class="line"><span class="meta">spring.datasource.credit.min-evictable-idle-time-millis</span>=<span class="string">1800000</span></span><br></pre></td></tr></table></figure><br>参照<a href="https://docs.spring.io/spring-boot/docs/1.5.8.RELEASE/reference/htmlsingle/#howto-two-datasources">官网多数据源配置</a></p><h3 id="Tomcat连接池详细配置"><a href="#Tomcat连接池详细配置" class="headerlink" title="Tomcat连接池详细配置"></a>Tomcat连接池详细配置</h3><table><thead><tr><th style="text-align:left">配置</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">spring.dao.exceptiontranslation.enabled</td><td style="text-align:left">是否开启PersistenceExceptionTranslationPostProcessor，默认为true</td></tr><tr><td style="text-align:left">spring.datasource.abandon-when-percentage-full</td><td style="text-align:left">设定超时被废弃的连接占到多少比例时要被关闭或上报</td></tr><tr><td style="text-align:left">spring.datasource.allow-pool-suspension</td><td style="text-align:left">使用Hikari pool时，是否允许连接池暂停，默认为: false</td></tr><tr><td style="text-align:left">spring.datasource.alternate-username-allowed</td><td style="text-align:left">是否允许替代的用户名.</td></tr><tr><td style="text-align:left">spring.datasource.auto-commit</td><td style="text-align:left">指定updates是否自动提交.</td></tr><tr><td style="text-align:left">spring.datasource.catalog</td><td style="text-align:left">指定默认的catalog.</td></tr><tr><td style="text-align:left">spring.datasource.commit-on-return</td><td style="text-align:left">设置当连接被归还时，是否要提交所有还未完成的事务</td></tr><tr><td style="text-align:left">spring.datasource.connection-init-sql</td><td style="text-align:left">指定连接被创建，再被添加到连接池之前执行的sql.</td></tr><tr><td style="text-align:left">spring.datasource.connection-init-sqls</td><td style="text-align:left">使用DBCP connection pool时，指定初始化时要执行的sql</td></tr><tr><td style="text-align:left">spring.datasource.connection-properties.[key]</td><td style="text-align:left">在使用DBCP connection pool时指定要配置的属性</td></tr><tr><td style="text-align:left">spring.datasource.connection-test-query</td><td style="text-align:left">指定校验连接合法性执行的sql语句</td></tr><tr><td style="text-align:left">spring.datasource.connection-timeout</td><td style="text-align:left">指定连接的超时时间，毫秒单位.</td></tr><tr><td style="text-align:left">spring.datasource.continue-on-error</td><td style="text-align:left">在初始化数据库时，遇到错误是否继续，默认false</td></tr><tr><td style="text-align:left">spring.datasource.data</td><td style="text-align:left">指定Data (DML)脚本</td></tr><tr><td style="text-align:left">spring.datasource.data-source-class-name</td><td style="text-align:left">指定数据源的全限定名.</td></tr><tr><td style="text-align:left">spring.datasource.data-source-jndi</td><td style="text-align:left">指定jndi的地址</td></tr><tr><td style="text-align:left">spring.datasource.data-source-properties.[key]</td><td style="text-align:left">使用Hikari connection pool时，指定要设置的属性</td></tr><tr><td style="text-align:left">spring.datasource.db-properties</td><td style="text-align:left">使用Tomcat connection pool，指定要设置的属性</td></tr><tr><td style="text-align:left">spring.datasource.default-auto-commit</td><td style="text-align:left">是否自动提交.</td></tr><tr><td style="text-align:left">spring.datasource.default-catalog</td><td style="text-align:left">指定连接默认的catalog.</td></tr><tr><td style="text-align:left">spring.datasource.default-read-only</td><td style="text-align:left">是否设置默认连接只读.</td></tr><tr><td style="text-align:left">spring.datasource.default-transaction-isolation</td><td style="text-align:left">指定连接的事务的默认隔离级别.</td></tr><tr><td style="text-align:left">spring.datasource.driver-class-name</td><td style="text-align:left">指定driver的类名，默认从jdbc url中自动探测.</td></tr><tr><td style="text-align:left">spring.datasource.fair-queue</td><td style="text-align:left">是否采用FIFO返回连接.</td></tr><tr><td style="text-align:left">spring.datasource.health-check-properties.[key]</td><td style="text-align:left">使用Hikari connection pool时，在心跳检查时传递的属性</td></tr><tr><td style="text-align:left">spring.datasource.idle-timeout</td><td style="text-align:left">指定连接多久没被使用时，被设置为空闲，默认为10ms</td></tr><tr><td style="text-align:left">spring.datasource.ignore-exception-on-pre-load</td><td style="text-align:left">当初始化连接池时，是否忽略异常.</td></tr><tr><td style="text-align:left">spring.datasource.init-sql</td><td style="text-align:left">当连接创建时，执行的sql</td></tr><tr><td style="text-align:left">spring.datasource.initial-size</td><td style="text-align:left">指定启动连接池时，初始建立的连接数量</td></tr><tr><td style="text-align:left">spring.datasource.initialization-fail-fast</td><td style="text-align:left">当创建连接池时，没法创建指定最小连接数量是否抛异常</td></tr><tr><td style="text-align:left">spring.datasource.initialize</td><td style="text-align:left">指定初始化数据源，是否用data.sql来初始化，默认: true</td></tr><tr><td style="text-align:left">spring.datasource.isolate-internal-queries</td><td style="text-align:left">指定内部查询是否要被隔离，默认为false</td></tr><tr><td style="text-align:left">spring.datasource.jdbc-interceptors</td><td style="text-align:left">使用Tomcat connection pool时，指定jdbc拦截器，分号分隔</td></tr><tr><td style="text-align:left">spring.datasource.jdbc-url</td><td style="text-align:left">指定JDBC URL.</td></tr><tr><td style="text-align:left">spring.datasource.jmx-enabled</td><td style="text-align:left">是否开启JMX，默认为: false</td></tr><tr><td style="text-align:left">spring.datasource.jndi-name</td><td style="text-align:left">指定jndi的名称.</td></tr><tr><td style="text-align:left">spring.datasource.leak-detection-threshold</td><td style="text-align:left">使用Hikari connection pool时，多少毫秒检测一次连接泄露.</td></tr><tr><td style="text-align:left">spring.datasource.log-abandoned</td><td style="text-align:left">使用DBCP connection pool，是否追踪废弃statement或连接，默认为: false</td></tr><tr><td style="text-align:left">spring.datasource.log-validation-errors</td><td style="text-align:left">当使用Tomcat connection pool是否打印校验错误.</td></tr><tr><td style="text-align:left">spring.datasource.login-timeout</td><td style="text-align:left">指定连接数据库的超时时间.</td></tr><tr><td style="text-align:left">spring.datasource.max-active</td><td style="text-align:left">指定连接池中最大的活跃连接数.</td></tr><tr><td style="text-align:left">spring.datasource.max-age</td><td style="text-align:left">指定连接池中连接的最大年龄</td></tr><tr><td style="text-align:left">spring.datasource.max-idle</td><td style="text-align:left">指定连接池最大的空闲连接数量.</td></tr><tr><td style="text-align:left">spring.datasource.max-lifetime</td><td style="text-align:left">指定连接池中连接的最大生存时间，毫秒单位.</td></tr><tr><td style="text-align:left">spring.datasource.max-open-prepared-statements</td><td style="text-align:left">指定最大的打开的prepared statements数量.</td></tr><tr><td style="text-align:left">spring.datasource.max-wait</td><td style="text-align:left">指定连接池等待连接返回的最大等待时间，毫秒单位.</td></tr><tr><td style="text-align:left">spring.datasource.maximum-pool-size</td><td style="text-align:left">指定连接池最大的连接数，包括使用中的和空闲的连接.</td></tr><tr><td style="text-align:left">spring.datasource.min-evictable-idle-time-millis</td><td style="text-align:left">指定一个空闲连接最少空闲多久后可被清除.</td></tr><tr><td style="text-align:left">spring.datasource.min-idle</td><td style="text-align:left">指定必须保持连接的最小值(For DBCP and Tomcat connection pools)</td></tr><tr><td style="text-align:left">spring.datasource.minimum-idle</td><td style="text-align:left">指定连接维护的最小空闲连接数，当使用HikariCP时指定.</td></tr><tr><td style="text-align:left">spring.datasource.name</td><td style="text-align:left">指定数据源名.</td></tr><tr><td style="text-align:left">spring.datasource.num-tests-per-eviction-run</td><td style="text-align:left">指定运行每个idle object evictor线程时的对象数量</td></tr><tr><td style="text-align:left">spring.datasource.password</td><td style="text-align:left">指定数据库密码.</td></tr><tr><td style="text-align:left">spring.datasource.platform</td><td style="text-align:left">指定schema要使用的Platform(schema-${platform}.sql)，默认为: all</td></tr><tr><td style="text-align:left">spring.datasource.pool-name</td><td style="text-align:left">指定连接池名字.</td></tr><tr><td style="text-align:left">spring.datasource.pool-prepared-statements</td><td style="text-align:left">指定是否池化statements.</td></tr><tr><td style="text-align:left">spring.datasource.propagate-interrupt-state</td><td style="text-align:left">在等待连接时，如果线程被中断，是否传播中断状态.</td></tr><tr><td style="text-align:left">spring.datasource.read-only</td><td style="text-align:left">当使用Hikari connection pool时，是否标记数据源只读</td></tr><tr><td style="text-align:left">spring.datasource.register-mbeans</td><td style="text-align:left">指定Hikari connection pool是否注册JMX MBeans.</td></tr><tr><td style="text-align:left">spring.datasource.remove-abandoned</td><td style="text-align:left">指定当连接超过废弃超时时间时，是否立刻删除该连接.</td></tr><tr><td style="text-align:left">spring.datasource.remove-abandoned-timeout</td><td style="text-align:left">指定连接应该被废弃的时间.</td></tr><tr><td style="text-align:left">spring.datasource.rollback-on-return</td><td style="text-align:left">在归还连接时，是否回滚等待中的事务.</td></tr><tr><td style="text-align:left">spring.datasource.schema</td><td style="text-align:left">指定Schema (DDL)脚本.</td></tr><tr><td style="text-align:left">spring.datasource.separator</td><td style="text-align:left">指定初始化脚本的语句分隔符，默认: ;</td></tr><tr><td style="text-align:left">spring.datasource.sql-script-encoding</td><td style="text-align:left">指定SQL scripts编码.</td></tr><tr><td style="text-align:left">spring.datasource.suspect-timeout</td><td style="text-align:left">指定打印废弃连接前的超时时间.</td></tr><tr><td style="text-align:left">spring.datasource.test-on-borrow</td><td style="text-align:left">当从连接池借用连接时，是否测试该连接.</td></tr><tr><td style="text-align:left">spring.datasource.test-on-connect</td><td style="text-align:left">创建时，是否测试连接</td></tr><tr><td style="text-align:left">spring.datasource.test-on-return</td><td style="text-align:left">在连接归还到连接池时是否测试该连接.</td></tr><tr><td style="text-align:left">spring.datasource.test-while-idle</td><td style="text-align:left">当连接空闲时，是否执行连接测试.</td></tr><tr><td style="text-align:left">spring.datasource.time-between-eviction-runs-millis</td><td style="text-align:left">指定空闲连接检查、废弃连接清理、空闲连接池大小调整之间的操作时间间隔</td></tr><tr><td style="text-align:left">spring.datasource.transaction-isolation</td><td style="text-align:left">指定事务隔离级别，使用Hikari connection pool时指定</td></tr><tr><td style="text-align:left">spring.datasource.url</td><td style="text-align:left">指定JDBC URL.</td></tr><tr><td style="text-align:left">spring.datasource.use-disposable-connection-facade</td><td style="text-align:left">是否对连接进行包装，防止连接关闭之后被使用.</td></tr><tr><td style="text-align:left">spring.datasource.use-equals</td><td style="text-align:left">比较方法名时是否使用String.equals()替换==.</td></tr><tr><td style="text-align:left">spring.datasource.use-lock</td><td style="text-align:left">是否对连接操作加锁</td></tr><tr><td style="text-align:left">spring.datasource.username</td><td style="text-align:left">指定数据库名.</td></tr><tr><td style="text-align:left">spring.datasource.validation-interval</td><td style="text-align:left">指定多少ms执行一次连接校验.</td></tr><tr><td style="text-align:left">spring.datasource.validation-query</td><td style="text-align:left">指定获取连接时连接校验的sql查询语句.</td></tr><tr><td style="text-align:left">spring.datasource.validation-query-timeout</td><td style="text-align:left">指定连接校验查询的超时时间.</td></tr><tr><td style="text-align:left">spring.datasource.validation-timeout</td><td style="text-align:left">设定连接校验的超时时间，当使用Hikari connection pool时指定</td></tr><tr><td style="text-align:left">spring.datasource.validator-class-name</td><td style="text-align:left">用来测试查询的validator全限定名.</td></tr><tr><td style="text-align:left">spring.datasource.xa.data-source-class-name</td><td style="text-align:left">指定数据源的全限定名.</td></tr><tr><td style="text-align:left">spring.datasource.xa.properties</td><td style="text-align:left">指定传递给XA data source的属性</td></tr></tbody></table><blockquote><p>参照:<br><a href="https://tomcat.apache.org/tomcat-8.0-doc/jdbc-pool.html#Common_Attributes">Tomcat官网配置</a><br><a href="https://segmentfault.com/a/1190000004316491">转载博文</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot开启Gzip压缩</title>
      <link href="/2018/06/13/spring-boot-gzip/"/>
      <url>/2018/06/13/spring-boot-gzip/</url>
      
        <content type="html"><![CDATA[<h2 id="优化场景"><a href="#优化场景" class="headerlink" title="优化场景"></a>优化场景</h2><blockquote><p>在优化接口时间的过程中，发现很多接口的<code>Content Download</code>时间较长，除了网络问题，就是接口请求的数据太大了，有的达到了几百kb。<br>控制返回参数收效甚微，这时开启gzip就非常有用了，可以压缩接口请求的数据，一般的<code>json</code>文本压缩比率很大，开启之后接口时间大幅下降！</p></blockquote><ul><li>Spring boot版本：<code>1.5.8.RELEASE</code></li></ul><h3 id="启用步骤"><a href="#启用步骤" class="headerlink" title="启用步骤"></a>启用步骤</h3><p>Spring boot项目配置比较简单：<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.compression.enabled</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><br>默认只压缩超过2048字节的数据，修改<code>server.compression.min-response-size</code>的值可以设置该大小<br>默认情况下，只有在响应内容类型为以下内容时才会压缩响应：</p><ul><li><code>text/html</code></li><li><code>text/xml</code></li><li><code>text/plain</code></li><li><code>text/css</code><br>我们的接口返回的是json数据，所以修改下面的配置：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.compression.mime-types=application/json</span><br></pre></td></tr></table></figure>这样Gzip就开启了！<blockquote><p><strong>注意：</strong> 老版本的<code>Spring boot</code>的启用配置和新版本的不同，我发现项目中原本是启用的，之后升级<code>Spring boot</code>版本时没有更新配置导致了未启用。所以<code>在更新框架版本时，要及时注意配置的变动，以防一些功能失效！</code><br>老版本的配置：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.tomcat.compression</span>=<span class="string">on</span></span><br><span class="line"><span class="meta">server.tomcat.compressableMimeTypes</span>=<span class="string">application/json</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="如何查看Gzip是否开启成功"><a href="#如何查看Gzip是否开启成功" class="headerlink" title="如何查看Gzip是否开启成功"></a>如何查看Gzip是否开启成功</h3>Google浏览器打开F12，切换到NetWork下，右键表头选择Response Headers下的<code>Content-Encoding</code>，如果开启了Gzip，对应接口中的<code>Content-Encoding</code>中会有显示。<blockquote><p><strong>注意：</strong> 在同时开启https和http的工程中，Gzip配置只对主端口生效！</p></blockquote></li></ul><h3 id="启用后的效果"><a href="#启用后的效果" class="headerlink" title="启用后的效果"></a>启用后的效果</h3><p>开启前：数据Size为511KB，右侧时间蓝色部分（Content Download）较长<br><img src="/images/gzip_1.png" title="开启前！"><br>开启前：数据Size为21.3KB，Content-Encoding中显示gzip，右侧时间蓝色部分消失<br><img src="/images/gzip_2.png" title="开启后！"><br>对比效果非常明显，接口时间由<code>1.03s</code>降到<code>164ms</code>，完美！</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring boot </tag>
            
            <tag> https </tag>
            
            <tag> Gzip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发布自己的npm包，hexo文章排序插件</title>
      <link href="/2018/06/11/npm-publish/"/>
      <url>/2018/06/11/npm-publish/</url>
      
        <content type="html"><![CDATA[<h2 id="问题场景"><a href="#问题场景" class="headerlink" title="问题场景"></a>问题场景</h2><blockquote><p>搭建博客时文章的排序问题，想要按照更新时间排序，另外支持置顶，默认的排序插件和npm搜索到的很多插件都不能同时支持这两种排序方式。<br>后来查看了<code>hexo-generator-index-pin-top</code>插件的源码，修改了排序字段后本地测试成功。那么每次在本地安装完插件都要先修改源码了，<br>这对于我来说就很可怕了，正好了解到npm可以发布自己的包，按部就班做完，效果非常棒！</p></blockquote><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>项目地址： <a href="https://github.com/chenbin-353549444/hexo-generator-index-updated">Github</a><br>插件地址： <a href="https://www.npmjs.com/package/hexo-generator-index-updated">hexo-generator-index-updated</a></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li>初始化npm项目<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure>填写完一大堆东西后会生成一个<code>package.json</code>，然后就可以编写代码了<br>这里我是修改别人的插件，所以直接fork了那个插件的Github工程，然后修改package.json</li><li>登陆npm帐号<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br><span class="line"><span class="comment"># 验证登陆</span></span><br><span class="line">npm who am i</span><br></pre></td></tr></table></figure>当然，首先要去<a href="https://www.npmjs.com/">npm官网</a>注册一个帐号</li><li>发布<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish .</span><br></pre></td></tr></table></figure>完成后显示一行包名和版本号就是成功了，npm会发一封邮件给你<br>更新时修改版本号再发布一边就行了</li></ul><h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><ul><li>无法登陆<blockquote><p>因为之前使用了npm淘宝镜像，这时候要改回原来的源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用淘宝镜像</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 改回原来的源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry http://registry.npmjs.org</span><br></pre></td></tr></table></figure></blockquote></li><li>发布命令显示成功，但是没有收到邮件，登陆官网查看也没有包<blockquote><p>这个问题比较诡异，因为是国外网站，所以当时我是开了VPN发布的，显示成功但是实际没有上传到官网。<br>后来过了几天在没开VPN状态下发布成功了，可能与网络环境和代理有关，所以<code>发布还是不要连VPN了！</code>。</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node </tag>
            
            <tag> Npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot同时支持http和https访问</title>
      <link href="/2018/05/17/spring-boot-https/"/>
      <url>/2018/05/17/spring-boot-https/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-boot同时支持http和https访问"><a href="#Spring-boot同时支持http和https访问" class="headerlink" title="Spring boot同时支持http和https访问"></a><strong>Spring boot同时支持http和https访问</strong></h1><ul><li>Spring boot版本：<code>1.5.8.RELEASE</code></li></ul><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>在<code>application.properties</code>中添加配置<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span> = <span class="string">8443</span></span><br><span class="line"><span class="meta">server.ssl.key-store</span> = <span class="string">classpath:sample.jks</span></span><br><span class="line"><span class="meta">server.ssl.key-store-password</span> = <span class="string">secret</span></span><br><span class="line"><span class="meta">server.ssl.key-password</span> = <span class="string">password</span></span><br></pre></td></tr></table></figure></p><blockquote><ul><li>证书文件可以自己生成，这里使用官方例子中的证书文件：<a href="https://github.com/spring-projects/spring-boot/raw/master/spring-boot-samples/spring-boot-sample-tomcat-multi-connectors/src/main/resources/sample.jks">点击下载</a></li><li>证书放在<code>resources</code>文件夹下，与<code>application.properties</code>同级</li><li>这样配置意味着应用程序将不再支持8080端口上的普通HTTP连接器</li><li>Spring boot不支持通过配置<code>application.properties</code>来实现同时使用http和https两种连接方式</li></ul></blockquote><h3 id="程序内配置添加https连接器"><a href="#程序内配置添加https连接器" class="headerlink" title="程序内配置添加https连接器"></a>程序内配置添加https连接器</h3><p>不修改<code>application.properties</code>，在Spring boot入口添加下面的配置代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> EmbeddedServletContainerFactory <span class="title">servletContainer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    TomcatEmbeddedServletContainerFactory tomcat = <span class="keyword">new</span> TomcatEmbeddedServletContainerFactory();</span><br><span class="line">    tomcat.addAdditionalTomcatConnectors(createSslConnector());</span><br><span class="line">    <span class="keyword">return</span> tomcat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Connector <span class="title">createSslConnector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Connector connector = <span class="keyword">new</span> Connector(<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span>);</span><br><span class="line">    Http11NioProtocol protocol = (Http11NioProtocol) connector.getProtocolHandler();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File keystore = <span class="keyword">new</span> ClassPathResource(<span class="string">&quot;keystore&quot;</span>).getFile();</span><br><span class="line">        File truststore = <span class="keyword">new</span> ClassPathResource(<span class="string">&quot;keystore&quot;</span>).getFile();</span><br><span class="line">        connector.setScheme(<span class="string">&quot;https&quot;</span>);</span><br><span class="line">        connector.setSecure(<span class="keyword">true</span>);</span><br><span class="line">        connector.setPort(<span class="number">8443</span>);</span><br><span class="line">        protocol.setSSLEnabled(<span class="keyword">true</span>);</span><br><span class="line">        protocol.setKeystoreFile(keystore.getAbsolutePath());</span><br><span class="line">        protocol.setKeystorePass(<span class="string">&quot;changeit&quot;</span>);</span><br><span class="line">        protocol.setTruststoreFile(truststore.getAbsolutePath());</span><br><span class="line">        protocol.setTruststorePass(<span class="string">&quot;changeit&quot;</span>);</span><br><span class="line">        protocol.setKeyAlias(<span class="string">&quot;apitester&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> connector;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">&quot;can&#x27;t access keystore: [&quot;</span> + <span class="string">&quot;keystore&quot;</span></span><br><span class="line">                + <span class="string">&quot;] or truststore: [&quot;</span> + <span class="string">&quot;keystore&quot;</span> + <span class="string">&quot;]&quot;</span>, ex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这样配置8080的主端口为http访问，8843端口为https访问，可以同时使用http和https两种连接方式，<a href="https://docs.spring.io/spring-boot/docs/1.5.8.RELEASE/reference/htmlsingle/#howto-enable-multiple-connectors-in-tomcat">参考官网</a></p><blockquote><p>但是jar包启动时报错，找不到证书文件了，因为在文件在jar里面！</p></blockquote><p>jar包内路径问题暂时未找到解决办法，所以推荐用下面的方案</p><h3 id="程序内配置添加http连接器"><a href="#程序内配置添加http连接器" class="headerlink" title="程序内配置添加http连接器"></a>程序内配置添加http连接器</h3><p>在<code>application.properties</code>中添加配置<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.http.port</span> = <span class="string">8080</span></span><br><span class="line"></span><br><span class="line"><span class="meta">server.port</span> = <span class="string">8443</span></span><br><span class="line"><span class="meta">server.ssl.key-store</span> = <span class="string">classpath:sample.jks</span></span><br><span class="line"><span class="meta">server.ssl.key-store-password</span> = <span class="string">secret</span></span><br><span class="line"><span class="meta">server.ssl.key-password</span> = <span class="string">password</span></span><br></pre></td></tr></table></figure><br>添加下面的配置文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启多个连接器（同时支持http和https）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chenbin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiConnectorsConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.http.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer httpPort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EmbeddedServletContainerFactory <span class="title">servletContainer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TomcatEmbeddedServletContainerFactory tomcat = <span class="keyword">new</span> TomcatEmbeddedServletContainerFactory();</span><br><span class="line">        tomcat.addAdditionalTomcatConnectors(createStandardConnector());</span><br><span class="line">        <span class="keyword">return</span> tomcat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Connector <span class="title">createStandardConnector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connector connector = <span class="keyword">new</span> Connector(<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span>);</span><br><span class="line">        connector.setPort(httpPort);</span><br><span class="line">        <span class="keyword">return</span> connector;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这样配置8443的主端口为https访问，8080端口为http访问，<a href="https://github.com/spring-projects/spring-boot/tree/v1.5.8.RELEASE/spring-boot-samples/spring-boot-sample-tomcat-multi-connectors">参考官方例子</a><br>jar包运行也OK，问题解决！添加http连接器的配置较为简单，推荐用这种方式。</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring boot </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Jenkins和Docker持续集成java项目</title>
      <link href="/2018/05/14/spring-boot-admin-jenkins-docker/"/>
      <url>/2018/05/14/spring-boot-admin-jenkins-docker/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Jenkins和Docker持续集成java项目"><a href="#使用Jenkins和Docker持续集成java项目" class="headerlink" title="使用Jenkins和Docker持续集成java项目"></a><strong>使用Jenkins和Docker持续集成java项目</strong></h1><ul><li>项目地址：<a href="https://github.com/chenbin-353549444/spring-boot-admin-jenkins-docker">https://github.com/chenbin-353549444/spring-boot-admin-jenkins-docker</a></li><li>简介：使用<code>Jenkins</code>和<code>Docker</code>持续集成java项目，本例是Spring boot admin项目，较为简单，可做为参考。</li><li>意义：<code>Jenkinsfile</code>和<code>Dockerfile</code>将服务器设置和运维代码化、可视化、流程化、标准化，降低与其他人的沟通成本</li></ul><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>参照官网安装：<a href="https://docs.docker.com/install/linux/docker-ce/centos/">https://docs.docker.com/install/linux/docker-ce/centos/</a></p><blockquote><ul><li>注意替换国内源加速，<code>https://download.docker.com/linux/</code>替换为<code>https://mirrors.aliyun.com/docker-ce/linux/</code></li></ul></blockquote><p>配置阿里云镜像加速<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">$ sudo vi /etc/systemd/system/multi-user.target.wants/docker.service</span><br><span class="line">$ <span class="comment">#在文件中找到 ExecStart= 这一行，并且在其行尾添加上所需的配置。</span></span><br><span class="line">$ <span class="comment">#ExecStart=/usr/bin/dockerd --registry-mirror=https://c2iitbpy.mirror.aliyuncs.com</span></span><br><span class="line">$ <span class="comment">#加速器地址在阿里云管理控制台-容器服务-镜像-镜像仓库控制台-Docker Hub镜像站点中可以找到</span></span><br><span class="line">$ <span class="comment">#保存退出后，重新加载配置并启动服务：</span></span><br><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line">$ sudo systemctl restart docker</span><br><span class="line">$ <span class="comment">#确认配置是否生效</span></span><br><span class="line">$ sudo ps -ef | grep dockerd</span><br></pre></td></tr></table></figure></p><h3 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h3><p>运行Jenkins容器的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">  --name jenkins \</span><br><span class="line">  -d \</span><br><span class="line">  -u root \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -v jenkins-data:/var/jenkins_home \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -v <span class="string">&quot;<span class="variable">$HOME</span>&quot;</span>:/home \</span><br><span class="line">  jenkinsci/blueocean</span><br></pre></td></tr></table></figure></p><blockquote><ul><li>使用命名卷管理Jenkins目录，保持宿主机清洁。如要删除数据重新安装，需要删除命名卷</li><li><code>-e TZ=Asia/Shanghai</code>设置时区</li><li>将宿主的/var/run/docker.sock文件挂载到容器内的同样位置，从而让容器内可以通过unix socket调用宿主的Docker引擎</li><li>首次运行选择默认插件即可，初始密码在日志中可以找到</li><li>邮件和SSH等详细设置参照官网：<a href="https://jenkins.io/">https://jenkins.io/</a></li></ul></blockquote><h3 id="Spring-boot-admin"><a href="#Spring-boot-admin" class="headerlink" title="Spring boot admin"></a>Spring boot admin</h3><p>使用<code>start.spring.io</code>创建最简单的spring boot admin项目，依赖选择ops下的<code>spring boot admin(server)</code><br>运行后在localhost:8080可以看到admin的界面</p><h3 id="Jenkinsfile"><a href="#Jenkinsfile" class="headerlink" title="Jenkinsfile"></a>Jenkinsfile</h3><p>根目录下创建Jenkinsfile文件：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!groovy</span><br><span class="line">pipeline &#123;</span><br><span class="line">    agent none</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Build&#x27;</span>) &#123;</span><br><span class="line">            agent &#123;</span><br><span class="line">                docker &#123;</span><br><span class="line">                    image <span class="string">&#x27;maven:3.5.0-jdk-8-alpine&#x27;</span></span><br><span class="line">                    args <span class="string">&#x27;-v mavenRepository:/root/.m2&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;mvn -B -DskipTests clean package --settings settings.xml&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;Test&#x27;</span>) &#123;</span><br><span class="line">            agent &#123;</span><br><span class="line">                docker &#123;</span><br><span class="line">                    image <span class="string">&#x27;maven:3.5.0-jdk-8-alpine&#x27;</span></span><br><span class="line">                    args <span class="string">&#x27;-v mavenRepository:/root/.m2&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;mvn test --settings settings.xml&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            post &#123;</span><br><span class="line">                always &#123;</span><br><span class="line">                    junit <span class="string">&#x27;target/surefire-reports/*.xml&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;Deliver&#x27;</span>) &#123;</span><br><span class="line">            agent any</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;sh run.sh&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            mail <span class="attr">body:</span> <span class="string">&quot;$&#123;env.JOB_NAME&#125; - Build # $&#123;env.BUILD_NUMBER&#125; - $&#123;currentBuild.currentResult&#125;: Check console output at $&#123;env.BUILD_URL&#125; to view the results.&quot;</span>,</span><br><span class="line">                    <span class="symbol">subject:</span> <span class="string">&quot;$&#123;env.JOB_NAME&#125; - Build # $&#123;env.BUILD_NUMBER&#125; - $&#123;currentBuild.currentResult&#125;!&quot;</span>,</span><br><span class="line">                    <span class="symbol">to:</span> <span class="string">&#x27;353549444@qq.com&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><ul><li>使用maven容器代理<code>Build</code>和<code>Test</code>这两个步骤，该容器生命只在stage中有效</li><li>使用命名卷<code>mavenRepository</code>存储maven依赖，同一宿主机可共用</li><li>使用项目中的<code>settings.xml</code>设置maven国内源镜像</li><li><code>Deliver</code>步骤不用代理，把前两步生成的jar部署到容器中</li><li><code>post</code>步骤为发送结果邮件，需设置Jenkins管理邮箱和smtp</li></ul></blockquote><p>settings.xml中添加maven国内源镜像：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="部署脚本run-sh"><a href="#部署脚本run-sh" class="headerlink" title="部署脚本run.sh"></a>部署脚本run.sh</h3><p>写的比较简单：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 停止admin容器</span></span><br><span class="line">(docker stop admin &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;stop success&quot;</span>) || <span class="built_in">echo</span> <span class="string">&quot;stop error&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除damin容器</span></span><br><span class="line">(docker rm admin &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;rm success&quot;</span>) || <span class="built_in">echo</span> <span class="string">&quot;rm error&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除原来镜像</span></span><br><span class="line">(docker rmi admin &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;rmi success&quot;</span>) || <span class="built_in">echo</span> <span class="string">&quot;rmi error&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成新的镜像</span></span><br><span class="line">docker build -t admin .;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行admin容器</span></span><br><span class="line">docker run --name admin \</span><br><span class="line">    -p 8899:8899 \</span><br><span class="line">    -d \</span><br><span class="line">    -e TZ=Asia/Shanghai \</span><br><span class="line">    admin</span><br></pre></td></tr></table></figure><br>更复杂的脚本参考：<a href="/2018/03/26/shell-scripts">多环境jar部署脚本示例</a></p><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span>-jdk-alpine as APP</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> /tmp</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> target/admin-1.0.jar app.jar</span></span><br><span class="line"><span class="keyword">ENV</span> JAVA_OPTS=<span class="string">&quot;-Xms512m -Xmx2048m&quot;</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [ <span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;java <span class="variable">$JAVA_OPTS</span> -Djava.security.egd=file:/dev/./urandom -jar /app.jar&quot;</span> ]</span></span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>Jenkins持续集成maven项目：<a href="https://jenkins.io/doc/tutorials/build-a-java-app-with-maven">https://jenkins.io/doc/tutorials/build-a-java-app-with-maven</a><br>CentOS安装Docker：<a href="https://docs.docker.com/install/linux/docker-ce/centos">https://docs.docker.com/install/linux/docker-ce/centos</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Docker </tag>
            
            <tag> Maven </tag>
            
            <tag> Jenkins </tag>
            
            <tag> 持续集成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins服务器容器化</title>
      <link href="/2018/04/07/jenkins-docker/"/>
      <url>/2018/04/07/jenkins-docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Jenkins-Docker"><a href="#Jenkins-Docker" class="headerlink" title="Jenkins-Docker"></a><strong>Jenkins-Docker</strong></h1><blockquote><ul><li>Jenkins-Docker是一个使用Dockerfile创建可执行docker命令的Jenkins镜像的项目。之前有使用Jenkins持续集成的经历，最近开始接触Docker，那么就没有理由继续之前痛苦的Jenkins安装过程。但是使用官方镜像无法在Docker容器内使用Docker命令，所以就有了这个项目。</li><li>本项目是早期写的，在存储、权限等方面还有些缺陷，可参考新的持续集成例子：<a href="/2018/05/14/spring-boot-admin-jenkins-docker">spring-boot-admin-jenkins-docker</a></li></ul></blockquote><p>项目地址： <a href="https://github.com/chenbin-353549444/Jenkins-Docker">https://github.com/chenbin-353549444/Jenkins-Docker</a><br><a href=""><img src="https://img.shields.io/badge/docker-17.06.1--ce-blue.svg" alt="Travis"></a></p><h2 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h2><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> jenkins:alpine</span><br><span class="line"><span class="comment"># 下载安装Docker CLI</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> curl -O https://get.docker.com/builds/Linux/x86_64/docker-latest.tgz \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar zxvf docker-latest.tgz \</span></span><br><span class="line"><span class="bash">    &amp;&amp; cp docker/docker /usr/<span class="built_in">local</span>/bin/ \</span></span><br><span class="line"><span class="bash">    &amp;&amp; rm -rf docker docker-latest.tgz</span></span><br><span class="line"><span class="comment"># 将 `jenkins` 用户的组 ID 改为宿主 `docker` 组的组ID，从而具有执行 `docker` 命令的权限。</span></span><br><span class="line"><span class="keyword">ARG</span> DOCKER_GID=<span class="number">993</span></span><br><span class="line"><span class="keyword">USER</span> jenkins:$&#123;DOCKER_GID&#125;</span><br></pre></td></tr></table></figure><p>在这里，我们下载了静态编译的docker可执行文件，并提取命令行安装到系统目录下。然后调整了jenkins用户的组ID，调整为宿主docker组ID，从而使其具有执行docker命令的权限。</p><h3 id="生成镜像"><a href="#生成镜像" class="headerlink" title="生成镜像"></a>生成镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t jenkins-docker .</span><br></pre></td></tr></table></figure><p>组ID使用了<code>DOCKER_GID</code>参数来定义，以方便进一步定制。构建时可以通过–build-arg来改变DOCKER_GID的默认值，运行时也可以通过–user jenkins:1234来改变运行用户的身份。</p><blockquote><p>阿里云初始的CentOS系统中直接安装docker时，docker组ID为993</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t jenkins-docker --build-arg DOCKER_GID=1234 .</span><br></pre></td></tr></table></figure><p>这里由于国内云主机curl步骤时间太长，所以把项目关联到<code>DockerHub</code>上生成镜像: <a href="https://hub.docker.com/r/superbin/jenkins-docker/">https://hub.docker.com/r/superbin/jenkins-docker/</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull superbin/jenkins-docker</span><br></pre></td></tr></table></figure></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name jenkins \</span><br><span class="line">      -d \</span><br><span class="line">      -p 8080:8080 \</span><br><span class="line">      -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">      -v /var/jenkins_home:/var/jenkins_home \</span><br><span class="line">      -e TZ=Asia/Shanghai \</span><br><span class="line">      superbin/jenkins-docker:20171001</span><br></pre></td></tr></table></figure><p>运行jenkins容器，将宿主的/var/run/docker.sock文件挂载到容器内的同样位置，从而让容器内可以通过unix socket调用宿主的Docker引擎；将jenkins目录挂载到宿主机同样位置，以便查看初始密码和workspace<br>在这里，如果是第一次运行本项目，需要查看宿主机中的/var/jenkins_home目录，如果没有该目录要新建一个，并加上权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /var/jenkins_home</span><br><span class="line">$ chmod 777 /var/jenkins_home</span><br></pre></td></tr></table></figure><br>如果要删除jenkins数据重新安装，需要删除宿主机的/var/jenkins_home目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf /var/jenkins_home</span><br></pre></td></tr></table></figure></p><blockquote><ul><li>这里使用了挂载目录，并给出最高权限，这样做违背了linux的<code>最小权限原则</code>，可以改进为使用Docker命名卷</li><li><code>-e TZ=Asia/Shanghai</code>可以解决容器内时间相差8小时的问题</li></ul></blockquote><p>现在jenkins容器已经运行，并且可以执行docker命令了</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> Jenkins </tag>
            
            <tag> 持续集成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL存储过程</title>
      <link href="/2018/03/30/mysql-procedure/"/>
      <url>/2018/03/30/mysql-procedure/</url>
      
        <content type="html"><![CDATA[<h2 id="存储过程的定义"><a href="#存储过程的定义" class="headerlink" title="存储过程的定义"></a>存储过程的定义</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 存储过程的名字(<span class="keyword">IN</span> 参数<span class="number">1</span> 参数<span class="number">1</span>类型，<span class="keyword">OUT</span> 参数<span class="number">2</span> 参数<span class="number">2</span>类型,<span class="keyword">INOUT</span> 参数<span class="number">3</span> 类型) </span><br><span class="line">过程选项</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">过程内容</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h2 id="函数和存储过程"><a href="#函数和存储过程" class="headerlink" title="函数和存储过程"></a>函数和存储过程</h2><h3 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h3><ol><li>创建好了之后，都是存储在数据库上的对象，只需提供名称就可以调用<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> get_teacher_name_fn();</span><br><span class="line"><span class="keyword">CALL</span> get_teacher_name_proc();</span><br></pre></td></tr></table></figure></li><li>重复调用</li><li>增强安全性 可以根据用户权限访问</li></ol><h3 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h3><ol><li>函数只有一个返回值，至少一个<br>  存储过程可以多个</li><li>函数体内可以使用select .. into 为某变量赋值，不能返回结果集;存储过程可以返回结果集</li><li>函数一般嵌入在sql语句中存储过程一般单独调用call</li><li>函数体内 事务语句有限制，存储过程没有。</li></ol><h2 id="存储过程-游标-错误处理（维护用户编号）"><a href="#存储过程-游标-错误处理（维护用户编号）" class="headerlink" title="存储过程 游标 错误处理（维护用户编号）"></a>存储过程 游标 错误处理（维护用户编号）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--set_account_data 重新生成用户编号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> temp_id <span class="type">INT</span>(<span class="number">8</span>);                                        <span class="comment">/*用户id*/</span></span><br><span class="line">  <span class="keyword">DECLARE</span> temp_manager <span class="type">INT</span>(<span class="number">8</span>);                            <span class="comment">/*上级id*/</span></span><br><span class="line">  <span class="keyword">DECLARE</span> temp_accounter_no <span class="type">VARCHAR</span>(<span class="number">64</span>);        <span class="comment">/*上级编码*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> temp_max_no <span class="type">VARCHAR</span>(<span class="number">64</span>);                    <span class="comment">/*上级的最大下级编码*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> max_no <span class="type">VARCHAR</span>(<span class="number">64</span>);                                <span class="comment">/*编码*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> str1 <span class="type">VARCHAR</span>(<span class="number">64</span>);                                    <span class="comment">/*编码*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> temp_no <span class="type">INT</span>(<span class="number">8</span>);                                        <span class="comment">/*编码*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> temp_level <span class="type">INT</span>(<span class="number">8</span>);                                <span class="comment">/*级次*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> state <span class="type">VARCHAR</span>(<span class="number">30</span>);                                <span class="comment">/*错误处理监听变量*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*定义用户表游标*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> account_cursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> id,manager <span class="keyword">FROM</span> account <span class="keyword">ORDER</span> <span class="keyword">BY</span> manager,id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*定义错误处理监听，用于结束游标循环*/</span></span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="number">1329</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span>; </span><br><span class="line"></span><br><span class="line">  <span class="keyword">OPEN</span> account_cursor;</span><br><span class="line">  REPEAT</span><br><span class="line">        <span class="keyword">FETCH</span> account_cursor <span class="keyword">INTO</span> temp_id,temp_manager;</span><br><span class="line">        IF (temp_id <span class="operator">=</span> <span class="number">1</span>) <span class="keyword">THEN</span></span><br><span class="line">            <span class="keyword">UPDATE</span> account <span class="keyword">SET</span> leaf <span class="operator">=</span> <span class="number">0</span>,<span class="keyword">no</span> <span class="operator">=</span> <span class="string">&#x27;01&#x27;</span>,level <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">            <span class="comment">/*设置上级leaf为0*/</span></span><br><span class="line">            <span class="keyword">UPDATE</span> account <span class="keyword">SET</span> leaf <span class="operator">=</span> <span class="number">0</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_manager;</span><br><span class="line">            <span class="comment">/*查询上级编号*/</span></span><br><span class="line">            <span class="keyword">SELECT</span> <span class="keyword">no</span> <span class="keyword">INTO</span> temp_accounter_no <span class="keyword">FROM</span> account <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_manager;</span><br><span class="line">            <span class="comment">/*设置上级编码*/</span></span><br><span class="line">            <span class="keyword">UPDATE</span> account <span class="keyword">SET</span> pno <span class="operator">=</span> temp_accounter_no <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_id;</span><br><span class="line">            <span class="comment">/*查询上级原有的最大下级编码*/</span></span><br><span class="line">            <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(<span class="keyword">no</span>) <span class="keyword">INTO</span> temp_max_no <span class="keyword">FROM</span> account <span class="keyword">WHERE</span> pno <span class="operator">=</span> temp_accounter_no;</span><br><span class="line">            <span class="comment">/*如果最大下级编码为空，生成新的编码，否则把原来的编码加一*/</span></span><br><span class="line">            IF (temp_max_no <span class="keyword">IS</span> <span class="keyword">NULL</span>) <span class="keyword">THEN</span></span><br><span class="line">                <span class="keyword">SET</span> max_no <span class="operator">=</span> concat(temp_accounter_no, <span class="string">&#x27;0001&#x27;</span>);</span><br><span class="line">            <span class="keyword">ELSE</span> </span><br><span class="line">                <span class="keyword">SET</span> str1 <span class="operator">=</span> SUBSTR(temp_max_no,LENGTH(temp_max_no)<span class="number">-3</span>,<span class="number">4</span>);</span><br><span class="line">                <span class="keyword">SET</span> temp_no <span class="operator">=</span> str1;</span><br><span class="line">                <span class="keyword">SET</span> temp_no <span class="operator">=</span> temp_no <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">SET</span> str1 <span class="operator">=</span> temp_no;</span><br><span class="line">                IF (LENGTH(str1) <span class="operator">=</span> <span class="number">1</span>) <span class="keyword">THEN</span></span><br><span class="line">                    <span class="keyword">SET</span> str1 <span class="operator">=</span> concat(<span class="string">&#x27;000&#x27;</span>, str1);</span><br><span class="line">                ELSEIF (LENGTH(str1) <span class="operator">=</span> <span class="number">2</span>) <span class="keyword">THEN</span></span><br><span class="line">                    <span class="keyword">SET</span> str1 <span class="operator">=</span> concat(<span class="string">&#x27;00&#x27;</span>, str1);</span><br><span class="line">                ELSEIF (LENGTH(str1) <span class="operator">=</span> <span class="number">3</span>) <span class="keyword">THEN</span></span><br><span class="line">                    <span class="keyword">SET</span> str1 <span class="operator">=</span> concat(<span class="string">&#x27;0&#x27;</span>, str1);            </span><br><span class="line">                <span class="keyword">END</span> IF;</span><br><span class="line">                <span class="keyword">SET</span> max_no <span class="operator">=</span> concat(temp_accounter_no, str1);</span><br><span class="line">            <span class="keyword">END</span> IF;</span><br><span class="line">            <span class="keyword">UPDATE</span> account <span class="keyword">SET</span> <span class="keyword">no</span> <span class="operator">=</span> max_no <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_id;</span><br><span class="line">            <span class="keyword">SET</span> temp_level <span class="operator">=</span> (LENGTH(max_no) <span class="operator">+</span> <span class="number">2</span>) <span class="operator">/</span> <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">UPDATE</span> account <span class="keyword">SET</span> level <span class="operator">=</span> temp_level <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_id;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">        UNTIL state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line">    <span class="keyword">END</span> REPEAT;</span><br><span class="line">    <span class="keyword">CLOSE</span> account_cursor;</span><br><span class="line">    <span class="comment">/*修改leaf为null的为1*/</span></span><br><span class="line">    <span class="keyword">UPDATE</span> account <span class="keyword">SET</span> leaf <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WHERE</span> leaf <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line">    <span class="keyword">RETURN</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码块 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL常用命令</title>
      <link href="/2018/03/26/mysql-command/"/>
      <url>/2018/03/26/mysql-command/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL-常用命令"><a href="#MySQL-常用命令" class="headerlink" title="MySQL 常用命令"></a>MySQL 常用命令</h2><ul><li><strong>查询数据库每张表的大小</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">TABLE_NAME <span class="keyword">AS</span> <span class="string">&#x27;表名&#x27;</span>,</span><br><span class="line">concat(</span><br><span class="line">round(DATA_LENGTH <span class="operator">/</span> <span class="number">1024</span> <span class="operator">/</span> <span class="number">1024</span>, <span class="number">2</span>),</span><br><span class="line"><span class="string">&#x27;MB&#x27;</span></span><br><span class="line">) <span class="keyword">AS</span> <span class="string">&#x27;数据大小&#x27;</span>,</span><br><span class="line">concat(</span><br><span class="line">round(INDEX_LENGTH <span class="operator">/</span> <span class="number">1024</span> <span class="operator">/</span> <span class="number">1024</span>, <span class="number">2</span>),</span><br><span class="line"><span class="string">&#x27;MB&#x27;</span></span><br><span class="line">) <span class="keyword">AS</span> <span class="string">&#x27;索引大小&#x27;</span>,</span><br><span class="line">TABLE_ROWS <span class="keyword">AS</span> <span class="string">&#x27;数据条数&#x27;</span>,</span><br><span class="line">concat(</span><br><span class="line">round(</span><br><span class="line">(DATA_LENGTH <span class="operator">+</span> INDEX_LENGTH) <span class="operator">/</span> <span class="number">1024</span> <span class="operator">/</span> <span class="number">1024</span>,</span><br><span class="line"><span class="number">2</span></span><br><span class="line">),</span><br><span class="line"><span class="string">&#x27;MB&#x27;</span></span><br><span class="line">) <span class="keyword">AS</span> <span class="string">&#x27;总大小&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">TABLES</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">TABLE_SCHEMA <span class="operator">=</span> <span class="string">&#x27;AAAA&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">(DATA_LENGTH <span class="operator">+</span> INDEX_LENGTH) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>转换日志文件</strong><br><i class="mylink" ></i><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog-row-events.html" title="mysqlbinlog行事件显示">参考官网链接</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog -v --base64-output=DECODE-ROWS log_file &gt; a.txt</span><br><span class="line">./mysqlbinlog -v --base64-output=DECODE-ROWS -d efi --start-datetime=<span class="string">&quot;2009-04-12 12:00:00&quot;</span> --stop-datetime=<span class="string">&quot;2019-04-12 14:00:00&quot;</span> D:/mysql/mysql-bin.002715 &gt; D:/mysql/20190412.txt</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>导入导出</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 导出</span></span><br><span class="line">mysqldump <span class="operator">-</span>h主机 <span class="operator">-</span>P端口 <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 数据库名 <span class="operator">&gt;</span> 文件名.<span class="keyword">sql</span></span><br><span class="line"><span class="comment">-- 导入</span></span><br><span class="line">mysql <span class="operator">-</span>h主机 <span class="operator">-</span>P端口 <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 数据库名 <span class="operator">&lt;</span> 文件名.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>查看线程</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 可以解决数据库CPU占用过高的问题，根据看到的sql语句考虑加索引</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">full</span> processlist;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>查看全局配置信息</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>最大连接数</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看最大连接数</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%max_connections%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 修改最大连接数</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> max_connections<span class="operator">=</span><span class="number">1000</span>;</span><br></pre></td></tr></table></figure></li><li><strong>查看编码</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%char%&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><strong>Docker运行MySQL</strong></li><li>用户名密码是上面命令中的操作员用户名密码，不需要用root登录，默认操作员只能操作efi这个数据库</li><li>使用命名卷管理数据，保持宿主机清洁</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="keyword">run</span><span class="bash"> --name mysql \</span></span><br><span class="line"><span class="bash">    -d \</span></span><br><span class="line"><span class="bash">    -p 3306:3306 \</span></span><br><span class="line"><span class="bash">    -e MYSQL\_ROOT\_PASSWORD=rootpsw \</span></span><br><span class="line"><span class="bash">    -e MYSQL\_USER=user \</span></span><br><span class="line"><span class="bash">    -e MYSQL\_PASSWORD=userpsw \</span></span><br><span class="line"><span class="bash">    -e MYSQL\_DATABASE=efi \</span></span><br><span class="line"><span class="bash">    -v mysql:/var/lib/mysql \</span></span><br><span class="line"><span class="bash">    mysql:5.7.18 \</span></span><br><span class="line"><span class="bash">    --character-set-server=utf8mb4 \</span></span><br><span class="line"><span class="bash">    --collation-server=utf8mb4_unicode_ci</span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多环境jar部署脚本示例</title>
      <link href="/2018/03/26/shell-scripts/"/>
      <url>/2018/03/26/shell-scripts/</url>
      
        <content type="html"><![CDATA[<h1 id="多环境jar部署脚本示例"><a href="#多环境jar部署脚本示例" class="headerlink" title="多环境jar部署脚本示例"></a>多环境jar部署脚本示例</h1><blockquote><ul><li><code>多环境</code> <code>方法传参</code> <code>错误处理</code> <code>容器相关处理</code> <code>提示信息</code></li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#检查参数合法性</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">check</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;prod&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;stage&quot;</span>  &amp;&amp; <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;qa&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;jzs&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\r\nUsage: sh run.sh <span class="variable">$2</span> qa|stage|prod|jzs&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#错误处理</span></span><br><span class="line"><span class="keyword">function</span> error_exit &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> 1&gt;&amp;2</span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止容器</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    check <span class="variable">$1</span> stop;</span><br><span class="line">    (docker stop <span class="variable">$1</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;stop <span class="variable">$1</span> success&quot;</span>) || <span class="built_in">echo</span> <span class="string">&quot;stop <span class="variable">$1</span> error&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除容器</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">remove</span></span>() &#123;</span><br><span class="line">    check <span class="variable">$1</span> remove;</span><br><span class="line">    (docker rm <span class="variable">$1</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;remove <span class="variable">$1</span> success&quot;</span>) || <span class="built_in">echo</span> <span class="string">&quot;remove <span class="variable">$1</span> error&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行测试、打包、生成docker镜像</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">build</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;prod&quot;</span> || <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;jzs&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        buildWithMaven;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        buildWithMavenWrapper;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用maven打包</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">buildWithMaven</span></span>() &#123;</span><br><span class="line">    (mvn clean install dockerfile:build &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;build success&quot;</span>) || error_exit <span class="string">&quot;build error&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用maven wrapper打包</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">buildWithMavenWrapper</span></span>() &#123;</span><br><span class="line">    chmod 777 ./mvnw;</span><br><span class="line">    (./mvnw clean install dockerfile:build &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;build success&quot;</span>) || error_exit <span class="string">&quot;build error&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动容器 参数1:运行环境 参数2:端口&lt;prod 8089|stage 8089|qa 8088|jzs 8090&gt;</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    check <span class="variable">$1</span> start;</span><br><span class="line">    docker run --name <span class="variable">$1</span> \</span><br><span class="line">    -e <span class="string">&quot;SPRING_PROFILES_ACTIVE=<span class="variable">$1</span>&quot;</span> \</span><br><span class="line">    -d \</span><br><span class="line">    -p <span class="variable">$2</span>:<span class="variable">$2</span> \</span><br><span class="line">    -v /var/<span class="built_in">log</span>/hongfund/<span class="variable">$1</span>:/var/<span class="built_in">log</span>/hongfund/<span class="variable">$1</span> \</span><br><span class="line">    -e TZ=Asia/Shanghai \</span><br><span class="line">    hongfund/efi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动容器 参数1:运行环境 参数2:端口&lt;prod 8089|stage 8089|qa 8088&gt;</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">clean</span></span>() &#123;</span><br><span class="line">    (docker rmi $(docker images -aq -f <span class="string">&quot;dangling=true&quot;</span>) &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;clean success&quot;</span>) || <span class="built_in">echo</span> <span class="string">&quot;clean error&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署qa</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">qa</span></span>() &#123;</span><br><span class="line">    stop qa;</span><br><span class="line">    remove qa;</span><br><span class="line">    build qa;</span><br><span class="line">    start qa 8088;</span><br><span class="line">    clean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署stage</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">stage</span></span>() &#123;</span><br><span class="line">    stop stage;</span><br><span class="line">    remove stage;</span><br><span class="line">    build stage;</span><br><span class="line">    start stage 8089;</span><br><span class="line">    clean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署prod</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">prod</span></span>() &#123;</span><br><span class="line">    stop prod;</span><br><span class="line">    remove prod;</span><br><span class="line">    build prod;</span><br><span class="line">    start prod 8089;</span><br><span class="line">    clean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署jzs</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">jzs</span></span>() &#123;</span><br><span class="line">    stop jzs;</span><br><span class="line">    remove jzs;</span><br><span class="line">    build jzs;</span><br><span class="line">    start jzs 8090;</span><br><span class="line">    clean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">show_help</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\r\n\t欢迎使用hongfund&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\r\nUsage: sh run.sh stop|remove|build|start|qa|stage|prod|jzs&quot;</span></span><br><span class="line">    <span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    Command=<span class="variable">$1</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$&#123;Command&#125;</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        stop)       stop <span class="string">&quot;<span class="variable">$2</span>&quot;</span> ;;</span><br><span class="line">        remove)     remove <span class="string">&quot;<span class="variable">$2</span>&quot;</span> ;;</span><br><span class="line">        build)      build <span class="string">&quot;<span class="variable">$2</span>&quot;</span> ;;</span><br><span class="line">        start)      start <span class="string">&quot;<span class="variable">$2</span>&quot;</span> <span class="string">&quot;<span class="variable">$3</span>&quot;</span> ;;</span><br><span class="line">        qa)         qa ;;</span><br><span class="line">        stage)      stage ;;</span><br><span class="line">        prod)       prod ;;</span><br><span class="line">        jzs)        jzs ;;</span><br><span class="line">        clean)      clean ;;</span><br><span class="line">        *)          show_help ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">main <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Shell </tag>
            
            <tag> Docker </tag>
            
            <tag> Maven </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本用法</title>
      <link href="/2018/03/26/markdown-preview/"/>
      <url>/2018/03/26/markdown-preview/</url>
      
        <content type="html"><![CDATA[<p>Text can be <strong>bold</strong>, <em>italic</em>, or <del>strikethrough</del>.</p><p><a href="/2018/03/13/markdown-another-page">Link to another page</a>.</p><p>There should be whitespace between paragraphs.</p><p>There should be whitespace between paragraphs. We recommend including a <code>README</code>, or a file with information about your project.</p><h1 id="Header-1"><a href="#Header-1" class="headerlink" title="Header 1"></a><a href="#header-1"></a>Header 1</h1><a id="more"></a><p>This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.</p><h2 id="Header-2"><a href="#Header-2" class="headerlink" title="Header 2"></a><a href="#header-2"></a>Header 2</h2><blockquote><p>This is a blockquote following a header.</p><p>When something is important enough, you do it even if the odds are not in your favor.</p></blockquote><h3 id="Header-3"><a href="#Header-3" class="headerlink" title="Header 3"></a><a href="#header-3"></a>Header 3</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Javascript code with syntax highlighting.</span></span><br><span class="line"><span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span> <span class="title">lang</span>(<span class="params">l</span>) </span>&#123;</span><br><span class="line">  dateformat.i18n = <span class="built_in">require</span>(<span class="string">&#x27;./lang/&#x27;</span> + l)</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ruby code with syntax highlighting</span></span><br><span class="line">GitHubPages::Dependencies.gems.each <span class="keyword">do</span> <span class="params">|gem, version|</span></span><br><span class="line">  s.add_dependency(gem, <span class="string">&quot;= <span class="subst">#&#123;version&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="Header-4"><a href="#Header-4" class="headerlink" title="Header 4"></a><a href="#header-4"></a>Header 4</h4><ul><li>This is an unordered list following a header.</li><li>This is an unordered list following a header.</li><li>This is an unordered list following a header.</li></ul><h5 id="Header-5"><a href="#Header-5" class="headerlink" title="Header 5"></a><a href="#header-5"></a>Header 5</h5><ol><li>This is an ordered list following a header.</li><li>This is an ordered list following a header.</li><li>This is an ordered list following a header.</li></ol><h6 id="Header-6"><a href="#Header-6" class="headerlink" title="Header 6"></a><a href="#header-6"></a>Header 6</h6><table><thead><tr><th style="text-align:left">head1</th><th style="text-align:left">head two</th><th style="text-align:left">three</th></tr></thead><tbody><tr><td style="text-align:left">ok</td><td style="text-align:left">good swedish fish</td><td style="text-align:left">nice</td></tr><tr><td style="text-align:left">out of stock</td><td style="text-align:left">good and plenty</td><td style="text-align:left">nice</td></tr><tr><td style="text-align:left">ok</td><td style="text-align:left">good <code>oreos</code></td><td style="text-align:left">hmm</td></tr><tr><td style="text-align:left">ok</td><td style="text-align:left">good <code>zoute</code> drop</td><td style="text-align:left">yumm</td></tr></tbody></table><h3 id="There’s-a-horizontal-rule-below-this"><a href="#There’s-a-horizontal-rule-below-this" class="headerlink" title="There’s a horizontal rule below this."></a>There’s a horizontal rule below this.</h3><hr><h3 id="Here-is-an-unordered-list"><a href="#Here-is-an-unordered-list" class="headerlink" title="Here is an unordered list:"></a>Here is an unordered list:</h3><ul><li>Item foo</li><li>Item bar</li><li>Item baz</li><li>Item zip</li></ul><h3 id="And-an-ordered-list"><a href="#And-an-ordered-list" class="headerlink" title="And an ordered list:"></a>And an ordered list:</h3><ol><li>Item one</li><li>Item two</li><li>Item three</li><li>Item four</li></ol><h3 id="And-a-nested-list"><a href="#And-a-nested-list" class="headerlink" title="And a nested list:"></a>And a nested list:</h3><ul><li>level 1 item<ul><li>level 2 item</li><li>level 2 item<ul><li>level 3 item</li><li>level 3 item</li></ul></li></ul></li><li>level 1 item<ul><li>level 2 item</li><li>level 2 item</li><li>level 2 item</li></ul></li><li>level 1 item<ul><li>level 2 item</li><li>level 2 item</li></ul></li><li>level 1 item</li></ul><h3 id="Small-image"><a href="#Small-image" class="headerlink" title="Small image"></a>Small image</h3><p><img src="https://assets-cdn.github.com/images/icons/emoji/octocat.png" alt=""></p><h3 id="Large-image"><a href="#Large-image" class="headerlink" title="Large image"></a>Large image</h3><p><img src="https://guides.github.com/activities/hello-world/branching.png" alt=""></p><h3 id="Definition-lists-can-be-used-with-HTML-syntax"><a href="#Definition-lists-can-be-used-with-HTML-syntax" class="headerlink" title="Definition lists can be used with HTML syntax."></a>Definition lists can be used with HTML syntax.</h3><dl><br><dt>Name</dt><br><dd>Godzilla</dd><br><dt>Born</dt><br><dd>1952</dd><br><dt>Birthplace</dt><br><dd>Japan</dd><br><dt>Color</dt><br><dd>Green</dd><br></dl><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The final element.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里巴巴 Java 开发手册</title>
      <link href="/2018/03/26/programming-standard/"/>
      <url>/2018/03/26/programming-standard/</url>
      
        <content type="html"><![CDATA[<hr><object data='/alibaba.pdf'         type='application/pdf'         width='100%'         height='800px'><br><p>This browser does not support inline PDFs. Please download the PDF to view it: <a href="/alibaba.pdf">Download PDF</a></p><br></object><blockquote><p>阿里巴巴 Java 开发手册 ： <a href="https://github.com/alibaba/p3c">GitHub地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MySQL </tag>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2018/03/26/linux-command/"/>
      <url>/2018/03/26/linux-command/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h2><h3 id="存储相关"><a href="#存储相关" class="headerlink" title="存储相关"></a>存储相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看系统中文件的使用情况</span></span><br><span class="line">df -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前目录大小</span></span><br><span class="line">du -sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前目录下磁盘占用情况，递归层数为1，按大小排序</span></span><br><span class="line">du -h --time --max-depth=1 | sort -hr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找所有带wine的文件和文件夹</span></span><br><span class="line">find / -name *wine*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件开头50行的内容</span></span><br><span class="line">head -n 50 filePath</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件结尾50行的内容</span></span><br><span class="line">tail -n 50 filePath</span><br></pre></td></tr></table></figure><h3 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a>进程相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除进程</span></span><br><span class="line"><span class="built_in">kill</span> -s 9 PID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口被占用情况</span></span><br><span class="line">netstat -tunlp|grep 22</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看java进程</span></span><br><span class="line">ps -ef|grep java</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入进程所在目录</span></span><br><span class="line"><span class="built_in">cd</span> /proc/PID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看进程的内存映像信息</span></span><br><span class="line">pmap -d 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看内存占用最多的10个进程</span></span><br><span class="line">ps -aux | sort -k4nr | head -10</span><br></pre></td></tr></table></figure><h3 id="系统参数"><a href="#系统参数" class="headerlink" title="系统参数"></a>系统参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看系统内核版本号及系统名称</span></span><br><span class="line">uname -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS查看是32位还是64位</span></span><br><span class="line">getconf LONG_BIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 看cpu参数</span></span><br><span class="line">cat /proc/cpuinfo</span><br><span class="line">lscpu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网速</span></span><br><span class="line">iftop</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS修改主机名</span></span><br><span class="line">hostnamectl set-hostname &lt;hostname&gt;</span><br></pre></td></tr></table></figure><h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取网页信息</span></span><br><span class="line">curl www.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl测试接口时间</span></span><br><span class="line">curl -o /dev/null -s -w %&#123;time_namelookup&#125;::%&#123;time_connect&#125;::%&#123;time_starttransfer&#125;::%&#123;time_total&#125;::%&#123;speed_download&#125;<span class="string">&quot;\n&quot;</span> http://www.baidu.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
            <tag> CentOS </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/25/hello-world/"/>
      <url>/2018/03/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot部署脚本</title>
      <link href="/2017/06/21/linux-run-jar/"/>
      <url>/2017/06/21/linux-run-jar/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Spring boot程序需要打成jar包在Linux上后台运行，维护比较困难，所以找到了以下脚本，可以存储java程序的pid到文件中去，方便停止和查看状态<br><strong>注意：</strong><code>这是比较原始的部署方式了，现在已经使用Docker方式部署了</code>，详见另一篇博文：<a href="/2018/03/26/shell-scripts">多环境jar部署脚本示例</a></p></blockquote><h3 id="start-sh"><a href="#start-sh" class="headerlink" title="start.sh"></a>start.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">rm -f tpid</span><br><span class="line"></span><br><span class="line">nohup java -jar -Dspring.profiles.active=profileName -Xms512m -Xmx2048m myapp.jar --spring.config.location=application.yml &gt; /dev/null 2&gt;&amp;1 &amp;<span class="built_in">echo</span> $! &gt; tpid</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Start Success!</span><br></pre></td></tr></table></figure><h3 id="stop-sh"><a href="#stop-sh" class="headerlink" title="stop.sh"></a>stop.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">APP_NAME=myapp</span><br><span class="line"></span><br><span class="line">tpid=`ps -ef|grep <span class="variable">$APP_NAME</span>|grep -v grep|grep -v <span class="built_in">kill</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;tpid&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;Stop Process...&#x27;</span></span><br><span class="line">    <span class="built_in">kill</span> -15 <span class="variable">$tpid</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sleep 5</span><br><span class="line">tpid=`ps -ef|grep <span class="variable">$APP_NAME</span>|grep -v grep|grep -v <span class="built_in">kill</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;tpid&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;Kill Process!&#x27;</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$tpid</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;Stop Success!&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="check-sh"><a href="#check-sh" class="headerlink" title="check.sh"></a>check.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">APP_NAME=myapp</span><br><span class="line"></span><br><span class="line">tpid=`ps -ef|grep <span class="variable">$APP_NAME</span>|grep -v grep|grep -v <span class="built_in">kill</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;tpid&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;App is running.&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;App is NOT running.&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="kill-sh"><a href="#kill-sh" class="headerlink" title="kill.sh"></a>kill.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">APP_NAME=myapp</span><br><span class="line"></span><br><span class="line">tpid=`ps -ef|grep <span class="variable">$APP_NAME</span>|grep -v grep|grep -v <span class="built_in">kill</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;tpid&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;Kill Process!&#x27;</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$tpid</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> Spring boot </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下将Sublime Text添加到鼠标右键的方法</title>
      <link href="/2017/06/05/sublime/"/>
      <url>/2017/06/05/sublime/</url>
      
        <content type="html"><![CDATA[<ol><li>win+R 打开运行，并输入regedit。</li><li>在左侧依次打开HKEY_CLASSES_ROOT*\shell</li><li>在shell下新建“Sublime Text”项，在右侧窗口的“默认”键值栏内输入“用Sublime Text打开”。项的名称和键值可以任意，最好是和程序关联起来。其中键值将显示在右键菜单中。</li><li>在“用Sublime Text打开”下再新建Command项，在右侧窗口的“默认”键值栏内输入Sublime Text程序所在的路径,在路径后添加 %1。%1表示要打开的文件参数。例如：<code>D:\Program Files\Sublime Text 3</code></li><li>关闭注册表窗口，立即生效。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 错误处理</title>
      <link href="/2017/04/28/mysql-4/"/>
      <url>/2017/04/28/mysql-4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 状态</span></span><br><span class="line"><span class="comment">-- 0 插入成功</span></span><br><span class="line"><span class="comment">-- -1 选课失败,已选择</span></span><br><span class="line"><span class="comment">-- -2 选课失败,课程已达到人数上限</span></span><br><span class="line"><span class="comment">-- -3 选课失败,课程未审核</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入时要判断的条件:</span></span><br><span class="line"><span class="comment">-- 未选择过该课程，否则返回 -1</span></span><br><span class="line"><span class="comment">-- 课程是审核过的,否则返回 -3</span></span><br><span class="line"><span class="comment">-- 课程人数未满, 否则返回 -2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> course <span class="keyword">SET</span> available <span class="operator">=</span> <span class="number">0</span> <span class="keyword">WHERE</span> course_no <span class="operator">=</span> <span class="number">2</span>; <span class="comment">-- 先把2课程可用人数设置为0</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">2</span>,<span class="variable">@state</span>);  <span class="comment">-- -2 人数已满</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>,<span class="variable">@state2</span>; </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">3</span>,<span class="variable">@state</span>);  <span class="comment">-- -1 已选择过</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">4</span>,<span class="variable">@state</span>);  <span class="comment">-- -3 未审核</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> <span class="string">&#x27;2013003&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自定义错误处理</span></span><br><span class="line"><span class="comment">-- 错误码: 1452</span></span><br><span class="line">格式:</span><br><span class="line"><span class="keyword">DECLARE</span> 错误处理类型 HANDLER <span class="keyword">FOR</span> 错误触发条件</span><br><span class="line">自定义错误处理程序</span><br><span class="line"></span><br><span class="line">错误处理类型: <span class="number">1</span> CONTINUE <span class="number">2</span> EXIT</span><br><span class="line">错误触发条件：错误码</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> choose_proc;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> choose_proc(<span class="keyword">IN</span> stu_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">IN</span> c_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">OUT</span> state <span class="type">INT</span>) </span><br><span class="line"><span class="keyword">MODIFIES</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">DECLARE</span> s1 <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> s2 <span class="type">VARCHAR</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> s3 <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="number">1452</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> <span class="variable">@errorInfo</span> <span class="operator">=</span> <span class="string">&#x27;外键约束错误&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- 1. 查询有没有选择过</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> s1 <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> stu_no <span class="keyword">AND</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">    IF(s1 <span class="operator">&gt;=</span> <span class="number">1</span>) <span class="keyword">THEN</span> </span><br><span class="line">        <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">ELSE</span> </span><br><span class="line">        <span class="comment">-- 2. 查询课程是不是已审核的</span></span><br><span class="line">        <span class="keyword">SELECT</span> STATUS <span class="keyword">INTO</span> s2 <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">        IF (s2 <span class="operator">=</span> <span class="string">&#x27;已审核&#x27;</span>) <span class="keyword">THEN</span></span><br><span class="line">            <span class="comment">-- 3. 查询课程是不是人数未满的</span></span><br><span class="line">            <span class="keyword">SELECT</span> available <span class="keyword">INTO</span> s3 <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">            </span><br><span class="line">            IF(s3 <span class="operator">&gt;</span><span class="number">0</span> ) <span class="keyword">THEN</span></span><br><span class="line">                <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">                <span class="comment">-- 插入</span></span><br><span class="line">                <span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,stu_no,c_no,<span class="keyword">NULL</span>,NOW()); <span class="comment">-- 这里出的错</span></span><br><span class="line">                <span class="comment">-- 如果没有自定义错误处理 下面代码不运行了</span></span><br><span class="line">                <span class="keyword">SET</span> <span class="variable">@state2</span> <span class="operator">=</span> <span class="string">&#x27;这里有没有运行?&#x27;</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">ELSE</span></span><br><span class="line">                <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-2</span>;</span><br><span class="line">            <span class="keyword">END</span> IF; </span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">            <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-3</span>;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span> IF; </span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用以下语句测试</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state2</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@errorInfo</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2014010&#x27;</span>,<span class="number">1</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>,<span class="variable">@state2</span>,<span class="variable">@errorInfo</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在存储过程中，如果sql语句运行出错，比如:外键约束这种错误报错</span></span><br><span class="line"><span class="comment">-- 后面的语句就不会运行了</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 存储过程</title>
      <link href="/2017/04/28/mysql-3/"/>
      <url>/2017/04/28/mysql-3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 存储过程</span></span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 存储过程的名字(<span class="keyword">IN</span> 参数<span class="number">1</span> 参数<span class="number">1</span>类型，<span class="keyword">OUT</span> 参数<span class="number">2</span> 参数<span class="number">2</span>类型,<span class="keyword">INOUT</span> 参数<span class="number">3</span> 类型) </span><br><span class="line">过程选项</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    过程内容</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 计算某个学生选了多少课程</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_choose_number_proc(<span class="keyword">IN</span> tmp_student_no <span class="type">VARCHAR</span>(<span class="number">10</span>),<span class="keyword">OUT</span> tmp_choose_count <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> tmp_choose_count <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> tmp_student_no;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@student</span>_no <span class="operator">=</span> <span class="string">&#x27;2012002&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@choose</span>_count <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> get_choose_number_proc(<span class="variable">@student</span>_no,<span class="variable">@choose</span>_count);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@choose</span>_count;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_choose_number2_proc(<span class="keyword">INOUT</span> number <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> number <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> number;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@number</span> <span class="operator">=</span> <span class="string">&#x27;2012002&#x27;</span>;</span><br><span class="line"><span class="keyword">CALL</span> get_choose_number2_proc(<span class="variable">@number</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@number</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">PROCEDURE</span> STATUS;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_choose_number2_proc;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 函数和存储过程 </span></span><br><span class="line"><span class="comment">-- 相同点</span></span><br><span class="line"><span class="comment">-- 1. 创建好了之后，都是存储在数据库上的对象，只需提供名称就可以调用</span></span><br><span class="line"><span class="comment">--    SELECT get_teacher_name_fn();</span></span><br><span class="line"><span class="comment">--    CALL get_teacher_name_proc();</span></span><br><span class="line"><span class="comment">-- 2. 重复调用</span></span><br><span class="line"><span class="comment">-- 3. 增强安全性 可以根据用户权限访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 不同点</span></span><br><span class="line"><span class="comment">-- 1. 函数只有一个返回值，至少一个</span></span><br><span class="line"><span class="comment">--      存储过程可以多个</span></span><br><span class="line"><span class="comment">-- 2. 函数体内可以使用select .. into 为某变量赋值，不能返回结果集</span></span><br><span class="line"><span class="comment">--    存储过程可以返回结果集</span></span><br><span class="line"><span class="comment">-- 3. 函数一般嵌入在sql语句中 ，存储过程一般单独调用call</span></span><br><span class="line"><span class="comment">-- 4. 函数体内 事务语句有限制，存储过程没有。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 作业:编写存储过程 </span></span><br><span class="line"><span class="comment">-- 1. 查询学生的成绩</span></span><br><span class="line"><span class="comment">-- 传入学生学号、课程编号 返回成绩</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> request_student_record(<span class="keyword">IN</span> stu_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">IN</span> c_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">OUT</span> re <span class="type">INT</span>) </span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> score <span class="keyword">INTO</span> re <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> stu_no <span class="keyword">AND</span>  course_no <span class="operator">=</span> c_no; </span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@record</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> request_student_record(<span class="string">&#x27;2012001&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="variable">@record</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@record</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询 根据教师编号，返回所教授课程</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> request_record_name_proc;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> request_record_name_proc(<span class="keyword">IN</span> t_no <span class="type">VARCHAR</span>(<span class="number">30</span>),<span class="keyword">OUT</span> tmp_name <span class="type">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> course_name <span class="keyword">INTO</span> tmp_name <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> t_no <span class="operator">=</span> teacher_no;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@c</span>_name <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">CALL</span> request_record_name_proc(<span class="string">&#x27;001&#x27;</span>,<span class="variable">@c</span>_name);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@c</span>_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 选课的存储过程</span></span><br><span class="line"><span class="comment">-- 传入 学号、课程号 传出 状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 状态</span></span><br><span class="line"><span class="comment">-- 0 插入成功</span></span><br><span class="line"><span class="comment">-- -1 选课失败,已选择</span></span><br><span class="line"><span class="comment">-- -2 选课失败,课程已达到人数上限</span></span><br><span class="line"><span class="comment">-- -3 选课失败,课程未审核</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入时要判断的条件:</span></span><br><span class="line"><span class="comment">-- 未选择过该课程，否则返回 -1</span></span><br><span class="line"><span class="comment">-- 课程是审核过的,否则返回 -3</span></span><br><span class="line"><span class="comment">-- 课程人数未满, 否则返回 -2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用以下语句测试</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2014010&#x27;</span>,<span class="number">1</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>,<span class="variable">@state2</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在存储过程中，如果sql语句运行出错，比如:外键约束这种错误报错</span></span><br><span class="line"><span class="comment">-- 后面的语句就不会运行了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> course <span class="keyword">SET</span> available <span class="operator">=</span> <span class="number">0</span> <span class="keyword">WHERE</span> course_no <span class="operator">=</span> <span class="number">2</span>; <span class="comment">-- 先把2课程可用人数设置为0</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">2</span>,<span class="variable">@state</span>);  <span class="comment">-- -2 人数已满</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>,<span class="variable">@state2</span>; </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">3</span>,<span class="variable">@state</span>);  <span class="comment">-- -1 已选择过</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">4</span>,<span class="variable">@state</span>);  <span class="comment">-- -3 未审核</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> <span class="string">&#x27;2013003&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> choose_proc;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> choose_proc(<span class="keyword">IN</span> stu_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">IN</span> c_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">OUT</span> state <span class="type">INT</span>) </span><br><span class="line"><span class="keyword">MODIFIES</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">DECLARE</span> s1 <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> s2 <span class="type">VARCHAR</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> s3 <span class="type">INT</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- 1. 查询有没有选择过</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> s1 <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> stu_no <span class="keyword">AND</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">    IF(s1 <span class="operator">&gt;=</span> <span class="number">1</span>) <span class="keyword">THEN</span> </span><br><span class="line">        <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">ELSE</span> </span><br><span class="line">        <span class="comment">-- 2. 查询课程是不是已审核的</span></span><br><span class="line">        <span class="keyword">SELECT</span> STATUS <span class="keyword">INTO</span> s2 <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">        IF (s2 <span class="operator">=</span> <span class="string">&#x27;已审核&#x27;</span>) <span class="keyword">THEN</span></span><br><span class="line">            <span class="comment">-- 3. 查询课程是不是人数未满的</span></span><br><span class="line">            <span class="keyword">SELECT</span> available <span class="keyword">INTO</span> s3 <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">            </span><br><span class="line">            IF(s3 <span class="operator">&gt;</span><span class="number">0</span> ) <span class="keyword">THEN</span></span><br><span class="line">                <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">SET</span> <span class="variable">@state2</span> <span class="operator">=</span> <span class="string">&#x27;这里有没有运行?&#x27;</span>;</span><br><span class="line">                <span class="comment">-- 插入</span></span><br><span class="line">                <span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,stu_no,c_no,<span class="keyword">NULL</span>,NOW());</span><br><span class="line">                <span class="comment">-- </span></span><br><span class="line">    </span><br><span class="line">                </span><br><span class="line">            <span class="keyword">ELSE</span></span><br><span class="line">                <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-2</span>;</span><br><span class="line">            <span class="keyword">END</span> IF; </span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">            <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-3</span>;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span> IF; </span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> choose;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 错误处理</title>
      <link href="/2017/04/28/mysql-2/"/>
      <url>/2017/04/28/mysql-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 状态</span></span><br><span class="line"><span class="comment">-- 0 插入成功</span></span><br><span class="line"><span class="comment">-- -1 选课失败,已选择</span></span><br><span class="line"><span class="comment">-- -2 选课失败,课程已达到人数上限</span></span><br><span class="line"><span class="comment">-- -3 选课失败,课程未审核</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入时要判断的条件:</span></span><br><span class="line"><span class="comment">-- 未选择过该课程，否则返回 -1</span></span><br><span class="line"><span class="comment">-- 课程是审核过的,否则返回 -3</span></span><br><span class="line"><span class="comment">-- 课程人数未满, 否则返回 -2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> course <span class="keyword">SET</span> available <span class="operator">=</span> <span class="number">0</span> <span class="keyword">WHERE</span> course_no <span class="operator">=</span> <span class="number">2</span>; <span class="comment">-- 先把2课程可用人数设置为0</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">2</span>,<span class="variable">@state</span>);  <span class="comment">-- -2 人数已满</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>,<span class="variable">@state2</span>; </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">3</span>,<span class="variable">@state</span>);  <span class="comment">-- -1 已选择过</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2013003&#x27;</span>,<span class="number">4</span>,<span class="variable">@state</span>);  <span class="comment">-- -3 未审核</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> <span class="string">&#x27;2013003&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自定义错误处理</span></span><br><span class="line"><span class="comment">-- 错误码: 1452</span></span><br><span class="line"><span class="comment">-- 格式:</span></span><br><span class="line"><span class="comment">-- DECLARE 错误处理类型 HANDLER FOR 错误触发条件</span></span><br><span class="line"><span class="comment">-- 自定义错误处理程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 错误处理类型: 1 CONTINUE 2 EXIT</span></span><br><span class="line"><span class="comment">-- 错误触发条件：错误码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> choose_proc;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> choose_proc(<span class="keyword">IN</span> stu_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">IN</span> c_no <span class="type">VARCHAR</span>(<span class="number">20</span>),<span class="keyword">OUT</span> state <span class="type">INT</span>) </span><br><span class="line"><span class="keyword">MODIFIES</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">DECLARE</span> s1 <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> s2 <span class="type">VARCHAR</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> s3 <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="number">1452</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> <span class="variable">@errorInfo</span> <span class="operator">=</span> <span class="string">&#x27;外键约束错误&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- 1. 查询有没有选择过</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> s1 <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> stu_no <span class="keyword">AND</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">    IF(s1 <span class="operator">&gt;=</span> <span class="number">1</span>) <span class="keyword">THEN</span> </span><br><span class="line">        <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">ELSE</span> </span><br><span class="line">        <span class="comment">-- 2. 查询课程是不是已审核的</span></span><br><span class="line">        <span class="keyword">SELECT</span> STATUS <span class="keyword">INTO</span> s2 <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">        IF (s2 <span class="operator">=</span> <span class="string">&#x27;已审核&#x27;</span>) <span class="keyword">THEN</span></span><br><span class="line">            <span class="comment">-- 3. 查询课程是不是人数未满的</span></span><br><span class="line">            <span class="keyword">SELECT</span> available <span class="keyword">INTO</span> s3 <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="operator">=</span> c_no;</span><br><span class="line">            </span><br><span class="line">            IF(s3 <span class="operator">&gt;</span><span class="number">0</span> ) <span class="keyword">THEN</span></span><br><span class="line">                <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">                <span class="comment">-- 插入</span></span><br><span class="line">                <span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,stu_no,c_no,<span class="keyword">NULL</span>,NOW()); <span class="comment">-- 这里出的错</span></span><br><span class="line">                <span class="comment">-- 如果没有自定义错误处理 下面代码不运行了</span></span><br><span class="line">                <span class="keyword">SET</span> <span class="variable">@state2</span> <span class="operator">=</span> <span class="string">&#x27;这里有没有运行?&#x27;</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">ELSE</span></span><br><span class="line">                <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-2</span>;</span><br><span class="line">            <span class="keyword">END</span> IF; </span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">            <span class="keyword">SET</span> state <span class="operator">=</span> <span class="number">-3</span>;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span> IF; </span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用以下语句测试</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state2</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@errorInfo</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2014010&#x27;</span>,<span class="number">1</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>,<span class="variable">@state2</span>,<span class="variable">@errorInfo</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在存储过程中，如果sql语句运行出错，比如:外键约束这种错误报错</span></span><br><span class="line"><span class="comment">-- 后面的语句就不会运行了</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 游标</title>
      <link href="/2017/04/28/mysql-1/"/>
      <url>/2017/04/28/mysql-1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 游标练习[例子]</span></span><br><span class="line"><span class="comment">-- 所有学生+5分</span></span><br><span class="line"><span class="comment">-- 修改后的在55~59分的一律改为60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> update_record_proc;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> update_record_proc(<span class="keyword">IN</span> c_no <span class="type">INT</span>) </span><br><span class="line"><span class="keyword">MODIFIES</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> tmp_stu_no <span class="type">VARCHAR</span>(<span class="number">30</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> tmp_score <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> state <span class="type">VARCHAR</span>(<span class="number">30</span>);</span><br><span class="line">    <span class="comment">-- 1. 声明游标</span></span><br><span class="line">    <span class="keyword">DECLARE</span> score_cursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> score,student_no <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> c_no <span class="operator">=</span> course_no;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="number">1329</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span>; </span><br><span class="line">    <span class="comment">-- 2. 打开游标</span></span><br><span class="line">    <span class="keyword">OPEN</span> score_cursor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 3. 从游标中提取数据</span></span><br><span class="line">    </span><br><span class="line">    REPEAT</span><br><span class="line">        <span class="keyword">FETCH</span> score_cursor <span class="keyword">INTO</span> tmp_score,tmp_stu_no;</span><br><span class="line">        <span class="keyword">SET</span> tmp_score <span class="operator">=</span> tmp_score <span class="operator">+</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">        IF(tmp_score <span class="operator">&gt;=</span> <span class="number">55</span> <span class="keyword">AND</span> tmp_score <span class="operator">&lt;=</span> <span class="number">59</span>) <span class="keyword">THEN</span></span><br><span class="line">            <span class="keyword">SET</span> tmp_score <span class="operator">=</span> <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">        </span><br><span class="line">        IF(tmp_score <span class="operator">&gt;=</span> <span class="number">100</span>) <span class="keyword">THEN</span></span><br><span class="line">            <span class="keyword">SET</span> tmp_score <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">UPDATE</span> choose <span class="keyword">SET</span> score <span class="operator">=</span> tmp_score <span class="keyword">WHERE</span> course_no <span class="operator">=</span> c_no <span class="keyword">AND</span> student_no <span class="operator">=</span> tmp_stu_no;</span><br><span class="line">        </span><br><span class="line">        UNTIL state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line">    <span class="keyword">END</span> REPEAT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 4. 关闭游标</span></span><br><span class="line">    <span class="keyword">CLOSE</span> score_cursor;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> update_record_proc(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> course_no <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> temp_id <span class="type">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> temp_accounter_id <span class="type">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> temp_accounter_no <span class="type">VARCHAR</span>(<span class="number">64</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> state <span class="type">VARCHAR</span>(<span class="number">30</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> account_book_cursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> id,accounter_id <span class="keyword">FROM</span> account_book;</span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="number">1329</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span>; </span><br><span class="line">  <span class="keyword">OPEN</span> account_book_cursor;</span><br><span class="line">  REPEAT</span><br><span class="line">        <span class="keyword">FETCH</span> account_book_cursor <span class="keyword">INTO</span> temp_id,temp_accounter_id;</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="keyword">no</span> <span class="keyword">INTO</span> temp_accounter_no <span class="keyword">FROM</span> account <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_accounter_id;</span><br><span class="line">        <span class="keyword">UPDATE</span> account_book <span class="keyword">SET</span> accounter_no <span class="operator">=</span> temp_accounter_no <span class="keyword">WHERE</span> id <span class="operator">=</span> temp_id;</span><br><span class="line">        UNTIL state <span class="operator">=</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line">    <span class="keyword">END</span> REPEAT;</span><br><span class="line">    <span class="keyword">CLOSE</span> account_book_cursor;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 触发器</title>
      <link href="/2017/04/06/mysql-4/"/>
      <url>/2017/04/06/mysql-4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 事件触发的操作</span></span><br><span class="line"><span class="comment">-- insert update delete 语句创建触发操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="comment">-- create trigger 触发器名称 before|after 触发事件(insert update delete)</span></span><br><span class="line"><span class="comment">-- on 表名字 for each row </span></span><br><span class="line"><span class="comment">-- 执行的语句</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 新建表用来记录添加数据事件的时间</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> trigger_time</span><br><span class="line">(insert_time <span class="type">TIME</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> insert_student_trigger BEFORE <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">ON</span> student <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> trigger_time <span class="keyword">VALUES</span>(NOW());</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">2014001</span>,<span class="string">&#x27;敲不死&#x27;</span>,<span class="string">&#x27;12300000&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> trigger_time;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 关于触发器</span></span><br><span class="line"><span class="comment">-- 1. 基于基表</span></span><br><span class="line"><span class="comment">-- 2. before after</span></span><br><span class="line"><span class="comment">-- 3. for each row 行级触发器</span></span><br><span class="line"><span class="comment">-- 4. 触发器类select不能产生结果集</span></span><br><span class="line"><span class="comment">-- 5. 关键字old new</span></span><br><span class="line"><span class="comment">--    old代表就数据 New新数据</span></span><br><span class="line"><span class="comment">--    old.字段  new.字段</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 作用:</span></span><br><span class="line"><span class="comment">-- 1. 插入检查</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 需求: 对course插入的up_limit进行限制 60(小教室) 150(大教室) 230(阶梯教室);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> course_insert_before_trigger;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> course_insert_before_trigger BEFORE <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">ON</span> course <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    IF(new.up_limit <span class="operator">=</span> <span class="number">60</span> <span class="operator">||</span> new.up_limit <span class="operator">=</span> <span class="number">150</span> <span class="operator">||</span> new.up_limit <span class="operator">=</span> <span class="number">230</span>) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">SET</span> new.up_limit <span class="operator">=</span> new.up_limit;</span><br><span class="line">    <span class="keyword">ELSE</span></span><br><span class="line">        <span class="comment">-- 执行一条错误语句,报错，原先语句也就停止执行了</span></span><br><span class="line">         <span class="keyword">INSERT</span> <span class="keyword">INTO</span> xxx <span class="keyword">VALUES</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 先插入一条老师</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;006&#x27;</span>,<span class="string">&#x27;田老师&#x27;</span>,<span class="string">&#x27;000000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">7</span>,<span class="string">&#x27;低等数学&#x27;</span>,<span class="number">60</span>,<span class="string">&#x27;暂无&#x27;</span>,<span class="string">&#x27;已审核&#x27;</span>,<span class="string">&#x27;006&#x27;</span>);</span><br><span class="line">choose</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 维护冗余数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加剩余可选报人数字段</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> course <span class="keyword">ADD</span> available <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 利用之前定义的视图更新available字段</span></span><br><span class="line"><span class="keyword">UPDATE</span> course </span><br><span class="line"><span class="keyword">SET</span> available <span class="operator">=</span> up_limit <span class="operator">-</span> </span><br><span class="line">(<span class="keyword">SELECT</span> student_num <span class="keyword">FROM</span> available_course_view <span class="keyword">WHERE</span> available_course_view.course_no <span class="operator">=</span> course.course_no);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 选报科目 插入数据到choose   更新course里面的available -1</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> choose_insert_before_trigger;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> choose_insert_before_trigger BEFORE <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">ON</span> choose <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">UPDATE</span> course <span class="keyword">SET</span> available <span class="operator">=</span> available <span class="operator">-</span> <span class="number">1</span> <span class="keyword">WHERE</span> course_no <span class="operator">=</span> new.course_no;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 147</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="number">2013020</span>,<span class="number">2</span>,<span class="keyword">NULL</span>,NOW());</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 作业</span></span><br><span class="line"><span class="comment">-- 取消选报 从choose删除数据   更新course里面的available +1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3 替代级联删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(</span><br><span class="line">    d_no <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    d_name <span class="type">VARCHAR</span>(<span class="number">30</span>)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee</span><br><span class="line">(    </span><br><span class="line">    e_no <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    e_name <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    d_no <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> dept_member_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(d_no) <span class="keyword">REFERENCES</span> dept(d_no)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">1002</span>,<span class="string">&#x27;生产部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">1003</span>,<span class="string">&#x27;开发部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">100001</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">100002</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">100003</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">100004</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="number">1003</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> d_no <span class="operator">=</span> <span class="number">1001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dept;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> dept_delete_before_trigger BEFORE <span class="keyword">DELETE</span> </span><br><span class="line"><span class="keyword">ON</span> dept <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DELETE</span> <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> d_no <span class="operator">=</span> old.d_no;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 临时表</title>
      <link href="/2017/04/06/mysql-3/"/>
      <url>/2017/04/06/mysql-3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询5大洲国家总数</span></span><br><span class="line"><span class="keyword">SELECT</span> continent,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> country <span class="keyword">GROUP</span> <span class="keyword">BY</span> continent;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 演示临时表 </span></span><br><span class="line"><span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> tmp_table</span><br><span class="line">( </span><br><span class="line">    continent <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    COUNT <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tmp_table <span class="keyword">SELECT</span> <span class="string">&#x27;Asia&#x27;</span> <span class="keyword">AS</span> <span class="string">&#x27;continent&#x27;</span>,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;Asia&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tmp_table <span class="keyword">SELECT</span> <span class="string">&#x27;North America&#x27;</span> <span class="keyword">AS</span> <span class="string">&#x27;continent&#x27;</span>,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;North America&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tmp_table <span class="keyword">SELECT</span> <span class="string">&#x27;Europe&#x27;</span> <span class="keyword">AS</span> <span class="string">&#x27;continent&#x27;</span>,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tmp_table <span class="keyword">SELECT</span> <span class="string">&#x27;South America&#x27;</span> <span class="keyword">AS</span> <span class="string">&#x27;continent&#x27;</span>,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;South America&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tmp_table <span class="keyword">SELECT</span> <span class="string">&#x27;Oceania&#x27;</span> <span class="keyword">AS</span> <span class="string">&#x27;continent&#x27;</span>,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;Oceania&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tmp_table <span class="keyword">SELECT</span> <span class="string">&#x27;Antarctia&#x27;</span> <span class="keyword">AS</span> <span class="string">&#x27;continent&#x27;</span>,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;Antarctia&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给学生表添加一列 密码</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> PASSWORD <span class="type">CHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AFTER student_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> TEMPORARY <span class="keyword">TABLE</span> passwd_temp;</span><br><span class="line"><span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> passwd_temp <span class="keyword">SELECT</span> student_no s_no,MD5(student_no) pwd <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> passwd_temp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> PASSWORD <span class="operator">=</span> (<span class="keyword">SELECT</span> pwd <span class="keyword">FROM</span> passwd_temp <span class="keyword">WHERE</span> student_no <span class="operator">=</span> s_no);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 作业:</span></span><br><span class="line"><span class="comment">-- 不用临时表 尝试实现同样功能</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 视图</title>
      <link href="/2017/04/06/mysql-2/"/>
      <url>/2017/04/06/mysql-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">USE world;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询国家名-首都名列表</span></span><br><span class="line"><span class="keyword">SELECT</span> country.name <span class="keyword">AS</span> <span class="string">&#x27;国家名字&#x27;</span>,city.Name <span class="keyword">AS</span> <span class="string">&#x27;首都名字&#x27;</span> <span class="keyword">FROM</span> country,city <span class="keyword">WHERE</span> country.capital <span class="operator">=</span> city.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建视图 语法:</span></span><br><span class="line"><span class="comment">-- create view 视图的名字</span></span><br><span class="line"><span class="comment">-- as </span></span><br><span class="line"><span class="comment">-- Select语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> country_captial_view</span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> country.name <span class="keyword">AS</span> <span class="string">&#x27;countryName&#x27;</span>,city.Name <span class="keyword">AS</span> <span class="string">&#x27;cityname&#x27;</span> <span class="keyword">FROM</span> country,city <span class="keyword">WHERE</span> country.capital <span class="operator">=</span> city.id;</span><br><span class="line"><span class="comment">-- with check opntion; 检查属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> country_captial_view;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ALGORITHM = MERGE       视图语句的文本视图定义合并起来</span></span><br><span class="line"><span class="comment">-- ALGORITHM = TEMPTABLE   把结果放在临时表中</span></span><br><span class="line"><span class="comment">-- ALGORITHM = UNDEFINED   MySQL自己选择</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 通过视图查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> country_captial_view;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> country_captial_view <span class="keyword">WHERE</span> countryName <span class="operator">=</span> <span class="string">&#x27;China&#x27;</span>;</span><br><span class="line"><span class="comment">-- 通过视图修改了表中的数据</span></span><br><span class="line"><span class="keyword">UPDATE</span> country_captial_view <span class="keyword">SET</span> cityname <span class="operator">=</span> <span class="string">&#x27;wuxi&#x27;</span> <span class="keyword">WHERE</span> countryName <span class="operator">=</span> <span class="string">&#x27;China&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实际上是修改的下层数据表的数据.</span></span><br><span class="line"><span class="comment">-- 验证一下底层表数据有没有修改</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> country.name <span class="operator">=</span> <span class="string">&#x27;China&#x27;</span>; <span class="comment">-- 1891</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> city <span class="keyword">WHERE</span> city.id <span class="operator">=</span> <span class="number">1891</span>; <span class="comment">-- name 被改为了wuxi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- [例子]</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1(id <span class="type">INT</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">VALUES</span>(<span class="number">1</span>),(<span class="number">2</span>),(<span class="number">3</span>),(<span class="number">4</span>),(<span class="number">5</span>),(<span class="number">6</span>),(<span class="number">7</span>),(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 没有检查选项</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v1 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> id<span class="operator">&lt;</span><span class="number">4</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> v1 <span class="keyword">VALUES</span>(<span class="number">9</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1; <span class="comment">-- 可以插入</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. WITH LOCAL CHECK OPTION 当前约束条件生效</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v2 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t1 <span class="keyword">WHERE</span> id<span class="operator">&lt;</span><span class="number">4</span> <span class="keyword">WITH</span> <span class="keyword">LOCAL</span> <span class="keyword">CHECK</span> OPTION;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> v2 <span class="keyword">VALUES</span>(<span class="number">10</span>); <span class="comment">-- 插不进去了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v3 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v2 <span class="keyword">WITH</span> <span class="keyword">LOCAL</span> <span class="keyword">CHECK</span> OPTION; <span class="comment">-- WITH LOCAL CHECK OPTION 当前约束条件生效</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> v3 <span class="keyword">VALUES</span>(<span class="number">11</span>); <span class="comment">-- 可以插进去</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. WITH CASCADED CHECK OPTION 继承上一视图约束条件</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v4 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v1 <span class="keyword">WITH</span> <span class="keyword">CASCADED</span> <span class="keyword">CHECK</span> OPTION; <span class="comment">-- WITH CASCADED CHECK OPTION 继承上一视图约束条件</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> v4 <span class="keyword">VALUES</span>(<span class="number">11</span>); <span class="comment">-- 插入失败  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. WITH CHECK OPTION 在任何时刻都要进行匹配</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v5 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v1 <span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> v5 <span class="keyword">VALUES</span>(<span class="number">11</span>); <span class="comment">-- 插入失败  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v6 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v1 <span class="keyword">WITH</span> id <span class="operator">&lt;</span><span class="number">4</span> <span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> v6 <span class="keyword">VALUES</span>(<span class="number">11</span>); <span class="comment">-- 插入失败  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 练习</span></span><br><span class="line"><span class="comment">-- 选课系统choose数据库</span></span><br><span class="line"><span class="comment">-- </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 索引</title>
      <link href="/2017/04/06/mysql-1/"/>
      <url>/2017/04/06/mysql-1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询薪水记录总数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> salaries;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询员工薪水记录按emp_no排序，从低到高,前10个,查看查询时间 0.00 sec</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries <span class="keyword">ORDER</span> <span class="keyword">BY</span> emp_no <span class="keyword">DESC</span> LIMIT <span class="number">10</span>; <span class="comment">-- 查询前10个</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries <span class="keyword">ORDER</span> <span class="keyword">BY</span> emp_no LIMIT <span class="number">0</span>,<span class="number">10</span>; <span class="comment">-- 从第一条数据开始,10个</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 查询员工薪水记录按薪水排序,高到底,前10个,查看查询时间 01:965 sec  -&gt; 0.063</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> LIMIT <span class="number">10</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> LIMIT <span class="number">10</span>,<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 目的是为了加速薪水相关查询，为salaries 的salary加上索引</span></span><br><span class="line"><span class="comment">-- 方式1</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> salaries <span class="keyword">ADD</span> INDEX index_sa(salary); <span class="comment">-- 用了大约18s时间建立索引，索引表也会占用磁盘空间</span></span><br><span class="line"><span class="comment">-- 修改    表格 salaries表 添加 索引  索引名字(salary字段)</span></span><br><span class="line"><span class="comment">-- 方式2</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX index_sa <span class="keyword">ON</span> salaries(salary);</span><br><span class="line"><span class="comment">-- 创建 索引 索引的名字 在 salaries表上的salary字段上</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- (0 row(s) affected) </span></span><br><span class="line"><span class="comment">-- Execution Time : 00:00:17:956</span></span><br><span class="line"><span class="comment">-- Transfer Time  : 00:00:01:092</span></span><br><span class="line"><span class="comment">-- Total Time     : 00:00:19:048</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除索引</span></span><br><span class="line"><span class="comment">-- 方式1:</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> salaries <span class="keyword">DROP</span> INDEX index_sa;</span><br><span class="line"><span class="comment">-- 方式2:</span></span><br><span class="line"><span class="keyword">DROP</span> INDEX index_sa <span class="keyword">ON</span> salaries;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 索引的优点:</span></span><br><span class="line"><span class="comment">-- 1.加快查询速度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 缺点:</span></span><br><span class="line"><span class="comment">-- 1. 维护索引需要耗费数据库资源(时间和空间)</span></span><br><span class="line"><span class="comment">-- 2. 对数据进行增删改的时候，因为要维护索引，速度也会影响。(修改salary字段，索引表也会跟着改)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 分析查询语句</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries <span class="keyword">ORDER</span> <span class="keyword">BY</span> emp_no <span class="keyword">DESC</span> LIMIT <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salaries <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span> LIMIT <span class="number">10</span>; \G</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看表格</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salries;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表时就添加索引</span></span><br><span class="line"><span class="comment">-- 1. 普通索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index1 (</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    sex <span class="type">BOOLEAN</span>,</span><br><span class="line">    INDEX(id)</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对比:</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index1_(</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    sex <span class="type">BOOLEAN</span></span><br><span class="line">    );</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index1_;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 唯一索引 等同unique</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> index2;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index2(</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    sex <span class="type">BOOLEAN</span>,</span><br><span class="line">    <span class="keyword">UNIQUE</span> INDEX index2_id(id <span class="keyword">ASC</span>)</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对比</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index2_(</span><br><span class="line">    id <span class="type">INT</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    sex <span class="type">BOOLEAN</span></span><br><span class="line">    );</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index2_;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 全文索引 需要MyISAM</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index3(</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    info <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    FULLTEXT INDEX index3_info(info)</span><br><span class="line">) ENGINE <span class="operator">=</span> MYISAM;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 单列索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index4(</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    fullname <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    INDEX index4_fn(fullname(<span class="number">10</span>))</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 双列索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index5(</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    fullname <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">4</span>),</span><br><span class="line">    INDEX index5_fs(fullname,sex)</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index5;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. 空间索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index6(</span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    SPACE GEOMETRY <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    SPATIAL INDEX index6_sp(SPACE)</span><br><span class="line">    ) ENGINE <span class="operator">=</span> MYISAM;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> index6;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 练习:</span></span><br><span class="line"><span class="comment">-- 给employees的名字加索引,比较查询速度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> first_name <span class="operator">=</span> <span class="string">&#x27;Georgi&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 查询练习2</title>
      <link href="/2017/04/05/mysql-2/"/>
      <url>/2017/04/05/mysql-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.1 给定一个学生 2012001，查询该生选修了几门课。</span></span><br><span class="line"><span class="comment">--   返回 学号  选修了几门课</span></span><br><span class="line"><span class="keyword">SELECT</span> student_no <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> <span class="string">&#x27;选修课程数量&#x27;</span> <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> <span class="number">2012001</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.2 显示所有学生名字，选修了几门课。(姓名，几门)</span></span><br><span class="line"><span class="comment">-- student_name          course_num</span></span><br><span class="line"><span class="comment">--  张三        2</span></span><br><span class="line"><span class="comment">--  李四        2</span></span><br><span class="line"><span class="comment">--  ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 内连接写法1</span></span><br><span class="line"><span class="keyword">SELECT</span> student.student_name,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> choose,student <span class="keyword">WHERE</span> choose.student_no <span class="operator">=</span> student.student_no <span class="keyword">GROUP</span> <span class="keyword">BY</span> student.student_no;</span><br><span class="line"><span class="comment">-- 内连接写法2</span></span><br><span class="line"><span class="keyword">SELECT</span> student.student_name,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> choose <span class="keyword">INNER</span> <span class="keyword">JOIN</span> student <span class="keyword">ON</span> choose.student_no <span class="operator">=</span> student.student_no <span class="keyword">GROUP</span> <span class="keyword">BY</span> choose.student_no;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.3. 统计每个学生选修多少课程,最高分、最低分、总分、平均成绩</span></span><br><span class="line"><span class="comment">-- student_name          course_num    max(score)    min(score) sum(score) avg(score)</span></span><br><span class="line"><span class="comment">--  张三        2    </span></span><br><span class="line"><span class="comment">--  李四        2</span></span><br><span class="line"><span class="comment">-- ...</span></span><br><span class="line"><span class="keyword">SELECT</span> student.student_name,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> course_num,<span class="built_in">MAX</span>(score),<span class="built_in">MIN</span>(score),<span class="built_in">SUM</span>(score),<span class="built_in">AVG</span>(score) </span><br><span class="line"><span class="keyword">FROM</span> choose,student </span><br><span class="line"><span class="keyword">WHERE</span> choose.student_no <span class="operator">=</span> student.student_no </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> student.student_no;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 语法</span></span><br><span class="line"><span class="comment">-- select 字段</span></span><br><span class="line"><span class="comment">-- from 数据源</span></span><br><span class="line"><span class="comment">-- where 条件表达式</span></span><br><span class="line"><span class="comment">-- group by 分组字段 having 条件表达式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.4 检索平均成绩高于70分的学生信息及平均成绩  分组的或者聚合函数的条件用having 关键字 不是where</span></span><br><span class="line"><span class="comment">-- student_name  avg(score)</span></span><br><span class="line"><span class="comment">-- 王五        80.0</span></span><br><span class="line"><span class="comment">-- 马六        90.0</span></span><br><span class="line"><span class="keyword">SELECT</span> student.student_name,<span class="built_in">AVG</span>(score) </span><br><span class="line"><span class="keyword">FROM</span> student,choose </span><br><span class="line"><span class="keyword">WHERE</span> choose.student_no <span class="operator">=</span> student.student_no </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> student.student_no </span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">AVG</span>(score) <span class="operator">&lt;</span> <span class="number">70</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.5 检索显示学生的所有选修课程的成绩，条件是成绩要比张三的平均成绩高的才显示. (使用子查询)</span></span><br><span class="line"><span class="comment">-- 结果字段:</span></span><br><span class="line"><span class="comment">-- class_name student_no student_name courese_name score</span></span><br><span class="line"><span class="keyword">SELECT</span> class_name,student.student_no,student.student_name,course_name,score </span><br><span class="line"><span class="keyword">FROM</span> course,choose,student,classes </span><br><span class="line"><span class="keyword">WHERE</span> choose.student_no <span class="operator">=</span> student.student_no </span><br><span class="line"><span class="keyword">AND</span> choose.course_no <span class="operator">=</span> course.course_no </span><br><span class="line"><span class="keyword">AND</span> student.class_no <span class="operator">=</span> classes.class_no </span><br><span class="line"><span class="keyword">AND</span> score <span class="operator">&gt;</span> </span><br><span class="line">(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(score) <span class="keyword">FROM</span> choose,student <span class="keyword">WHERE</span> choose.student_no <span class="operator">=</span> student.student_no <span class="keyword">AND</span> student_name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 给定一个学生如2012001显示该生选修了哪几门课，老师是谁，电话多少</span></span><br><span class="line"><span class="comment">-- 结果示例： </span></span><br><span class="line"><span class="comment">-- 课程编号 课程名字 老师名字 老师电话 课程描述</span></span><br><span class="line"><span class="comment">-- 2    MySQL数据库   李老师    12000000  暂无</span></span><br><span class="line"><span class="comment">-- 1    Java语言程序设计 张老师 10000000  暂无</span></span><br><span class="line"><span class="keyword">SELECT</span> choose.course_no <span class="keyword">AS</span> <span class="string">&#x27;课程编号&#x27;</span>,course.course_name <span class="keyword">AS</span> <span class="string">&#x27;课程名字&#x27;</span>,teacher_name <span class="keyword">AS</span> <span class="string">&#x27;老师名字&#x27;</span>,</span><br><span class="line">teacher_contact <span class="keyword">AS</span> <span class="string">&#x27;老师电话&#x27;</span>,description <span class="keyword">AS</span> <span class="string">&#x27;课程描述&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> teacher,choose,course </span><br><span class="line"><span class="keyword">WHERE</span> teacher.teacher_no <span class="operator">=</span> course.teacher_no </span><br><span class="line"><span class="keyword">AND</span> course.course_no <span class="operator">=</span> choose.course_no </span><br><span class="line"><span class="keyword">AND</span> choose.student_no <span class="operator">=</span> <span class="number">2012001</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 给定一门课程如course_no = 1,统计哪些学生选修了这门课，结果排序先按院系再按班级再按学号</span></span><br><span class="line"><span class="comment">-- 结果字段:</span></span><br><span class="line"><span class="comment">-- 院系            班级        学号        姓名        电话</span></span><br><span class="line"><span class="comment">-- deaprtment_name    class_name    student_no    student_name    student_contact</span></span><br><span class="line"><span class="keyword">SELECT</span> classes.department_name <span class="keyword">AS</span> <span class="string">&#x27;院系&#x27;</span>,class_name <span class="keyword">AS</span> <span class="string">&#x27;班级&#x27;</span>,student.student_no <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">student_name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,student_contact <span class="keyword">AS</span> <span class="string">&#x27;电话&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> choose,classes,student </span><br><span class="line"><span class="keyword">WHERE</span> choose.course_no <span class="operator">=</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">AND</span> student.student_no <span class="operator">=</span> choose.student_no </span><br><span class="line"><span class="keyword">AND</span> student.class_no <span class="operator">=</span> classes.class_no </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> classes.department_name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> classes.department_name <span class="keyword">AS</span> <span class="string">&#x27;院系&#x27;</span>,class_name <span class="keyword">AS</span> <span class="string">&#x27;班级&#x27;</span>,student.student_no <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">student_name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,student_contact <span class="keyword">AS</span> <span class="string">&#x27;电话&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> choose,classes,student </span><br><span class="line"><span class="keyword">WHERE</span> choose.course_no <span class="operator">=</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">AND</span> student.student_no <span class="operator">=</span> choose.student_no </span><br><span class="line"><span class="keyword">AND</span> student.class_no <span class="operator">=</span> classes.class_no </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> classes.class_name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> classes.department_name <span class="keyword">AS</span> <span class="string">&#x27;院系&#x27;</span>,class_name <span class="keyword">AS</span> <span class="string">&#x27;班级&#x27;</span>,student.student_no <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">student_name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,student_contact <span class="keyword">AS</span> <span class="string">&#x27;电话&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> choose,classes,student </span><br><span class="line"><span class="keyword">WHERE</span> choose.course_no <span class="operator">=</span> <span class="number">1</span> </span><br><span class="line"><span class="keyword">AND</span> student.student_no <span class="operator">=</span> choose.student_no </span><br><span class="line"><span class="keyword">AND</span> student.class_no <span class="operator">=</span> classes.class_no </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> student.student_no;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 1检索所有学生、老师信息 使用union 合并结果集</span></span><br><span class="line"><span class="comment">-- 结果:</span></span><br><span class="line"><span class="comment">-- 编号        姓名    练习方式</span></span><br><span class="line"><span class="comment">-- 2012001     张三    150000000</span></span><br><span class="line"><span class="comment">-- 2012002     李四    150000000</span></span><br><span class="line"><span class="comment">-- ...</span></span><br><span class="line"><span class="comment">-- 001         张老师    110000000</span></span><br><span class="line"><span class="comment">-- ...</span></span><br><span class="line"><span class="keyword">SELECT</span> student_no <span class="keyword">AS</span> <span class="string">&#x27;编号&#x27;</span>,student_name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,student_contact <span class="keyword">AS</span> <span class="string">&#x27;联系方式&#x27;</span> <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> teacher_no <span class="keyword">AS</span> <span class="string">&#x27;编号&#x27;</span>,teacher_name <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,teacher_contact <span class="keyword">AS</span> <span class="string">&#x27;联系方式&#x27;</span> <span class="keyword">FROM</span> teacher;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.2统计哪些课程已报满。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> get_choose_number_fn(course_no)<span class="operator">&gt;=</span> up_limit;</span><br><span class="line"><span class="comment">-- 不使用函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="keyword">IN</span> </span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> choose.course_no <span class="keyword">FROM</span> choose,course </span><br><span class="line"><span class="keyword">WHERE</span> choose.course_no <span class="operator">=</span> course.course_no </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> course.course_no </span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(choose.course_no) <span class="operator">&gt;=</span> course.up_limit</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 函数：输入课程号，输出选课人数</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_choose_number_fn(course_no1 <span class="type">VARCHAR</span>(<span class="number">10</span>)) <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> choose_number <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(student_no) <span class="keyword">INTO</span> choose_number <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> course_no <span class="operator">=</span> course_no1;</span><br><span class="line">    <span class="keyword">RETURN</span> choose_number;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment">-- 查看该函数</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_choose_number_fn;</span><br><span class="line"><span class="comment">-- 执行该函数</span></span><br><span class="line"><span class="keyword">SELECT</span> get_choose_number_fn(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.3编写一个函数，在函数中使用循环插入60个学生</span></span><br><span class="line"><span class="comment">-- 提示: 字符串+数字 使用 contact(&#x27;机器人&#x27;,1)</span></span><br><span class="line"><span class="comment">-- 2013001 机器人1   2012自动化3班</span></span><br><span class="line"><span class="comment">-- ~</span></span><br><span class="line"><span class="comment">-- 2013001 机器人60  2012自动化3班</span></span><br><span class="line"><span class="comment">-- 让他们都选报 java语言程序设计这门课程</span></span><br><span class="line"><span class="comment">-- 验证测试4语句，是否显示 java语言程序设计这门课程 报满</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> set_student() <span class="keyword">RETURNS</span> BOOL</span><br><span class="line"><span class="keyword">NO</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    WHILE i <span class="operator">&lt;=</span> <span class="number">60</span> DO</span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">2013000</span><span class="operator">+</span>i,CONCAT(<span class="string">&#x27;机器人&#x27;</span>,i),<span class="keyword">NULL</span>,<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="number">2013000</span><span class="operator">+</span>i,<span class="number">1</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>);</span><br><span class="line">        <span class="keyword">SET</span> i<span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line">    <span class="keyword">RETURN</span> <span class="literal">TRUE</span>;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment">-- 删除该函数</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> set_student;</span><br><span class="line"><span class="comment">-- 执行该函数</span></span><br><span class="line"><span class="keyword">SELECT</span> set_student();</span><br><span class="line"><span class="comment">-- 注意：注释不能放在函数中！！！！！！！！</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 统计选修人数少于30人的所有课程信息(未考虑choose表中没有记录的课程)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> get_choose_number_fn(course_no) <span class="operator">&lt;</span> <span class="number">30</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="keyword">IN</span> (<span class="keyword">SELECT</span> course_no <span class="keyword">FROM</span> choose <span class="keyword">GROUP</span> <span class="keyword">BY</span> course_no <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(course_no) <span class="operator">&lt;</span> <span class="number">30</span>);</span><br><span class="line"><span class="keyword">SELECT</span> course.course_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> choose.course_no <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> choose.course_no <span class="operator">=</span> course.course_no);</span><br><span class="line"><span class="keyword">SELECT</span> course.course_no <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course.course_no <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> choose.course_no <span class="keyword">FROM</span> choose);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. 统计一门课程已经有多少学生选修，还能提供多少学生选修</span></span><br><span class="line"><span class="comment">-- 字段</span></span><br><span class="line"><span class="comment">-- course_no course_name teacher_name up_limit student_num available</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> course.course_no,course_name,teacher_name,up_limit,get_choose_number_fn(course.course_no) <span class="keyword">AS</span> <span class="string">&#x27;student_num&#x27;</span>,</span><br><span class="line">up_limit <span class="operator">-</span> get_choose_number_fn(course.course_no) <span class="keyword">AS</span> <span class="string">&#x27;available&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> choose,course,teacher </span><br><span class="line"><span class="keyword">WHERE</span> choose.course_no <span class="operator">=</span> course.course_no <span class="keyword">AND</span> course.teacher_no <span class="operator">=</span> teacher.teacher_no;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7. 将6定义为视图 available_course_view</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> available_course_view</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> course.course_no,course_name,teacher_name,up_limit,get_choose_number_fn(course.course_no) <span class="keyword">AS</span> <span class="string">&#x27;student_num&#x27;</span>,</span><br><span class="line">up_limit <span class="operator">-</span> get_choose_number_fn(course.course_no) <span class="keyword">AS</span> <span class="string">&#x27;available&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> choose,course,teacher </span><br><span class="line"><span class="keyword">WHERE</span> choose.course_no <span class="operator">=</span> course.course_no <span class="keyword">AND</span> course.teacher_no <span class="operator">=</span> teacher.teacher_no;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> available_course_view;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.作业:编写存储过程 </span></span><br><span class="line"><span class="comment">-- 8.1. 查询学生的成绩</span></span><br><span class="line"><span class="comment">-- 传入学生学号、课程编号 返回成绩</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_score_proc(<span class="keyword">IN</span> tmp_student_no <span class="type">VARCHAR</span>(<span class="number">10</span>),<span class="keyword">IN</span> tmp_course_no <span class="type">VARCHAR</span>(<span class="number">10</span>),<span class="keyword">OUT</span> tmp_score <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> score <span class="keyword">INTO</span> tmp_score <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> tmp_student_no <span class="keyword">AND</span> course_no <span class="operator">=</span> tmp_course_no;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> get_score_proc;</span><br><span class="line"><span class="comment">-- 测试</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@tmp</span>_student_no <span class="operator">=</span> <span class="string">&#x27;2012002&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@tem</span>_course_no <span class="operator">=</span> <span class="string">&#x27;3&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@tem</span>_score <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> get_score_proc(<span class="variable">@tmp</span>_student_no,<span class="variable">@tem</span>_course_no,<span class="variable">@tem</span>_score);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@tem</span>_score; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.2. 查询教师编号，返回所教授课程</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_course_name_proc(<span class="keyword">IN</span> tmp_teacher_no <span class="type">VARCHAR</span>(<span class="number">10</span>),<span class="keyword">OUT</span> tmp_course_name <span class="type">VARCHAR</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> course_name <span class="keyword">INTO</span> tmp_course_name <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> tmp_teacher_no <span class="operator">=</span> course.teacher_no;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment">-- 测试</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@tmp</span>_teacher_no <span class="operator">=</span> <span class="string">&#x27;003&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@tmp</span>_course_name <span class="operator">=</span> <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">CALL</span> get_course_name_proc(<span class="variable">@tmp</span>_teacher_no,<span class="variable">@tmp</span>_course_name);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@tmp</span>_course_name; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.3. 选课存储过程</span></span><br><span class="line"><span class="comment">-- 传入 学号、课程号 传出 状态</span></span><br><span class="line"><span class="comment">-- 用以下语句测试</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 状态</span></span><br><span class="line"><span class="comment">-- 0 插入成功</span></span><br><span class="line"><span class="comment">-- -1 选课失败,已选择</span></span><br><span class="line"><span class="comment">-- -2 选课失败,课程已达到人数上限</span></span><br><span class="line"><span class="comment">-- -3 选课失败,课程未审核</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入时要判断的条件:</span></span><br><span class="line"><span class="comment">-- 未选择过该课程，否则返回 -1</span></span><br><span class="line"><span class="comment">-- 课程是审核过的,否则返回 -3</span></span><br><span class="line"><span class="comment">-- 课程人数未满, 否则返回 -2</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> choose_proc;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> choose_proc(<span class="keyword">IN</span> tmp_student_no <span class="type">VARCHAR</span>(<span class="number">10</span>),<span class="keyword">IN</span> tmp_course_no <span class="type">VARCHAR</span>(<span class="number">10</span>),<span class="keyword">OUT</span> tmp_status <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> t1 <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> t2 <span class="type">VARCHAR</span>(<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> t3 <span class="type">INT</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="number">1452</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">SET</span> <span class="variable">@error</span>_info <span class="operator">=</span> <span class="string">&#x27;外键约束&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">INTO</span> t1 <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> tmp_student_no <span class="keyword">AND</span> course_no <span class="operator">=</span> tmp_course_no;</span><br><span class="line">    IF (t1 <span class="operator">&gt;=</span> <span class="number">1</span>) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">SET</span> tmp_status <span class="operator">=</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">ELSE</span> </span><br><span class="line">        <span class="keyword">SELECT</span> course.status <span class="keyword">INTO</span> t2 <span class="keyword">FROM</span> course <span class="keyword">WHERE</span> course_no <span class="operator">=</span> tmp_course_no;</span><br><span class="line">        IF (t2 <span class="operator">=</span> <span class="string">&#x27;未审核&#x27;</span>) <span class="keyword">THEN</span></span><br><span class="line">             <span class="keyword">SET</span> tmp_status <span class="operator">=</span> <span class="number">-3</span>;</span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">            <span class="keyword">SELECT</span> available <span class="keyword">INTO</span> t3 <span class="keyword">FROM</span> available_course_view <span class="keyword">WHERE</span> course_no <span class="operator">=</span> tmp_course_no;</span><br><span class="line">            IF (t3 <span class="operator">&lt;=</span> <span class="number">0</span>) <span class="keyword">THEN</span></span><br><span class="line">                <span class="keyword">SET</span> tmp_status <span class="operator">=</span> <span class="number">-2</span>;</span><br><span class="line">            <span class="keyword">ELSE</span></span><br><span class="line">                <span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,tmp_student_no,tmp_course_no,<span class="keyword">NULL</span>,NOW()); </span><br><span class="line">                <span class="keyword">SET</span> tmp_status <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">END</span> IF;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2012003&#x27;</span>,<span class="number">1</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>; </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2012003&#x27;</span>,<span class="number">2</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>; </span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2012003&#x27;</span>,<span class="number">3</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2012003&#x27;</span>,<span class="number">4</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 测试错误</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@state</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@error</span>_info <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">CALL</span> choose_proc(<span class="string">&#x27;2016003&#x27;</span>,<span class="number">2</span>,<span class="variable">@state</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@state</span>,<span class="variable">@error</span>_info;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据导入：</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE choose;</span><br><span class="line">USE choose;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> choose;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> student;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> course;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> classes;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> teacher;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> teacher(</span><br><span class="line">    teacher_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    teacher_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    teacher_contact <span class="type">VARCHAR</span>(<span class="number">30</span>)</span><br><span class="line">    ) ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> classes(</span><br><span class="line">    class_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    class_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    department_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    ) ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> course(</span><br><span class="line">    course_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    course_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    up_limit <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">60</span>,</span><br><span class="line">    description TEXT,</span><br><span class="line">    STATUS <span class="type">VARCHAR</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;未审核&#x27;</span>,</span><br><span class="line">    teacher_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> course_teacher_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(teacher_no) <span class="keyword">REFERENCES</span> teacher(teacher_no)</span><br><span class="line">    )ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line">    student_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    student_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    student_contact <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    class_no <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> student_class_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(class_no) <span class="keyword">REFERENCES</span> classes(class_no)</span><br><span class="line">    )ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> choose(</span><br><span class="line">    choose_no <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    student_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    course_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    score TINYINT UNSIGNED,</span><br><span class="line">    choose_tim DATETIME,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> choose_student_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(student_no) <span class="keyword">REFERENCES</span> student(student_no),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> choose_course_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(course_no) <span class="keyword">REFERENCES</span> course(course_no)</span><br><span class="line">    )ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;001&#x27;</span>,<span class="string">&#x27;张老师&#x27;</span>,<span class="string">&#x27;11000000000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;002&#x27;</span>,<span class="string">&#x27;李老师&#x27;</span>,<span class="string">&#x27;12000000000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;003&#x27;</span>,<span class="string">&#x27;王老师&#x27;</span>,<span class="string">&#x27;13000000000&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> classes(class_no,class_name,department_name) <span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2012自动化1班&#x27;</span>, <span class="string">&#x27;机电工程&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> classes(class_no,class_name,department_name) <span class="keyword">VALUES</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;2012自动化2班&#x27;</span>, <span class="string">&#x27;机电工程&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> classes(class_no,class_name,department_name) <span class="keyword">VALUES</span>(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;2012自动化3班&#x27;</span>, <span class="string">&#x27;机电工程&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;java语言程序设计&#x27;</span>,<span class="keyword">DEFAULT</span>,<span class="string">&#x27;暂无&#x27;</span>,<span class="string">&#x27;已审核&#x27;</span>,<span class="string">&#x27;001&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;MySQL数据库&#x27;</span>,<span class="number">150</span>,<span class="string">&#x27;暂无&#x27;</span>,<span class="string">&#x27;已审核&#x27;</span>,<span class="string">&#x27;002&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;c语言程序设计&#x27;</span>,<span class="number">230</span>,<span class="string">&#x27;暂无&#x27;</span>,<span class="string">&#x27;已审核&#x27;</span>,<span class="string">&#x27;003&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;2012001&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;15000000000&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2012002&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;16000000000&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2012003&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;17000000000&#x27;</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;2012004&#x27;</span>,<span class="string">&#x27;马六&#x27;</span>,<span class="string">&#x27;18000000000&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;2012005&#x27;</span>,<span class="string">&#x27;田七&#x27;</span>,<span class="string">&#x27;19000000000&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span></span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012001&#x27;</span>,<span class="number">2</span>,<span class="number">40</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012001&#x27;</span>,<span class="number">1</span>,<span class="number">50</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012002&#x27;</span>,<span class="number">3</span>,<span class="number">60</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012002&#x27;</span>,<span class="number">2</span>,<span class="number">70</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012003&#x27;</span>,<span class="number">1</span>,<span class="number">80</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012004&#x27;</span>,<span class="number">2</span>,<span class="number">90</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012005&#x27;</span>,<span class="number">3</span>,<span class="keyword">NULL</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012005&#x27;</span>,<span class="number">1</span>,<span class="keyword">NULL</span>,NOW());</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 查询练习1</title>
      <link href="/2017/04/05/mysql-1/"/>
      <url>/2017/04/05/mysql-1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 导入world数据库</span></span><br><span class="line"><span class="comment">--     world.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有城市的数量</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(city.ID) <span class="keyword">FROM</span> city;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有国家的数量</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有语言的数量</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(countrylanguage.Language) <span class="keyword">FROM</span> countrylanguage;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(countrylanguage.CountryCode) <span class="keyword">FROM</span> countrylanguage;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询China的详细信息(country表)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> country.name <span class="operator">=</span> <span class="string">&#x27;China&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询属于China的城市信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> city <span class="keyword">WHERE</span> city.CountryCode <span class="operator">=</span> (<span class="keyword">SELECT</span> country.Code <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> country.Name <span class="operator">=</span> <span class="string">&#x27;China&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- * 查询各大洲的国家数量</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Africa&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Antarctica&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Asia&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;North America&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Oceania&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(country.Code) <span class="keyword">FROM</span> country <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;South America&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- * 查询所有欧洲国家(Code 名字 首都 领导人)</span></span><br><span class="line"><span class="keyword">SELECT</span> country.Code,country.Name <span class="keyword">AS</span> <span class="string">&#x27;名字&#x27;</span>,city.Name <span class="keyword">AS</span> <span class="string">&#x27;首都&#x27;</span>,HeadOfState <span class="keyword">AS</span> <span class="string">&#x27;领导人&#x27;</span> <span class="keyword">FROM</span> country,city <span class="keyword">WHERE</span> Continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span> <span class="keyword">AND</span> country.Capital <span class="operator">=</span> city.ID;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有使用Spanish语言的国家及在此国家使用的比率</span></span><br><span class="line"><span class="keyword">SELECT</span> country.Name <span class="keyword">AS</span> <span class="string">&#x27;国家&#x27;</span>,countrylanguage.Percentage <span class="keyword">AS</span> <span class="string">&#x27;Spanish使用比率&#x27;</span> <span class="keyword">FROM</span> country,countrylanguage <span class="keyword">WHERE</span> country.Code <span class="keyword">IN</span> (<span class="keyword">SELECT</span> CountryCode <span class="keyword">FROM</span> countrylanguage <span class="keyword">WHERE</span> countrylanguage.Language <span class="operator">=</span> <span class="string">&#x27;Spanish&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 函数和流程控制</title>
      <link href="/2017/03/31/mysql-8/"/>
      <url>/2017/03/31/mysql-8/</url>
      
        <content type="html"><![CDATA[<h2 id="函数和流程控制"><a href="#函数和流程控制" class="headerlink" title="函数和流程控制"></a>函数和流程控制</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 临时把语句结束 ; 改为以 $$</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student$$</span><br><span class="line">DELIMITER ; <span class="comment">-- 改回来</span></span><br><span class="line"><span class="comment">-- 函数格式</span></span><br><span class="line"><span class="comment">-- DELIMITER $$</span></span><br><span class="line"><span class="comment">-- CREATE FUNCTION 函数名(参数1 参数类型,...) RETURNS 函数返回值类型</span></span><br><span class="line"><span class="comment">-- 函数描述</span></span><br><span class="line"><span class="comment">-- BEGIN</span></span><br><span class="line"><span class="comment">--     函数体</span></span><br><span class="line"><span class="comment">-- END;</span></span><br><span class="line"><span class="comment">-- $$</span></span><br><span class="line"><span class="comment">-- DELIMITER ;</span></span><br><span class="line"><span class="comment">-- 函数描述</span></span><br><span class="line"><span class="comment">-- contains sql: 不包含读写语句</span></span><br><span class="line"><span class="comment">-- no sql: 函数体不包含SQL查询语句</span></span><br><span class="line"><span class="comment">-- reads sql data:</span></span><br><span class="line"><span class="comment">-- modifies sql data:</span></span><br><span class="line"><span class="comment">-- sql security:</span></span><br><span class="line"><span class="comment">-- definer:</span></span><br><span class="line"><span class="comment">-- invoker:</span></span><br><span class="line"><span class="comment">-- comment:</span></span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> row_no_fn() <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">NO</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SET</span> <span class="variable">@row</span>_no <span class="operator">=</span> <span class="variable">@row</span>_no <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">RETURN</span> <span class="variable">@row</span>_no;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@row</span>_no <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SELECT</span> row_no_fn() <span class="keyword">AS</span> <span class="string">&#x27;行号&#x27;</span>,student_no,student_name <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生选择的课程编号</span></span><br><span class="line"><span class="comment">-- 传入的学生学号,返回的是选择的科目数量</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> get_choose_number_fn;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_choose_number_fn(student_no1 <span class="type">VARCHAR</span>(<span class="number">10</span>)) <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> choose_number <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(course_no) <span class="keyword">INTO</span> choose_number <span class="keyword">FROM</span> choose <span class="keyword">WHERE</span> student_no <span class="operator">=</span> student_no1;</span><br><span class="line">    <span class="keyword">RETURN</span> choose_number;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="keyword">SELECT</span> get_choose_number_fn(<span class="string">&#x27;2012003&#x27;</span>) <span class="keyword">AS</span> <span class="string">&#x27;选择了几门?&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> NAME <span class="keyword">FROM</span> mysql.proc <span class="keyword">WHERE</span> db <span class="operator">=</span> <span class="string">&#x27;choose&#x27;</span> <span class="keyword">AND</span> TYPE <span class="operator">=</span> <span class="string">&#x27;function&#x27;</span>;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> row_no_fn; <span class="comment">-- 查看已定义的函数</span></span><br></pre></td></tr></table></figure><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. if语句</span></span><br><span class="line"><span class="comment">-- if 条件 then</span></span><br><span class="line"><span class="comment">--     语句1</span></span><br><span class="line"><span class="comment">-- elseif 条件2 then</span></span><br><span class="line"><span class="comment">--     语句2</span></span><br><span class="line"><span class="comment">-- end if</span></span><br><span class="line"><span class="comment">-- 根据编号及角色得到名字</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> get_name_fn;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_name_fn(number <span class="type">VARCHAR</span>(<span class="number">10</span>),role <span class="type">VARCHAR</span>(<span class="number">10</span>)) <span class="keyword">RETURNS</span> <span class="type">VARCHAR</span>(<span class="number">30</span>)</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> tmpName <span class="type">VARCHAR</span>(<span class="number">30</span>); <span class="comment">-- 局部变量</span></span><br><span class="line">    IF (role <span class="operator">=</span> <span class="string">&#x27;student&#x27;</span>) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">SELECT</span> student_name <span class="keyword">INTO</span> tmpName <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> student_no <span class="operator">=</span> number;</span><br><span class="line">    ELSEIF (role <span class="operator">=</span> <span class="string">&#x27;teacher&#x27;</span>) <span class="keyword">THEN</span></span><br><span class="line">        <span class="keyword">SELECT</span> teacher_name <span class="keyword">INTO</span> tmpName <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> teacher_no <span class="operator">=</span> number;</span><br><span class="line">    <span class="keyword">ELSE</span> </span><br><span class="line">        <span class="keyword">SET</span> tmpName <span class="operator">=</span> <span class="string">&#x27;输入有误&#x27;</span>; </span><br><span class="line">    <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">RETURN</span> tmpName;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="keyword">SELECT</span> get_name_fn(<span class="string">&#x27;2012001&#x27;</span>,<span class="string">&#x27;student&#x27;</span>),get_name_fn(<span class="string">&#x27;001&#x27;</span>,<span class="string">&#x27;teacher&#x27;</span>),get_name_fn(<span class="string">&#x27;001&#x27;</span>,<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line"><span class="comment">-- 2. CASE 语句</span></span><br><span class="line"><span class="comment">-- case 判断的变量</span></span><br><span class="line"><span class="comment">--     when 条件值 then 语句1</span></span><br><span class="line"><span class="comment">--     WHEN 条件值2 THEN 语句2</span></span><br><span class="line"><span class="comment">-- end case;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> get_week_fn;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_week_fn(week_no <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">NO</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> tmpName <span class="type">VARCHAR</span>(<span class="number">20</span>); <span class="comment">-- 局部变量</span></span><br><span class="line">    <span class="keyword">CASE</span> week_no</span><br><span class="line">    <span class="keyword">WHEN</span> <span class="number">0</span> <span class="keyword">THEN</span> <span class="keyword">SET</span> tmpName <span class="operator">=</span> <span class="string">&#x27;星期一&#x27;</span>;</span><br><span class="line">    <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="keyword">SET</span> tmpName <span class="operator">=</span> <span class="string">&#x27;星期二&#x27;</span>;</span><br><span class="line">    <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="keyword">SET</span> tmpName <span class="operator">=</span> <span class="string">&#x27;星期三&#x27;</span>;</span><br><span class="line">    <span class="keyword">WHEN</span> <span class="number">3</span> <span class="keyword">THEN</span> <span class="keyword">SET</span> tmpName <span class="operator">=</span> <span class="string">&#x27;星期四&#x27;</span>;</span><br><span class="line">    <span class="keyword">WHEN</span> <span class="number">4</span> <span class="keyword">THEN</span> <span class="keyword">SET</span> tmpName <span class="operator">=</span> <span class="string">&#x27;星期五&#x27;</span>;</span><br><span class="line">    <span class="keyword">ELSE</span> <span class="keyword">SET</span> tmpName <span class="operator">=</span> <span class="string">&#x27;今天休息&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">CASE</span>;</span><br><span class="line">    <span class="keyword">RETURN</span> tmpName;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="keyword">SELECT</span> NOW(),get_week_fn(WEEKDAY(NOW()));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 循环语句</span></span><br><span class="line"><span class="comment">-- while 条件 DO</span></span><br><span class="line"><span class="comment">--     循环体</span></span><br><span class="line"><span class="comment">-- End While;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- labelA:while 条件 DO</span></span><br><span class="line"><span class="comment">--     循环体</span></span><br><span class="line"><span class="comment">--      leave labelA; 跳出循环</span></span><br><span class="line"><span class="comment">-- End While;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- repeat </span></span><br><span class="line"><span class="comment">--    循环体</span></span><br><span class="line"><span class="comment">--     until 条件</span></span><br><span class="line"><span class="comment">-- end repeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- labelB:loop</span></span><br><span class="line"><span class="comment">--    循环体</span></span><br><span class="line"><span class="comment">--      if 条件 then</span></span><br><span class="line"><span class="comment">--         leave  labelB;</span></span><br><span class="line"><span class="comment">--      end if;</span></span><br><span class="line"><span class="comment">-- end loop</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_sum1_fn(n <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">NO</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> SUM <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    WHILE i <span class="operator">&lt;=</span> n DO</span><br><span class="line">        <span class="keyword">SET</span> SUM <span class="operator">=</span> SUM <span class="operator">+</span> i;</span><br><span class="line">        <span class="keyword">SET</span> i<span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line">    <span class="keyword">RETURN</span> SUM;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> get_sum1_fn(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_sum2_fn(n <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">NO</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> SUM <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    A:WHILE <span class="literal">TRUE</span> DO</span><br><span class="line">        <span class="keyword">SET</span> SUM <span class="operator">=</span> SUM <span class="operator">+</span> i;</span><br><span class="line">        <span class="keyword">SET</span> i<span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">        IF i <span class="operator">=</span> <span class="number">101</span> <span class="keyword">THEN</span></span><br><span class="line">            LEAVE A; <span class="comment">-- 跳出</span></span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line">    <span class="keyword">RETURN</span> SUM;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> get_sum2_fn(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> testTable</span><br><span class="line">(a <span class="type">INT</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> insert_100_testdata_fn;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> insert_100_testdata_fn() <span class="keyword">RETURNS</span> BOOL</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    A:WHILE <span class="literal">TRUE</span> DO</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> testTable <span class="keyword">VALUES</span>(i);        </span><br><span class="line">        <span class="keyword">SET</span> i<span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">        IF i <span class="operator">=</span> <span class="number">101</span> <span class="keyword">THEN</span></span><br><span class="line">            LEAVE A; <span class="comment">-- 跳出 相当于break</span></span><br><span class="line">            <span class="comment">-- iterate A; -- 相当continue</span></span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line">    <span class="keyword">RETURN</span> <span class="literal">TRUE</span>;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> insert_100_testdata_fn();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> testTable;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_sum4_fn(n <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">NO</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> SUM <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    REPEAT</span><br><span class="line">        <span class="keyword">SET</span> SUM <span class="operator">=</span> SUM <span class="operator">+</span> i;</span><br><span class="line">        <span class="keyword">SET</span> i<span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">        UNTIL i<span class="operator">=</span><span class="number">101</span></span><br><span class="line">    <span class="keyword">END</span> REPEAT;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">RETURN</span> SUM;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> get_sum4_fn(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><h3 id="上面程序的数据创建代码："><a href="#上面程序的数据创建代码：" class="headerlink" title="上面程序的数据创建代码："></a>上面程序的数据创建代码：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE choose;</span><br><span class="line">USE choose;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> choose;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> student;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> course;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> classes;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> teacher;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> teacher(</span><br><span class="line">    teacher_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    teacher_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    teacher_contact <span class="type">VARCHAR</span>(<span class="number">30</span>)</span><br><span class="line">    ) ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> classes(</span><br><span class="line">    class_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    class_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    department_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    ) ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> classes CHANGE deaprtment_name department_name <span class="type">VARCHAR</span>(<span class="number">30</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> course(</span><br><span class="line">    course_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    course_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    up_limit <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">60</span>,</span><br><span class="line">    description TEXT,</span><br><span class="line">    STATUS <span class="type">VARCHAR</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;未审核&#x27;</span>,</span><br><span class="line">    teacher_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> course_teacher_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(teacher_no) <span class="keyword">REFERENCES</span> teacher(teacher_no)</span><br><span class="line">    )ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line">    student_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    student_name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    student_contact <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    class_no <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> student_class_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(class_no) <span class="keyword">REFERENCES</span> classes(class_no)</span><br><span class="line">    )ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> choose(</span><br><span class="line">    choose_no <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">    student_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    course_no <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    score TINYINT UNSIGNED,</span><br><span class="line">    choose_time DATETIME,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> choose_student_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(student_no) <span class="keyword">REFERENCES</span> student(student_no),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> choose_course_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(course_no) <span class="keyword">REFERENCES</span> course(course_no)</span><br><span class="line">    )ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;001&#x27;</span>,<span class="string">&#x27;张老师&#x27;</span>,<span class="string">&#x27;11000000000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;002&#x27;</span>,<span class="string">&#x27;李老师&#x27;</span>,<span class="string">&#x27;12000000000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher <span class="keyword">VALUES</span>(<span class="string">&#x27;003&#x27;</span>,<span class="string">&#x27;王老师&#x27;</span>,<span class="string">&#x27;13000000000&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> classes(class_no,class_name,department_name) <span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2012自动化1班&#x27;</span>, <span class="string">&#x27;机电工程&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> classes(class_no,class_name,department_name) <span class="keyword">VALUES</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;2012自动化2班&#x27;</span>, <span class="string">&#x27;机电工程&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> classes(class_no,class_name,department_name) <span class="keyword">VALUES</span>(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;2012自动化3班&#x27;</span>, <span class="string">&#x27;机电工程&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;java语言程序设计&#x27;</span>,<span class="keyword">DEFAULT</span>,<span class="string">&#x27;暂无&#x27;</span>,<span class="string">&#x27;已审核&#x27;</span>,<span class="string">&#x27;001&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;MySQL数据库&#x27;</span>,<span class="number">150</span>,<span class="string">&#x27;暂无&#x27;</span>,<span class="string">&#x27;已审核&#x27;</span>,<span class="string">&#x27;002&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;c语言程序设计&#x27;</span>,<span class="number">230</span>,<span class="string">&#x27;暂无&#x27;</span>,<span class="string">&#x27;已审核&#x27;</span>,<span class="string">&#x27;003&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;2012001&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;15000000000&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2012002&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;16000000000&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2012003&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;17000000000&#x27;</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;2012004&#x27;</span>,<span class="string">&#x27;马六&#x27;</span>,<span class="string">&#x27;18000000000&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;2012005&#x27;</span>,<span class="string">&#x27;田七&#x27;</span>,<span class="string">&#x27;19000000000&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> choose <span class="keyword">VALUES</span></span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012001&#x27;</span>,<span class="number">2</span>,<span class="number">40</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012001&#x27;</span>,<span class="number">1</span>,<span class="number">50</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012002&#x27;</span>,<span class="number">3</span>,<span class="number">60</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012002&#x27;</span>,<span class="number">2</span>,<span class="number">70</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012003&#x27;</span>,<span class="number">1</span>,<span class="number">80</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012004&#x27;</span>,<span class="number">2</span>,<span class="number">90</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012005&#x27;</span>,<span class="number">3</span>,<span class="keyword">NULL</span>,NOW()),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="string">&#x27;2012005&#x27;</span>,<span class="number">1</span>,<span class="keyword">NULL</span>,NOW());</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 编程基础</title>
      <link href="/2017/03/31/mysql-7/"/>
      <url>/2017/03/31/mysql-7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 常量</span></span><br><span class="line"><span class="comment">-- 字符串常量</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;I\&#x27;</span>m a student.<span class="string">&#x27; AS col1;</span></span><br><span class="line"><span class="string">-- 时间日期常量 (复合日期时间格式的字符串)</span></span><br><span class="line"><span class="string">SELECT &#x27;</span><span class="number">2016</span><span class="number">-08</span><span class="number">-31</span><span class="string">&#x27; AS &#x27;</span>日期<span class="string">&#x27;,&#x27;</span><span class="number">14</span>:<span class="number">32</span>:<span class="number">00</span><span class="string">&#x27; AS &#x27;</span>时间<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">-- 十六进制</span></span><br><span class="line"><span class="string">SELECT X&#x27;</span><span class="number">41</span><span class="string">&#x27;,X&#x27;</span><span class="number">4</span>d7953514c<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">SELECT 0x41,0x4d7953514c;</span></span><br><span class="line"><span class="string">SELECT HEX(0x4d7953514c);</span></span><br><span class="line"><span class="string">-- 二进制</span></span><br><span class="line"><span class="string">SELECT b&#x27;</span><span class="number">111101</span><span class="string">&#x27;,b&#x27;</span><span class="number">1</span><span class="string">&#x27;,b&#x27;</span><span class="number">11</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">-- 布尔值</span></span><br><span class="line"><span class="string">SELECT TRUE,FALSE;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-- 2. 变量</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-- 2.1 会话变量</span></span><br><span class="line"><span class="string">SET @username = &#x27;</span>张三<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">SELECT @username AS &#x27;</span>username<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">SET @age = 18;</span></span><br><span class="line"><span class="string">SELECT @username AS &#x27;</span>姓名<span class="string">&#x27;,@age AS &#x27;</span>年龄<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">SET @age = @age + 1;</span></span><br><span class="line"><span class="string">SELECT @username AS &#x27;</span>姓名<span class="string">&#x27;,@age AS &#x27;</span>年龄<span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SELECT @a = &#x27;</span>a<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">SELECT @a := &#x27;</span>a<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">SELECT @a AS &#x27;</span><span class="variable">@a</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SELECT 119 INTO @age;</span></span><br><span class="line"><span class="string">SELECT @age AS &#x27;</span>年龄<span class="string">&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-- 3. 运算符</span></span><br><span class="line"><span class="string">-- + - * / % DIV</span></span><br><span class="line"><span class="string">SET @num = 15;</span></span><br><span class="line"><span class="string">SELECT @num+2,@num-2,@num*2,@num/2,@num%3,@num DIV 3;</span></span><br><span class="line"><span class="string">-- 时间</span></span><br><span class="line"><span class="string">SELECT &#x27;</span><span class="number">2016</span><span class="number">-8</span><span class="number">-31</span><span class="string">&#x27;+ INTERVAL &#x27;</span><span class="number">3</span><span class="string">&#x27; DAY;</span></span><br><span class="line"><span class="string">-- 布尔运算</span></span><br><span class="line"><span class="string">-- &gt; &lt; &gt;= &lt;= &lt;&gt; != is null </span></span><br><span class="line"><span class="string">SELECT &#x27;</span>ab<span class="string">&#x27; = &#x27;</span>ab<span class="string">&#x27;,&#x27;</span>b<span class="string">&#x27;&gt;&#x27;</span>a<span class="string">&#x27;,NULL=NULL,NULL IS NULL;</span></span><br><span class="line"><span class="string">-- 逻辑运算</span></span><br><span class="line"><span class="string">-- and or xor</span></span><br><span class="line"><span class="string">SELECT 1 AND 2,2 AND 0,2 AND TRUE,2 AND &#x27;</span><span class="literal">true</span><span class="string">&#x27;,1 XOR 2,1 XOR FALSE;</span></span><br><span class="line"><span class="string">-- 位运算</span></span><br><span class="line"><span class="string">-- &amp; | ~ &gt;&gt; &lt;&lt;</span></span><br><span class="line"><span class="string">SELECT b&#x27;</span><span class="number">101</span><span class="string">&#x27; &amp; b&#x27;</span><span class="number">011</span><span class="string">&#x27;,5&amp;2,5|2,~5,5^2,5&gt;&gt;2,5&lt;&lt;2;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 数据类型</title>
      <link href="/2017/03/31/mysql-6/"/>
      <url>/2017/03/31/mysql-6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE example;</span><br><span class="line">USE example;</span><br><span class="line"><span class="comment">-- 1. 整数</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> testint(</span><br><span class="line">    a TINYINT ZEROFILL,</span><br><span class="line">    b <span class="type">SMALLINT</span> ZEROFILL,</span><br><span class="line">    c MEDIUMINT ZEROFILL,</span><br><span class="line">    d <span class="type">INT</span> ZEROFILL,</span><br><span class="line">    e <span class="type">INTEGER</span> ZEROFILL,</span><br><span class="line">    f <span class="type">BIGINT</span> ZEROFILL</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testint <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testint <span class="keyword">VALUES</span>(<span class="number">256</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testint <span class="keyword">VALUES</span>(<span class="number">10001</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testint;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. float double decimal</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span>  testfloat(</span><br><span class="line">    a <span class="type">FLOAT</span>,</span><br><span class="line">    b <span class="keyword">DOUBLE</span>,</span><br><span class="line">    c <span class="type">DECIMAL</span>(<span class="number">6</span>,<span class="number">2</span>)</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testfloat <span class="keyword">VALUES</span>(<span class="number">3.1415926535</span>,<span class="number">3.1415926535</span>,<span class="number">3.1415926535</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testfloat;\</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 字符串</span></span><br><span class="line"><span class="comment">-- char varchar text tinytext text mediumtext longtext</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 日期时间类型    </span></span><br><span class="line"><span class="comment">-- date    YYYY-MM-DD     1000-01-01~9999-12-31</span></span><br><span class="line"><span class="comment">-- time HH:ii:ss        -838:59:59~838:59:59</span></span><br><span class="line"><span class="comment">-- year YYYY</span></span><br><span class="line"><span class="comment">-- datetime    YYYY-MM-DD HH:ii:ss    1000-01-01 00:00:00~9999-12-31 23:59:59</span></span><br><span class="line"><span class="comment">-- timestamp     YYYY-MM-DD HH:ii:ss    1970-01-01 00:00:00~2037-12-31 23:59:59 &lt;- 和时区相关</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> testdate(</span><br><span class="line">    a <span class="type">DATE</span>,</span><br><span class="line">    b <span class="type">TIME</span>,</span><br><span class="line">    c <span class="keyword">YEAR</span>,</span><br><span class="line">    d DATETIME,</span><br><span class="line">    e <span class="type">TIMESTAMP</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testdate <span class="keyword">VALUES</span>(<span class="string">&#x27;2016-08-03&#x27;</span>,<span class="string">&#x27;14:19:00&#x27;</span>,<span class="string">&#x27;2016&#x27;</span>,NOW(),NOW());</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testdate <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,NOW(),<span class="string">&#x27;16&#x27;</span>,NOW(),NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testdate;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看变量</span></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;time_zone&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> time_zone <span class="operator">=</span> <span class="string">&#x27;+12:00&#x27;</span>; <span class="comment">-- 设定时区</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testdate;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 复合类型</span></span><br><span class="line"><span class="comment">--   enum 枚举  单选框</span></span><br><span class="line"><span class="comment">--   set  集合  复选框</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> person(</span><br><span class="line">    sex ENUM(<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>),</span><br><span class="line">    interest <span class="keyword">SET</span>(<span class="string">&#x27;看电影&#x27;</span>,<span class="string">&#x27;游泳&#x27;</span>,<span class="string">&#x27;打乒乓&#x27;</span>,<span class="string">&#x27;下棋&#x27;</span>)</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> person <span class="keyword">VALUES</span>(<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;看电影,打乒乓&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> person <span class="keyword">VALUES</span>(<span class="string">&#x27;不男不女&#x27;</span>,<span class="string">&#x27;打lol&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> person <span class="keyword">VALUES</span>(<span class="string">&#x27;男女&#x27;</span>,<span class="string">&#x27;看电影,打乒乓&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> person;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6 二进制类</span></span><br><span class="line"><span class="comment">-- binary(n)   n个字节</span></span><br><span class="line"><span class="comment">-- varbinary(n)</span></span><br><span class="line"><span class="comment">-- bit(n)    n个位</span></span><br><span class="line"><span class="comment">-- tinyblob    1个字节</span></span><br><span class="line"><span class="comment">-- blob                    图片、声音、视频</span></span><br><span class="line"><span class="comment">-- mediumblob</span></span><br><span class="line"><span class="comment">-- longblob</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 查询-多表查询</title>
      <link href="/2017/03/31/mysql-5/"/>
      <url>/2017/03/31/mysql-5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(id <span class="type">INT</span>,deptName <span class="type">VARCHAR</span>(<span class="number">20</span>));</span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee (id <span class="type">INT</span>,empName <span class="type">VARCHAR</span>(<span class="number">20</span>),deptId <span class="type">INT</span>);</span><br><span class="line"><span class="comment">-- 薪水表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salary (id <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> AUTO_INCREMENT,empId <span class="type">INT</span>,money <span class="type">INT</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 初始数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> dept;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;工程部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;销售部&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;客服部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;市场部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;乔布斯&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;比尔盖茨&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="string">&#x27;克林顿&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">7</span>,<span class="string">&#x27;小布什&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">8</span>,<span class="string">&#x27;希拉里&#x27;</span>,<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salary <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>,<span class="number">1</span>,<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salary <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>,<span class="number">2</span>,<span class="number">10000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salary <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>,<span class="number">3</span>,<span class="number">10500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salary <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>,<span class="number">4</span>,<span class="number">1300</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salary <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>,<span class="number">5</span>,<span class="number">1300</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salary <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>,<span class="number">6</span>,<span class="number">1300</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salary <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>,<span class="number">7</span>,<span class="number">1300</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> salary;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> salary <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dept;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 员工id 员工名字 员工部门名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. 交叉连接查询(没有条件) 结果数量=7*3</span></span><br><span class="line"><span class="comment">-- [例]</span></span><br><span class="line"><span class="keyword">SELECT</span> employee.id,empName,deptName <span class="keyword">FROM</span> employee,dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 内连接查询，只有符合条件的信息才会显示 (用的最普遍)</span></span><br><span class="line"><span class="comment">-- [例] </span></span><br><span class="line"><span class="keyword">SELECT</span> employee.id,employee.empName,dept.deptName <span class="keyword">FROM</span> employee,dept <span class="keyword">WHERE</span> employee.deptId <span class="operator">=</span> dept.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- select 哪些字段</span></span><br><span class="line"><span class="comment">-- from 从哪些表</span></span><br><span class="line"><span class="comment">-- where 条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询2张表 需要1个条件</span></span><br><span class="line"><span class="comment">-- 查询3张表 需要2个条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- [例] 三张表</span></span><br><span class="line"><span class="comment">-- 员工信息、部门名字、薪水</span></span><br><span class="line"><span class="keyword">SELECT</span> employee.id,employee.empName,dept.deptName,salary.money <span class="keyword">FROM</span> employee,dept,salary <span class="keyword">WHERE</span> employee.deptId <span class="operator">=</span> dept.id <span class="keyword">AND</span> employee.id <span class="operator">=</span> salary.empId;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 外连接</span></span><br><span class="line">worldcity</span><br><span class="line"><span class="comment">-- 左外连接 左表全部显示</span></span><br><span class="line"><span class="comment">-- [例]                        左表                 右表</span></span><br><span class="line"><span class="keyword">SELECT</span> dept.deptName,employee.empName <span class="keyword">FROM</span> dept <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employee <span class="keyword">ON</span> dept.id<span class="operator">=</span>employee.deptId;</span><br><span class="line"><span class="comment">-- 右外连接 右表全部显示</span></span><br><span class="line"><span class="comment">-- [例] </span></span><br><span class="line"><span class="keyword">SELECT</span> dept.deptName,employee.empName <span class="keyword">FROM</span> dept <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employee <span class="keyword">ON</span> dept.id<span class="operator">=</span>employee.deptId;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 自连接</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employee <span class="keyword">ADD</span> bossId <span class="type">INT</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> employee <span class="keyword">SET</span> bossId <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> employee <span class="keyword">SET</span> bossId <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> employee <span class="keyword">SET</span> bossId <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> employee <span class="keyword">SET</span> bossId <span class="operator">=</span> <span class="number">2</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> employee <span class="keyword">SET</span> bossId <span class="operator">=</span> <span class="number">2</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- [例] </span></span><br><span class="line"><span class="comment">-- [需求] 显示员工及其上司</span></span><br><span class="line"><span class="comment">-- 注意:需要使用别名区分</span></span><br><span class="line"><span class="keyword">SELECT</span> a.empName,b.empName <span class="keyword">FROM</span> employee <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> employee b <span class="keyword">ON</span> a.bossId <span class="operator">=</span> b.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询 从一个表中查询的结果 作为另外一个表查询的条件</span></span><br><span class="line"><span class="comment">-- in,not in ,any,all,exists,not exists</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> deptId <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> dept);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> deptId <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> dept);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 合并查询结果</span></span><br><span class="line"><span class="keyword">SELECT</span> id <span class="keyword">FROM</span> dept <span class="keyword">UNION</span> <span class="keyword">SELECT</span> deptId <span class="keyword">FROM</span> employee; <span class="comment">-- 去除重复的</span></span><br><span class="line"><span class="keyword">SELECT</span> id <span class="keyword">FROM</span> dept <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> deptId <span class="keyword">FROM</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 例子</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> computer_stu(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">score <span class="type">FLOAT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> scholarship</span><br><span class="line">(</span><br><span class="line">LEVEL <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,</span><br><span class="line">score <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">85</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1002</span>,<span class="string">&#x27;lisi&#x27;</span>,<span class="number">91</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1003</span>,<span class="string">&#x27;乔布斯&#x27;</span>,<span class="number">75</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1004</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">77</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1005</span>,<span class="string">&#x27;库克&#x27;</span>,<span class="number">65</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1006</span>,<span class="string">&#x27;比尔&#x27;</span>,<span class="number">99</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1007</span>,<span class="string">&#x27;克林顿&#x27;</span>,<span class="number">86</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> computer_stu <span class="keyword">VALUES</span>(<span class="number">1008</span>,<span class="string">&#x27;小布什&#x27;</span>,<span class="number">70</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> scholarship <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> scholarship <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">80</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> scholarship <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="number">70</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询可以拿1等奖学金的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> id,NAME,score <span class="keyword">FROM</span> computer_stu <span class="keyword">WHERE</span> score <span class="operator">&gt;=</span> (<span class="keyword">SELECT</span> score <span class="keyword">FROM</span> scholarship <span class="keyword">WHERE</span> LEVEL <span class="operator">=</span> <span class="number">1</span>);</span><br><span class="line"><span class="comment">-- 查询可以所有拿奖学金的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> id,NAME,score <span class="keyword">FROM</span> computer_stu <span class="keyword">WHERE</span> score <span class="operator">&gt;=</span> (<span class="keyword">SELECT</span> score <span class="keyword">FROM</span> scholarship <span class="keyword">WHERE</span> LEVEL <span class="operator">=</span> <span class="number">3</span>);</span><br><span class="line"><span class="keyword">SELECT</span> id,NAME,score <span class="keyword">FROM</span> computer_stu <span class="keyword">WHERE</span> score <span class="operator">&gt;=</span> <span class="keyword">ANY</span> (<span class="keyword">SELECT</span> score <span class="keyword">FROM</span> scholarship);</span><br><span class="line"><span class="comment">-- 查询可以拿1等奖学金的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> id,NAME,score <span class="keyword">FROM</span> computer_stu <span class="keyword">WHERE</span> score <span class="operator">&gt;=</span> <span class="keyword">ALL</span> (<span class="keyword">SELECT</span> score <span class="keyword">FROM</span> scholarship);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 查询-单表查询</title>
      <link href="/2017/03/31/mysql-4/"/>
      <url>/2017/03/31/mysql-4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 4.1 查询所有列</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 4.2 查询指定字段</span></span><br><span class="line"><span class="keyword">SELECT</span> id,stuName <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 4.3 指定别名</span></span><br><span class="line"><span class="keyword">SELECT</span> id <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>,stuName <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span> <span class="keyword">FROM</span> student <span class="keyword">AS</span> s; <span class="comment">-- 表的别名在多表查询时会用到</span></span><br><span class="line"><span class="comment">-- 4.4 添加一个常量列</span></span><br><span class="line"><span class="keyword">SELECT</span> id <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>,stuName <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>, <span class="string">&#x27;Java班&#x27;</span> <span class="keyword">AS</span> <span class="string">&#x27;班级&#x27;</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 4.5 合并列</span></span><br><span class="line"><span class="keyword">SELECT</span> id,stuName,(chinese<span class="operator">+</span>math<span class="operator">+</span>english) <span class="keyword">AS</span> <span class="string">&#x27;总成绩&#x27;</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 4.6 去重复</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> gender <span class="keyword">FROM</span> student; <span class="comment">-- 相同性别只会显示一个</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(gender) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> gender,stuName <span class="keyword">FROM</span> student; <span class="comment">-- 如果同名同姓 且都是同一性别</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.7 条件查询 WHERE</span></span><br><span class="line"><span class="comment">-- 4.7.1 AND OR</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span> <span class="keyword">AND</span> id <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span> <span class="keyword">OR</span> id <span class="operator">=</span> <span class="number">5</span>; <span class="comment">-- 有三条记录</span></span><br><span class="line"><span class="comment">-- 4.7.2 比较 &gt; &lt; &lt;= &gt;= = &lt;&gt; between and</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> chinese <span class="operator">&gt;</span> <span class="number">70</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> chinese <span class="operator">&gt;</span> <span class="number">70</span> <span class="keyword">AND</span> english <span class="operator">&gt;</span> <span class="number">90</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> chinese <span class="keyword">BETWEEN</span> <span class="number">85</span> <span class="keyword">AND</span> <span class="number">100</span>;  <span class="comment">-- 包含两端</span></span><br><span class="line"><span class="comment">-- 4.7.3 is null, is not null, = &#x27;&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">-- 4.7.4 模糊查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="keyword">LIKE</span> <span class="string">&#x27;张%&#x27;</span>; <span class="comment">-- %任意字符</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="keyword">LIKE</span> <span class="string">&#x27;张_&#x27;</span>; <span class="comment">-- _单个字符</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="keyword">LIKE</span> <span class="string">&#x27;%张%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.8 聚合查询</span></span><br><span class="line"><span class="comment">-- 聚合函数 sum() avg() max() min() count()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(english) <span class="keyword">AS</span> <span class="string">&#x27;全班英语总成绩&#x27;</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(english) <span class="keyword">AS</span> <span class="string">&#x27;全班英语平均成绩&#x27;</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(id) <span class="keyword">AS</span> <span class="string">&#x27;总数&#x27;</span>  <span class="keyword">FROM</span> student; <span class="comment">-- 会忽略掉null</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(english) <span class="keyword">AS</span> <span class="string">&#x27;参加英语考试人数&#x27;</span>  <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9. 分页查询limit 第几条数据,查询几条</span></span><br><span class="line"><span class="comment">-- SELECT * FROM student limit ((当前页数 - 1) * 每页行数), 行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student LIMIT <span class="number">0</span>,<span class="number">2</span>; <span class="comment">-- 第一页 1,2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student LIMIT <span class="number">2</span>,<span class="number">2</span>; <span class="comment">--        3,4</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student LIMIT <span class="number">4</span>,<span class="number">2</span>; <span class="comment">--        5,6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 10. 排序 order by</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> id;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">ASC</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> chinese <span class="keyword">DESC</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span> chinese <span class="keyword">DESC</span>,math <span class="keyword">DESC</span>,english <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11. 分组查询</span></span><br><span class="line"><span class="keyword">SELECT</span> gender,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> gender;</span><br><span class="line"><span class="keyword">SELECT</span> gender,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> gender <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12. 正则</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> city <span class="keyword">WHERE</span> NAME REGEXP <span class="string">&#x27;^A&#x27;</span>;</span><br><span class="line"><span class="comment">-- 类似 SELECT * FROM city WHERE NAME LIKE &#x27;A%&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再添加一些数据:</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,stuName,chinese,english,math) <span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="string">&#x27;郭靖&#x27;</span>,<span class="number">89</span>,<span class="number">78</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,stuName,chinese,english,math) <span class="keyword">VALUES</span>(<span class="number">7</span>,<span class="string">&#x27;杨康&#x27;</span>,<span class="number">67</span>,<span class="number">53</span>,<span class="number">95</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,stuName,chinese,english,math) <span class="keyword">VALUES</span>(<span class="number">8</span>,<span class="string">&#x27;黄药师&#x27;</span>,<span class="number">87</span>,<span class="number">78</span>,<span class="number">77</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,stuName,chinese,english,math) <span class="keyword">VALUES</span>(<span class="number">9</span>,<span class="string">&#x27;老顽童&#x27;</span>,<span class="number">88</span>,<span class="number">98</span>,<span class="number">92</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,stuName,chinese,english,math) <span class="keyword">VALUES</span>(<span class="number">10</span>,<span class="string">&#x27;段玉&#x27;</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">67</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,stuName,chinese,english,math) <span class="keyword">VALUES</span>(<span class="number">11</span>,<span class="string">&#x27;段王爷&#x27;</span>,<span class="number">55</span>,<span class="number">85</span>,<span class="number">45</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,stuName,chinese,english,math) <span class="keyword">VALUES</span>(<span class="number">12</span>,<span class="string">&#x27;黄蓉&#x27;</span>,<span class="number">75</span>,<span class="number">65</span>,<span class="number">30</span>);</span><br><span class="line"><span class="comment">-- 查询表中所有学生的信息。</span></span><br><span class="line"><span class="comment">-- 查询表中所有学生的姓名和对应的英语成绩。</span></span><br><span class="line"><span class="comment">-- 过滤表中英语成绩的重复数据</span></span><br><span class="line"><span class="comment">-- 使用别名表示学生分数。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有姓名为杨的学生成绩</span></span><br><span class="line"><span class="comment">-- 查询英语成绩大于等于90分的同学</span></span><br><span class="line"><span class="comment">-- 查询总分大于200分的所有同学</span></span><br><span class="line"><span class="comment">-- 查询所有姓段的学生英语成绩。</span></span><br><span class="line"><span class="comment">-- 查询英语&gt;80或者总分&gt;200的同学</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 统计每个学生的总分。</span></span><br><span class="line"><span class="comment">-- 在所有学生总分数上加10分特长分。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 关于约束条件</title>
      <link href="/2017/03/31/mysql-3/"/>
      <url>/2017/03/31/mysql-3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数据表字段的添加约束条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. 主键约束 PRIMARY KEY</span></span><br><span class="line"><span class="comment">-- 唯一标识数据表中记录的字段</span></span><br><span class="line"><span class="comment">-- [例]</span></span><br><span class="line"><span class="comment">-- 创建一个学生表students(学号 主键,姓名,年龄);</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> students;</span><br><span class="line"><span class="comment">-- CREATE TABLE students(stuId INT,stuName VARCHAR(20),stuAge INT);</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students(stuId <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,stuName <span class="type">VARCHAR</span>(<span class="number">20</span>),stuAge <span class="type">INT</span>);</span><br><span class="line"><span class="keyword">DESC</span> students;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">20</span>);<span class="comment">-- 提示错误</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> students;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 默认值约束 DEFAULT </span></span><br><span class="line"><span class="comment">-- 插入数据没有提供该列字段数据时使用默认值填充</span></span><br><span class="line"><span class="comment">-- [例]</span></span><br><span class="line"><span class="comment">-- 创建一个学生表(学号,姓名,年龄 默认18岁);</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> students;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students(stuId <span class="type">INT</span>,stuName <span class="type">VARCHAR</span>(<span class="number">20</span>),stuAge <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students(stuId,stuName) <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>); <span class="comment">-- 没有提供数据，所以会是默认值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> students;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 非空约束</span></span><br><span class="line"><span class="comment">-- 限制插入数据时必须为该字段提供非空数据</span></span><br><span class="line"><span class="comment">-- [例]</span></span><br><span class="line"><span class="comment">-- 创建一个学生表(学号,姓名 非空,年龄);</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> students;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students(stuId <span class="type">INT</span>,stuName <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,stuAge <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="keyword">NULL</span>,<span class="number">17</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 唯一约束</span></span><br><span class="line"><span class="comment">-- 所有行的数据该列不能有同值</span></span><br><span class="line"><span class="comment">-- [例]</span></span><br><span class="line"><span class="comment">-- 创建部门表(部门id，部门名称 唯一)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> dept;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(id <span class="type">INT</span>,deptName <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">UNIQUE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;工程部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">3</span>,<span class="string">&#x27;工程部&#x27;</span>); <span class="comment">-- 插入不进去了</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 自增长约束 auto_increment</span></span><br><span class="line"><span class="comment">-- 该字段不需要赋值，数值会自动增长</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> students;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students(sid <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> AUTO_INCREMENT,stuName <span class="type">VARCHAR</span>(<span class="number">20</span>),stuAge <span class="type">INT</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students(stuName,stuAge) <span class="keyword">VALUES</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students(stuName,stuAge) <span class="keyword">VALUES</span>(<span class="string">&#x27;李四&#x27;</span>,<span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students(stuName,stuAge) <span class="keyword">VALUES</span>(<span class="string">&#x27;王五&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students(stuName,stuAge) <span class="keyword">VALUES</span>(<span class="string">&#x27;赵六&#x27;</span>,<span class="number">19</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> students;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> students <span class="keyword">WHERE</span> sid <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> students; <span class="comment">-- 只会删除数据，不会清楚自动增长的序号</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> students; <span class="comment">-- 清空数据，并充值自动增长的序号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DESC</span>  students;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. 外键约束</span></span><br><span class="line"><span class="comment">-- 约束两张表的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- dept 主表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> dept;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(id <span class="type">INT</span> <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>,departName <span class="type">VARCHAR</span>(<span class="number">20</span>));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;工程部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;客服部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- employee 是副表 employee的deptId依赖dept表中的id</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> employee;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">empName <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">deptId <span class="type">INT</span>,</span><br><span class="line"><span class="comment">-- 添加一个外键约束</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> employee_dept_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(deptId) <span class="keyword">REFERENCES</span> dept(id)</span><br><span class="line"><span class="comment">--         约束名字       本表字段   外表字段</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE <span class="comment">-- 级联修改</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE <span class="comment">-- 级联删除</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;乔布斯&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;比尔盖茨&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="string">&#x27;克林顿&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">7</span>,<span class="string">&#x27;小布什&#x27;</span>,<span class="number">4</span>); </span><br><span class="line"><span class="comment">-- 插入不进去了，因为添加了外键约束 没有4的部门</span></span><br><span class="line"><span class="comment">-- Cannot add or update a child row: a foreign key constraint fails (`xxxcompany`.`employee`, CONSTRAINT `employee_dept_fk` FOREIGN KEY (`deptId`) REFERENCES `dept` (`id`))</span></span><br><span class="line"><span class="comment">-- INSERT INTO employee VALUES(7,&#x27;小布什&#x27;,3);</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改数据</span></span><br><span class="line"><span class="keyword">UPDATE</span> employee <span class="keyword">SET</span> deptId <span class="operator">=</span> <span class="number">5</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">7</span>; <span class="comment">-- 修改不了. 因为外键约束</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 级联操作问题:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果没有添加级联操纵，如果我要删除dept里的工程部，删不掉，因为第二张表里需要这条数据</span></span><br><span class="line"><span class="comment">-- 怎么解决? 为副表添加级联操作</span></span><br><span class="line"><span class="keyword">UPDATE</span> dept <span class="keyword">SET</span> id <span class="operator">=</span> <span class="number">5</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span>; <span class="comment">-- employee 中的deptId 也更正修改</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- employee 中的工程部人员也全部被删除</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 关于存储引擎</title>
      <link href="/2017/03/31/mysql-2/"/>
      <url>/2017/03/31/mysql-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查看引擎</span></span><br><span class="line"><span class="keyword">SHOW</span> ENGINES;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 修改默认引擎</span></span><br><span class="line"><span class="comment">-- 修改my.ini 后重启</span></span><br><span class="line"><span class="comment">-- default-storage-engine=INNODB  增删较好</span></span><br><span class="line"><span class="comment">-- default-storage-engine=MYISAM   支持全文索引，查询较好</span></span><br><span class="line"></span><br><span class="line">USE xxxcompany;</span><br><span class="line"><span class="keyword">SET</span> default_storge_engine <span class="operator">=</span> INNODB;</span><br><span class="line"><span class="keyword">SET</span> default_storge_engine <span class="operator">=</span> MYISAM;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.指定表格使用引擎</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (stuId <span class="type">INT</span>,stuName <span class="type">VARCHAR</span>(<span class="number">20</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (stuId <span class="type">INT</span>,stuName <span class="type">VARCHAR</span>(<span class="number">20</span>)) ENGINE <span class="operator">=</span> MYISAM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> student;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记： 基本操作</title>
      <link href="/2017/03/31/mysql-1/"/>
      <url>/2017/03/31/mysql-1/</url>
      
        <content type="html"><![CDATA[<h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 显示当前有哪些数据库</span></span><br><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 创建数据库,设置编码方式为utf8</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE xxxcompany <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 删除数据库</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE xxxcompany;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 查看数据库</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE xxxcompany;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 修改数据库</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE xxxcompany <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> gbk;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. 使用数据库</span></span><br><span class="line">USE xxxcompany;</span><br></pre></td></tr></table></figure><h3 id="表格操作"><a href="#表格操作" class="headerlink" title="表格操作"></a>表格操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查看所有表格</span></span><br><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 创建表格</span></span><br><span class="line"><span class="comment">-- 创建部门表（部门编号,部门名字）</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> department(id <span class="type">INT</span>,NAME <span class="type">CHAR</span>(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 查看创建的某个表格详细信息</span></span><br><span class="line"><span class="keyword">DESC</span> department;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 删除表格</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> department;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 修改表格</span></span><br><span class="line"><span class="comment">-- 5.1 添加字段 部门主管名字</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> department <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> departName <span class="type">VARCHAR</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.2 删除字段 部门主管名字</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> department <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> departName;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.3 修改字段类型 原先varchar（20） 改为 varchar（30）</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> department MODIFY <span class="keyword">COLUMN</span> departName <span class="type">VARCHAR</span>(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.4 修改字段名称 departName 改为 dept</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> department CHANGE <span class="keyword">COLUMN</span> departName dept <span class="type">VARCHAR</span>(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.5 修改表格名称为 原先department 改为 dept</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> department RENAME <span class="keyword">TO</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. 数据操作</span></span><br><span class="line"><span class="comment">-- 6.1 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department <span class="keyword">VALUES</span>(<span class="number">001</span>,<span class="string">&#x27;工程部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.2 删除数据</span></span><br><span class="line"><span class="comment">-- 不加条件，所有都被删除了</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="operator">=</span> <span class="number">1001</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.3 修改数据</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> username <span class="operator">=</span> <span class="string">&#x27;lisisi&#x27;</span> <span class="keyword">where</span> sid <span class="operator">=</span> <span class="number">1002</span>;</span><br><span class="line"><span class="comment">-- 如果不写条件，就会把所有记录都修改了</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> username <span class="operator">=</span> <span class="string">&#x27;lisisisi&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.4 查询数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 部门表;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7 数据表字段的约束（详见约束）</span></span><br><span class="line"><span class="comment">-- 7.1 主键约束</span></span><br><span class="line"><span class="comment">-- 关键字 PRIMARY KEY</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.2 默认值约束</span></span><br><span class="line"><span class="comment">-- 关键字 DEFAULT</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.3 非空约束</span></span><br><span class="line"><span class="comment">-- 关键字 NOT NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.4 唯一约束</span></span><br><span class="line"><span class="comment">-- 关键字 NOT NULL UNIQUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.5 自增长约束</span></span><br><span class="line"><span class="comment">-- 关键字 AUTO_INCREMENT</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.6 外键约束</span></span><br><span class="line"><span class="comment">-- 关键字 FOREIGN KEY</span></span><br></pre></td></tr></table></figure><h3 id="简单查询例子"><a href="#简单查询例子" class="headerlink" title="简单查询例子"></a>简单查询例子</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表中所有学生的信息。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 查询表中所有学生的姓名和对应的英语成绩。</span></span><br><span class="line"><span class="keyword">SELECT</span> stuName,english <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 过滤表中英语成绩的重复数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> english <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 使用别名表示学生分数。</span></span><br><span class="line"><span class="comment">-- 表的别名在多表查询时会用到</span></span><br><span class="line"><span class="keyword">SELECT</span> id <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>,stuName <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,chinese <span class="keyword">AS</span> <span class="string">&#x27;语文&#x27;</span>,english <span class="keyword">AS</span> <span class="string">&#x27;英语&#x27;</span>,math <span class="keyword">AS</span> <span class="string">&#x27;数学&#x27;</span> <span class="keyword">FROM</span> student <span class="keyword">AS</span> s; </span><br><span class="line"><span class="comment">-- 查询所有姓名为杨的学生成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="keyword">LIKE</span> <span class="string">&#x27;杨%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 查询英语成绩大于等于90分的同学</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> english <span class="operator">&gt;</span> <span class="number">90</span>;</span><br><span class="line"><span class="comment">-- 查询总分大于200分的所有同学</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> (english <span class="operator">+</span> chinese <span class="operator">+</span> math) <span class="operator">&gt;</span> <span class="number">200</span>;</span><br><span class="line"><span class="comment">-- 查询所有姓段的学生英语成绩。</span></span><br><span class="line"><span class="keyword">SELECT</span> english <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> stuName <span class="keyword">LIKE</span> <span class="string">&#x27;段%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 查询英语&gt;80或者总分&gt;200的同学</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> english <span class="operator">&gt;</span> <span class="number">80</span> <span class="keyword">OR</span> (english <span class="operator">+</span> chinese <span class="operator">+</span> math) <span class="operator">&gt;</span> <span class="number">200</span>;</span><br><span class="line"><span class="comment">-- 统计每个学生的总分。</span></span><br><span class="line"><span class="keyword">SELECT</span> stuName <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,(english <span class="operator">+</span> chinese <span class="operator">+</span> math) <span class="keyword">AS</span> <span class="string">&#x27;总分&#x27;</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 在所有学生总分数上加10分特长分。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MySQL笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 反射和Properties</title>
      <link href="/2016/09/19/java-3/"/>
      <url>/2016/09/19/java-3/</url>
      
        <content type="html"><![CDATA[<h3 id="properties配置文件"><a href="#properties配置文件" class="headerlink" title="properties配置文件"></a>properties配置文件</h3><p>dbinfo.properties文件中的内容：<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span> <span class="string">oracle.jdbc.driver.OracleDriver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:oracle:thin:@192.168.1.100:1521:bjpowernode</span></span><br><span class="line"><span class="attr">username</span>:<span class="string">\u5f20\u4e09</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">tiger</span></span><br></pre></td></tr></table></figure><br>dbinfo这样的文件我们称作配置文件，<br>配置的文件的作用就是：使程序更加灵活。<br>注意：一般在程序中可变的东西不要写死。推荐写到配置文件中。<br>运行同样的程序得到不同的结果。<br>像dbinfo这样一个具有特殊内容的配置文件我们又叫做：属性文件。<br><code>java规范中要求属性文件以“.properties”</code></p><p>属性文件中数据要求：</p><ul><li>key和value之间可以使用“空格”，“冒号”，“等号”。</li><li>如果“空格”，“等号”，“冒号”都有，按最前的作为分隔符。</li></ul><h3 id="IO-Properties例子："><a href="#IO-Properties例子：" class="headerlink" title="IO+Properties例子："></a>IO+Properties例子：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存配置信息(也可以直接在文件中修改)</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveProperties</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">    <span class="comment">// 设置属性</span></span><br><span class="line">    p.setProperty(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    p.setProperty(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    p.setProperty(<span class="string">&quot;ip&quot;</span>, <span class="string">&quot;192.168.6.2&quot;</span>);</span><br><span class="line">    p.store(<span class="keyword">new</span> FileWriter(<span class="string">&quot;e:\\niit\\settings.txt&quot;</span>), <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取配置信息</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readProperties</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException, IOException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">    p.load(<span class="keyword">new</span> FileReader(<span class="string">&quot;e:\\niit\\settings.txt&quot;</span>));</span><br><span class="line">    System.out.println(p.getProperty(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">    System.out.println(p.getProperty(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">    System.out.println(p.getProperty(<span class="string">&quot;ip&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反射机制-IO-Properties联合应用，动态创建java对象："><a href="#反射机制-IO-Properties联合应用，动态创建java对象：" class="headerlink" title="反射机制+IO+Properties联合应用，动态创建java对象："></a>反射机制+IO+Properties联合应用，动态创建java对象：</h3><p>利用这样的方法可以实现构建动态的代码，即代码在运行时进行装配！使代码更加灵活！<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建属性对象</span></span><br><span class="line">Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line"><span class="comment">//2.创建流</span></span><br><span class="line">FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;classInfo.properties&quot;</span>);</span><br><span class="line"><span class="comment">//3.加载</span></span><br><span class="line">p.load(fr);</span><br><span class="line"><span class="comment">//4.关闭流</span></span><br><span class="line">fr.close();</span><br><span class="line"><span class="comment">//通过key获取value</span></span><br><span class="line">String className = p.getProperty(<span class="string">&quot;className&quot;</span>);</span><br><span class="line"><span class="comment">//System.out.println(className);</span></span><br><span class="line"><span class="comment">//通过反射机制创建对象</span></span><br><span class="line">Class c = Class.forName(className);</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line">Object o = c.newInstance();</span><br><span class="line">System.out.println(o);</span><br></pre></td></tr></table></figure><br>该配置文件如下，可以直接在外部修改value的值，产生达到不同效果的代码<br>classInfo.properties中的内容：<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">className</span>=<span class="string">User</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 可变长参数</title>
      <link href="/2016/09/19/java-2/"/>
      <url>/2016/09/19/java-2/</url>
      
        <content type="html"><![CDATA[<h3 id="关于Java中可变长参数：见例子（4个注意点）"><a href="#关于Java中可变长参数：见例子（4个注意点）" class="headerlink" title="关于Java中可变长参数：见例子（4个注意点）"></a>关于Java中可变长参数：见例子（4个注意点）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//m1方法有一个int类型可变长参数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">(<span class="keyword">int</span>... a)</span></span>&#123; <span class="comment">//m1方法在调用的时候，传递的实参可以是 0-N 个.</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果可以精确匹配的方法，则调用该方法，不会再去执行可变长参数的那个方法.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可变长参数可以等同看做数组</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m2</span><span class="params">(String... args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">            System.out.println(args[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m3</span><span class="params">(Class... args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">            Class c = args[i];</span><br><span class="line">            System.out.println(c.newInstance());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可变长参数只能出现一次，并且只能出现在所有参数的最后一位。</span></span><br><span class="line">    <span class="comment">//public static void m4(String... a,int i)&#123;&#125;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m4</span><span class="params">(<span class="keyword">int</span> i,String... a)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        m1();</span><br><span class="line">        m1(<span class="number">1</span>);</span><br><span class="line">        m1(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        m1(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>);</span><br><span class="line">        m2(<span class="string">&quot;体育&quot;</span>,<span class="string">&quot;音乐&quot;</span>,<span class="string">&quot;旅游&quot;</span>,<span class="string">&quot;美食&quot;</span>);</span><br><span class="line">        String[] s = &#123;<span class="string">&quot;体育&quot;</span>,<span class="string">&quot;音乐&quot;</span>,<span class="string">&quot;旅游&quot;</span>,<span class="string">&quot;美食&quot;</span>&#125;;</span><br><span class="line">        m2(s);</span><br><span class="line">        m3(Date.class,Employee.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 反射构造Class对象</title>
      <link href="/2016/09/19/java-1/"/>
      <url>/2016/09/19/java-1/</url>
      
        <content type="html"><![CDATA[<h2 id="构造Class对象的三种方式："><a href="#构造Class对象的三种方式：" class="headerlink" title="构造Class对象的三种方式："></a>构造Class对象的三种方式：</h2><h3 id="第一种方式："><a href="#第一种方式：" class="headerlink" title="第一种方式："></a>第一种方式：</h3><ul><li>对于系统的类，必须写全名！</li><li><code>该方式会将.Class文件装载到JVM中，会执行静态语句块！</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class c1 = Class.forName(<span class="string">&quot;Employee&quot;</span>); <span class="comment">//c1引用保存内存地址指向堆中的对象，该对象代表的是Employee整个类.</span></span><br></pre></td></tr></table></figure><h3 id="第二种方式："><a href="#第二种方式：" class="headerlink" title="第二种方式："></a>第二种方式：</h3></li><li>java中每个类型都有 class 属性！</li><li><code>该方法不会加载.Class文件，不执行静态语句块！</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class c2 = Employee.class;</span><br></pre></td></tr></table></figure><h3 id="第三种方式："><a href="#第三种方式：" class="headerlink" title="第三种方式："></a>第三种方式：</h3>java语言中任何一个java对象都有 getClass 方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Employee e = <span class="keyword">new</span> Employee();</span><br><span class="line">Class c3 = e.getClass(); <span class="comment">//c3是运行时类 (e的运行时类是Employee)</span></span><br><span class="line">System.out.println(c1==c2); <span class="comment">//true</span></span><br><span class="line">System.out.println(c2==c3); <span class="comment">//true  </span></span><br></pre></td></tr></table></figure><code>注：因为Employee这个类在JVM中只有一个，所以c1,c2,c3的内存地址是相同的，指向堆中唯一的一个对象.</code></li></ul><h3 id="创建此-Class-对象所表示的类的一个新实例"><a href="#创建此-Class-对象所表示的类的一个新实例" class="headerlink" title="创建此 Class 对象所表示的类的一个新实例:"></a>创建此 Class 对象所表示的类的一个新实例:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class c = Class.forName(<span class="string">&quot;Employee&quot;</span>);</span><br><span class="line">Object o = c.newInstance(); <span class="comment">//调用了Employee的无参数构造方法.</span></span><br><span class="line">System.out.println(o); <span class="comment">//Employee@c17164</span></span><br></pre></td></tr></table></figure><p><code>注：如果没有无参数构造方法，则会报错！</code></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 装饰者模式</title>
      <link href="/2016/08/24/java-1/"/>
      <url>/2016/08/24/java-1/</url>
      
        <content type="html"><![CDATA[<h2 id="装饰者模式：用于对类扩展功能"><a href="#装饰者模式：用于对类扩展功能" class="headerlink" title="装饰者模式：用于对类扩展功能"></a>装饰者模式：用于对类扩展功能</h2><p>例如：对FileReader这个类的close方法进行扩展:</p><ol><li>继承(不推荐，代码耦合度太高。不利于项目的扩展。)</li><li>装饰者模式.</li></ol><ul><li>装饰者模式中要求：装饰者中含有被装饰者的引用.</li><li>装饰者模式中要求：装饰者和被装饰者应该实现同一个类型.</li></ul><h3 id="Reader-公共父类或共同实现的接口"><a href="#Reader-公共父类或共同实现的接口" class="headerlink" title="Reader 公共父类或共同实现的接口"></a>Reader 公共父类或共同实现的接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Reader</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h3 id="FileReader-被装饰者"><a href="#FileReader-被装饰者" class="headerlink" title="FileReader 被装饰者"></a>FileReader 被装饰者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileReader</span> <span class="keyword">extends</span> <span class="title">Reader</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;FileReader closed!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="BufferedReader-装饰者"><a href="#BufferedReader-装饰者" class="headerlink" title="BufferedReader 装饰者"></a>BufferedReader 装饰者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BufferedReader</span> <span class="keyword">extends</span> <span class="title">Reader</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//关联关系</span></span><br><span class="line">    Reader reader; <span class="comment">//这里使用多态，降低了装饰者和被装饰者的耦合度！</span></span><br><span class="line">    <span class="comment">//Constructor</span></span><br><span class="line">    BufferedReader(Reader reader)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.reader = reader;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//对FileReader中的close方法进行扩展</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//扩展</span></span><br><span class="line">        System.out.println(<span class="string">&quot;扩展代码1&quot;</span>);</span><br><span class="line">        reader.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;扩展代码2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        //1.创建被装饰者</span></span><br><span class="line"><span class="comment">        FileReader fr = new FileReader();</span></span><br><span class="line"><span class="comment">        //2.创建装饰者</span></span><br><span class="line"><span class="comment">        BufferedReader br = new BufferedReader(fr);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader());</span><br><span class="line">        <span class="comment">//3.通过执行装饰者中的方法间接去执行被装饰者中的方法.</span></span><br><span class="line">        br.close();<span class="comment">//这里只需要执行最外层的对象的方法就可以了，程序会一层一层调用里层的方法！</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： IO-输入输出16个流</title>
      <link href="/2016/08/23/java-4/"/>
      <url>/2016/08/23/java-4/</url>
      
        <content type="html"><![CDATA[<h3 id="字节流："><a href="#字节流：" class="headerlink" title="字节流："></a>字节流：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// FileInputStream</span></span><br><span class="line">FileInputStream fIn = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;1.avi&quot;</span>);</span><br><span class="line"><span class="comment">// FileOutputStream（默认覆盖）</span></span><br><span class="line">FileOutputStream fOut = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;2.avi&quot;</span>);</span><br><span class="line"><span class="comment">// BufferedInputStream</span></span><br><span class="line">BufferedInputStream fIn = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;1.avi&quot;</span>));</span><br><span class="line"><span class="comment">// BufferedOutputStream</span></span><br><span class="line">BufferedOutputStream fOut = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;2.avi&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="字符流："><a href="#字符流：" class="headerlink" title="字符流："></a>字符流：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// FileReader</span></span><br><span class="line">FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;1.avi&quot;</span>);</span><br><span class="line"><span class="comment">// FileWriter （默认覆盖）</span></span><br><span class="line">FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;2.avi&quot;</span>);</span><br><span class="line"><span class="comment">// BufferedReader</span></span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">&quot;1.avi&quot;</span>));</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;1.avi&quot;</span>)));</span><br><span class="line"><span class="comment">// BufferedWriter</span></span><br><span class="line">BufferedWriter writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">&quot;2.avi&quot;</span>));</span><br><span class="line">BufferedWriter writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;2.avi&quot;</span>)));</span><br></pre></td></tr></table></figure><h3 id="转换流-字节流转换成字符流-默认为GBK编码"><a href="#转换流-字节流转换成字符流-默认为GBK编码" class="headerlink" title="转换流(字节流转换成字符流)(默认为GBK编码)"></a>转换流(字节流转换成字符流)(默认为GBK编码)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// InputStreamReader</span></span><br><span class="line">InputStreamReader reader = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;1.avi&quot;</span>));</span><br><span class="line"><span class="comment">// OutputStreamWriter</span></span><br><span class="line">OutputStreamWriter writer = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;2.avi&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="数据流：（可读写带类型的数据）"><a href="#数据流：（可读写带类型的数据）" class="headerlink" title="数据流：（可读写带类型的数据）"></a>数据流：（可读写带类型的数据）</h3><p><code>注意：要使用该流读取数据，必须提前知道该文件中数据的存储格式和顺序。读的顺序必须和写入的顺序相同。</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DataInputStream</span></span><br><span class="line">DataInputStream in= <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;1.avi&quot;</span>));</span><br><span class="line"><span class="comment">// DataOutputStream</span></span><br><span class="line">DataOutputStream out = <span class="keyword">new</span> DataOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;2.avi&quot;</span>));</span><br></pre></td></tr></table></figure></p><h3 id="对象流："><a href="#对象流：" class="headerlink" title="对象流："></a>对象流：</h3><p>ObjectInputStream<br>ObjectOutputStream</p><h3 id="打印流：（主要用来记录日志，通过改变系统自带的流的输出方向来实现）"><a href="#打印流：（主要用来记录日志，通过改变系统自带的流的输出方向来实现）" class="headerlink" title="打印流：（主要用来记录日志，通过改变系统自带的流的输出方向来实现）"></a>打印流：（主要用来记录日志，通过改变系统自带的流的输出方向来实现）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PrintWriter 标准的输出流(字符流)</span></span><br><span class="line"><span class="comment">// PrintStream 标准的输出流(默认输出到控制台)</span></span><br><span class="line">PrintStream ps = System.out;</span><br><span class="line">ps.println(<span class="string">&quot;JAVA。。。。&quot;</span>);  </span><br><span class="line"><span class="comment">// 用系统打印流记录日志：</span></span><br><span class="line"><span class="comment">// 默认是输出到控制台的.</span></span><br><span class="line">System.out.println(<span class="string">&quot;HelloWorld!&quot;</span>);</span><br><span class="line">PrintStream ps = System.out;</span><br><span class="line">ps.println(<span class="string">&quot;JAVA。。。。&quot;</span>);</span><br><span class="line"><span class="comment">// 可以改变输出方向.</span></span><br><span class="line">System.setOut(<span class="keyword">new</span> PrintStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;log&quot;</span>)));  <span class="comment">//log日志文件</span></span><br><span class="line"><span class="comment">// 再次输出</span></span><br><span class="line"><span class="comment">//System.out.print(&quot;HAHA&quot;);//此时已经改变了输出方向，&quot;HAHA&quot;将会记录到日志文件中！</span></span><br><span class="line"><span class="comment">// 通常使用上面的这种方式记录日志.</span></span><br><span class="line"><span class="comment">// 需求：记录日志,m1方法开始执行的时间和结束的时间.记录到log文件中.</span></span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss SSS&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;m1方法开始执行 &quot;</span>+sdf.format(<span class="keyword">new</span> Date()));</span><br><span class="line">m1();</span><br><span class="line">System.out.println(<span class="string">&quot;m1方法执行结束 &quot;</span>+sdf.format(<span class="keyword">new</span> Date()));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： IO-转换流的作用</title>
      <link href="/2016/08/23/java-3/"/>
      <url>/2016/08/23/java-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Reader和Writer最重要的子类是InputStreamReader和OutputStreamWriter类。<br>InputStreamReader类包含了一个底层输入流，可以从中读取原始字节。它根据指定的编码方式，将这些字节转换为Unicode字符。<br>OutputStreamWriter从运行的程序中接收Unicode字符，然后使用指定的编码方式将这些字符转换为字节，再将这些字节写入底层输出流中。</p></blockquote><h3 id="字符流与字节流转换"><a href="#字符流与字节流转换" class="headerlink" title="字符流与字节流转换"></a>字符流与字节流转换</h3><h4 id="转换流的特点："><a href="#转换流的特点：" class="headerlink" title="转换流的特点："></a>转换流的特点：</h4><ol><li>其是字符流和字节流之间的桥梁</li><li>可对读取到的字节数据经过指定编码转换成字符</li><li>可对读取到的字符数据经过指定编码转换成字节</li></ol><h4 id="什么时候使用转换流呢？"><a href="#什么时候使用转换流呢？" class="headerlink" title="什么时候使用转换流呢？"></a>什么时候使用转换流呢？</h4><ol><li><code>源或者目的对应的设备是字节流，但是操作的却是文本数据，可以使用转换作为桥梁。提高对文本操作的便捷。 参见示例1-1 1-2</code></li><li><code>一旦操作文本涉及到具体的指定编码表时，必须使用转换流 。参见示例2-1 2-2</code></li></ol><h4 id="具体的对象体现："><a href="#具体的对象体现：" class="headerlink" title="具体的对象体现："></a>具体的对象体现：</h4><ol><li>InputStreamReader:字节到字符的桥梁</li><li>OutputStreamWriter:字符到字节的桥梁</li></ol><p>这两个流对象是字符体系中的成员，它们有转换作用，本身又是字符流，所以在构造的时候需要传入字节流对象进来。</p><h3 id="示例1-1：字节流System-in转为字符流BufferedReader"><a href="#示例1-1：字节流System-in转为字符流BufferedReader" class="headerlink" title="示例1-1：字节流System.in转为字符流BufferedReader"></a>示例1-1：字节流System.in转为字符流BufferedReader</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//字节流--&gt;字符流</span></span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">&quot;is2.txt&quot;</span>));</span><br><span class="line">    String line = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span>((line = br.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;over&quot;</span>.equals(line))&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bw.write(line);</span><br><span class="line">        bw.newLine();</span><br><span class="line">        bw.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    bw.close();</span><br><span class="line">    br.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例1-2-字符流BufferedReader转为字节流System-out"><a href="#实例1-2-字符流BufferedReader转为字节流System-out" class="headerlink" title="实例1-2 字符流BufferedReader转为字节流System.out"></a>实例1-2 字符流BufferedReader转为字节流System.out</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">&quot;is2.txt&quot;</span>));</span><br><span class="line">    <span class="comment">//字符流--&gt;字节流</span></span><br><span class="line">    BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(System.out));</span><br><span class="line">    String line = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span> ((line = br.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">        bw.write(line);</span><br><span class="line">        bw.newLine();</span><br><span class="line">        bw.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    bw.close();</span><br><span class="line">    br.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例2-1-采用指定的编码读取文本文件"><a href="#示例2-1-采用指定的编码读取文本文件" class="headerlink" title="示例2-1 采用指定的编码读取文本文件"></a>示例2-1 采用指定的编码读取文本文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//在IO流中，如果想指定编码读写数据，只能使用转换流。</span></span><br><span class="line">    <span class="comment">//采用指定编码从文本文件中读取内容</span></span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;C:\\a.txt&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">    String line = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span> ((line=br.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">        System.out.println(line);</span><br><span class="line">    &#125;</span><br><span class="line">    br.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例2-2-采用指定的编码输出文本文件"><a href="#实例2-2-采用指定的编码输出文本文件" class="headerlink" title="实例2-2 采用指定的编码输出文本文件"></a>实例2-2 采用指定的编码输出文本文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;C:\\a.txt&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">    bw.write(<span class="string">&quot;I am 君山&quot;</span>);</span><br><span class="line">    bw.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： IO-输入输出规范代码</title>
      <link href="/2016/08/23/java-2/"/>
      <url>/2016/08/23/java-2/</url>
      
        <content type="html"><![CDATA[<h3 id="文件路径4种写法："><a href="#文件路径4种写法：" class="headerlink" title="文件路径4种写法："></a>文件路径4种写法：</h3><ul><li>相对路径，相对当前而言，在当前路径下找：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String filePath = <span class="string">&quot;temp01&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>绝对路径：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String filePath = <span class="string">&quot;D:\\course\\JavaProjects\\02-JavaSE\\chapter08\\temp01&quot;</span>;<span class="comment">//普通写法，需要用转义字符</span></span><br><span class="line">String filePath = <span class="string">&quot;D:/course/JavaProjects/02-JavaSE/chapter08/temp01&quot;</span>;<span class="comment">//反斜杠写法，windows系统下支持</span></span><br><span class="line">String filePath = <span class="string">&quot;D:&quot;</span>+File.separator+<span class="string">&quot;course&quot;</span>+File.separator+<span class="string">&quot;JavaProjects&quot;</span>+File.separator+<span class="string">&quot;02-JavaSE&quot;</span>+File.separator+<span class="string">&quot;chapter08&quot;</span>+File.separator+<span class="string">&quot;temp01&quot;</span>;<span class="comment">//最标准写法：用系统相关默认名称分隔符</span></span><br></pre></td></tr></table></figure><h3 id="输入输出流标准写法："><a href="#输入输出流标准写法：" class="headerlink" title="输入输出流标准写法："></a>输入输出流标准写法：</h3><ol><li>创建流对象：<ul><li>创建输入流对象会抛出FileNotFoundException异常，该异常可以细化处理</li><li>创建输出流对象时若文件不存在则自动创建，默认为覆盖写入，如果要追加方式写入，在构造方法参数列表后加一个true</li></ul></li><li>进行读写操作：抛出IOException</li><li>关闭流对象：抛出IOException</li></ol><h3 id="字符流和字节流："><a href="#字符流和字节流：" class="headerlink" title="字符流和字节流："></a>字符流和字节流：</h3><ul><li>字节流可以用于所有文件</li><li>字符流编程比较方便（可用readline方法），但只能用于纯文本文件</li></ul><h3 id="copy代码范例（字节流）："><a href="#copy代码范例（字节流）：" class="headerlink" title="copy代码范例（字节流）："></a>copy代码范例（字节流）：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream fIn = <span class="keyword">null</span>;</span><br><span class="line">FileOutputStream fOut = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义输入流对象，会抛出FileNotFoundException</span></span><br><span class="line">    fIn = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;F://test//1.avi&quot;</span>);</span><br><span class="line">    <span class="comment">//定义输出流对象，文件不存在则自动创建，如果要追加方式写入，在构造方法参数列表后加一个true</span></span><br><span class="line">    fOut = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;F://test//2.avi&quot;</span>);</span><br><span class="line">    <span class="comment">//读写的操作</span></span><br><span class="line">    <span class="keyword">while</span>((temp = fIn.read(buff)) != -<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fOut.write(buff, <span class="number">0</span>, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    fOut.flush();<span class="comment">//为了保证数据完全写入硬盘，推荐用强制刷新写入</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(FileNotFoundException e)<span class="comment">//输入流抛出异常的细化处理</span></span><br><span class="line">&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException e)<span class="comment">//读写操作的异常处理</span></span><br><span class="line">&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span><span class="comment">//关闭流对象，写在finally语句块中确保一定执行</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(fIn!=<span class="keyword">null</span>)<span class="comment">//防止空指针异常</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            fIn.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fOut!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            fOut.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="copy不规范代码（字符流使用readline）："><a href="#copy不规范代码（字符流使用readline）：" class="headerlink" title="copy不规范代码（字符流使用readline）："></a>copy不规范代码（字符流使用readline）：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">&quot;Copy03.java&quot;</span>));</span><br><span class="line">BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">&quot;c:/Copy03.java&quot;</span>));</span><br><span class="line">String temp = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//用于防止在文件最后写一个换行符</span></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    count++;</span><br><span class="line">    temp = br.readLine();</span><br><span class="line">    <span class="keyword">if</span>(temp==<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        bw.newLine();<span class="comment">//如果不写换行符，文件不会换行</span></span><br><span class="line">    &#125;</span><br><span class="line">    bw.write(temp);</span><br><span class="line">&#125;</span><br><span class="line">bw.flush();</span><br><span class="line">br.close();</span><br><span class="line">bw.close();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： IO-输入输出流概念</title>
      <link href="/2016/08/23/java-1/"/>
      <url>/2016/08/23/java-1/</url>
      
        <content type="html"><![CDATA[<h3 id="输入输出流概念："><a href="#输入输出流概念：" class="headerlink" title="输入输出流概念："></a>输入输出流概念：</h3><p><img src="/images/javase_33.png" alt=""></p><h3 id="字节流相关的UML继承结构图："><a href="#字节流相关的UML继承结构图：" class="headerlink" title="字节流相关的UML继承结构图："></a>字节流相关的UML继承结构图：</h3><p><img src="/images/javase_34.png" alt=""></p><h3 id="字符流相关的UML继承结构图："><a href="#字符流相关的UML继承结构图：" class="headerlink" title="字符流相关的UML继承结构图："></a>字符流相关的UML继承结构图：</h3><p><img src="/images/javase_35.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 深入finally语句块</title>
      <link href="/2016/08/21/java-2/"/>
      <url>/2016/08/21/java-2/</url>
      
        <content type="html"><![CDATA[<h3 id="关于finally语句块"><a href="#关于finally语句块" class="headerlink" title="关于finally语句块"></a>关于finally语句块</h3><ol><li>finally语句块可以直接和try语句块联用。 try….finally…</li><li>try…catch….finally 也可以.</li><li>在finally语句块中的代码是一定会执行的。</li><li><code>finally语句块是一定会执行的，所以通常在程序中为了保证某资源一定会释放，所以一般在finally语句块中释放资源。</code></li><li><code>如果在finally语句块中写了return语句，则会把之前的返回值覆盖，要避免这种情况！</code></li></ol><h3 id="只有以下情况例外："><a href="#只有以下情况例外：" class="headerlink" title="只有以下情况例外："></a>只有以下情况例外：</h3><p>只要在执行finally语句块之前退出了JVM，则finally语句块不会执行.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//退出JVM</span></span><br><span class="line">    System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">//不会执行.</span></span><br><span class="line">    System.out.println(<span class="string">&quot;finally....&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="try-finally底层实现原理（面试题）："><a href="#try-finally底层实现原理（面试题）：" class="headerlink" title="try finally底层实现原理（面试题）："></a>try finally底层实现原理（面试题）：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">    i++;</span><br><span class="line">    System.out.println(<span class="string">&quot;m1的i=&quot;</span> + i); <span class="comment">//11</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以上代码的执行原理</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int i = 10;</span></span><br><span class="line"><span class="comment">try &#123;</span></span><br><span class="line"><span class="comment">    int temp = i;</span></span><br><span class="line"><span class="comment">    return temp;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">finally &#123;</span></span><br><span class="line"><span class="comment">    i++;</span></span><br><span class="line"><span class="comment">    System.out.println(&quot;m1的i=&quot; + i); //11</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">100</span>;<span class="comment">// 把前面确定返回值覆盖了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关于final-finalize-finally："><a href="#关于final-finalize-finally：" class="headerlink" title="关于final, finalize, finally："></a>关于final, finalize, finally：</h3><p><code>三者没有关系，final是修饰符，具体详见final关键字，finalize是方法，在JVM垃圾回收时执行，finally是异常机制中的语句块！</code></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 异常机制</title>
      <link href="/2016/08/21/java-1/"/>
      <url>/2016/08/21/java-1/</url>
      
        <content type="html"><![CDATA[<h3 id="异常机制的UML结构图："><a href="#异常机制的UML结构图：" class="headerlink" title="异常机制的UML结构图："></a>异常机制的UML结构图：</h3><p><img src="/images/javase_32.jpg" alt=""></p><h3 id="异常的分类"><a href="#异常的分类" class="headerlink" title="异常的分类"></a>异常的分类</h3><blockquote><ul><li>编译时异常：发生的几率较高，程序员能预见会发生的，举例：拿着透明袋子的100万，出门会遇到抢劫事件，那么要在出门前就处理</li><li>运行时异常：发生的几率较低，程序员不能预见，如果全部处理，程序会更加安全，但是程序员会很累，举例：出门被飞机轮子砸到</li></ul></blockquote><h3 id="处理异常"><a href="#处理异常" class="headerlink" title="处理异常"></a>处理异常</h3><h4 id="声明抛出-throws"><a href="#声明抛出-throws" class="headerlink" title="声明抛出  throws"></a>声明抛出  throws</h4><ul><li>使用throws处理异常不是真正处理异常而是推卸责任。</li><li>谁调用的就会抛给谁。</li><li><code>如果出现了异常，因为采用的是上抛，给了JVM，JVM遇到这个异常就会退出JVM，下面的代码不会执行.</code></li></ul><h4 id="捕捉-try…catch"><a href="#捕捉-try…catch" class="headerlink" title="捕捉  try…catch.."></a>捕捉  try…catch..</h4><p>语法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    可能出现异常的代码;</span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类型<span class="number">1</span> 变量)&#123;</span><br><span class="line">    处理异常的代码;</span><br><span class="line">&#125;<span class="keyword">catch</span>(异常类型<span class="number">2</span> 变量)&#123;</span><br><span class="line">    处理异常的代码;</span><br><span class="line">&#125;....</span><br></pre></td></tr></table></figure></p><ul><li><code>catch语句块可以写多个.</code></li><li><code>但是从上到下catch,必须从小类型异常到大类型异常进行捕捉。</code></li><li><code>try...catch...中最多执行1个catch语句块。执行结束之后try...catch...就结束了。</code></li></ul><p>使用try catch是真正处理异常，使用throws是推卸责任，举例：公司员工造成100万的损失，自身无法处理，所以把问题推卸给部门领导，<br>如果上一级有能力处理，则该问题被处理了，如果逐层推卸到董事长仍无法解决问题，则公司就倒闭了！</p><p>重点掌握getMessage()，和printStackTrace()</p><blockquote><p><strong>try catch 的底层实现原理：</strong><br><code>程序运行到异常时，JVM会创建异常对象，该对象应当包含异常的详细信息（类型和具体原因），并且该对象已经重写了toString方法，然后JVM将该对象的内存地址赋值给catch语句块中的e变量。</code></p></blockquote><h3 id="异常是什么？"><a href="#异常是什么？" class="headerlink" title="异常是什么？"></a>异常是什么？</h3><ul><li>异常模拟的是现实世界中“不正常的”事件。</li><li>java中采用“类”去模拟异常。</li><li>类是可以创建对象的。</li></ul><p>NullPointerException e = 0x1234;<br>e是引用类型，e中保存的内存地址指向堆中的“对象”<br>这个对象一定是NullPointerException类型。<br>这个对象就表示真实存在的异常事件。<br>NullPointerException是一类异常。</p><p>“抢劫”就是一类异常。—–&gt;类<br>“张三被抢劫”就是一个异常事件 —-&gt;对象</p><h3 id="异常机制的作用？"><a href="#异常机制的作用？" class="headerlink" title="异常机制的作用？"></a>异常机制的作用？</h3><blockquote><p>java语言为我们提供一种完善的异常处理机制，作用是：程序发生异常事件之后，为我们输出详细的信息，程序员通过这个信息，可以对程序进行一些处理，使程序更加健壮。</p></blockquote><p>以上程序编译通过了，但是运行时出现了异常，表示发生某个异常事件。<br>JVM向控制台输出如下的信息：<br><code>本质：程序执行过程中发生了算数异常这个事件，JVM为我们创建了一个ArithmeticException类型的对象。并且这个对象中包含了详细的异常信息，并且JVM将这个对象中的信息输出到控制台。</code><br>Exception in thread “main” java.lang.ArithmeticException: / by zero<br>        at ExceptionTest01.main(ExceptionTest01.java:25)</p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： TreeSet实现Comparable接口的两种方式</title>
      <link href="/2016/08/13/java-2/"/>
      <url>/2016/08/13/java-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>推荐使用第二种方式，编写比较器可以使数据类的程序耦合度降低，同时比较器也可以重复利用！</p></blockquote><h3 id="第一种方式："><a href="#第一种方式：" class="headerlink" title="第一种方式："></a>第一种方式：</h3><p>数据类实现Comparable接口，实现其中的compareTo方法<br><code>创建对象时，使用TreeSet的默认构造函数！</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">SortedSet users = <span class="keyword">new</span> TreeSet();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Comparable</span> </span>&#123;</span><br><span class="line">    <span class="comment">//String name;</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    User(<span class="keyword">int</span> age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User[age=&quot;</span>+age+<span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//实现java.lang.Comparable;接口中的compareTo方法</span></span><br><span class="line">    <span class="comment">//该方法程序员负责实现，SUN提供的程序已经调用了该方法.</span></span><br><span class="line">    <span class="comment">//需求：按照User的age排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//编写一个比较规则.</span></span><br><span class="line">        <span class="keyword">int</span> age1 = <span class="keyword">this</span>.age;</span><br><span class="line">        <span class="keyword">int</span> age2 = ((User)o).age;</span><br><span class="line">        <span class="keyword">return</span> age2-age1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="第二种方式："><a href="#第二种方式：" class="headerlink" title="第二种方式："></a>第二种方式：</h3><p>单独编写一个实现Comparator接口的比较器，实现其中的compare方法<br><code>创建对象时，使用TreeSet的构造函数传入比较器！</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SortedSet products = <span class="keyword">new</span> TreeSet(<span class="keyword">new</span> Comparator());</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span> </span>&#123;</span><br><span class="line">    <span class="comment">//需求：按照商品价格排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Object o1, Object o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> price1 = ((Product)o1).price;</span><br><span class="line">        <span class="keyword">double</span> price2 = ((Product)o2).price;</span><br><span class="line">        <span class="keyword">if</span>(price1==price2) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(price1&gt;price2) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 集合框架，数据结构</title>
      <link href="/2016/08/13/java-1/"/>
      <url>/2016/08/13/java-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Collection集合选取规则：（Vector现在用的不多了所以不考虑）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（数据唯一，无序（输入顺序））&#123;</span><br><span class="line">    <span class="keyword">if</span>（需要排序）&#123;  选用TreeSet  &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;  选用HashSet  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>（查询多）&#123;  选用ArrayList  &#125;</span><br><span class="line">    <span class="keyword">if</span>（增删多）&#123;  选用LinkedList  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果你知道是Set，但是不知道是哪个Set，就用HashSet。<br>如果你知道是List，但是不知道是哪个List，就用ArrayList。</p></blockquote><ul><li>List集合存储元素特点：<ol><li>有序(List集合中存储有下标):存进去是这样的顺序，取出来还是按照这个顺序取出。</li><li>可重复</li></ol></li><li>ArrayList集合底层默认初始化容量是 10. 扩大之后的容量是原容量的1.5倍.</li><li>Vector集合底层默认初始化容量也是10.扩大之后的容量是原容量的2倍.</li><li>HashMap和HashSet初始化容量都是 16,默认加载因子是0.75（在数组元素占75%时扩容）</li></ul><blockquote><p>如何优化ArrayList和Vector?</p><ul><li><code>尽量减少扩容操作，因为扩容需要数组拷贝。数组拷贝很耗内存。</code></li><li><code>一般推荐在创建集合的时候指定初始化容量。</code></li></ul></blockquote><ul><li>Set集合存储元素特点：无序不可重复<ul><li>get方法：<code>根据key算出hash值，再去查找相对应得分支，找到key.equals==true的那个对象的value返回（可以类比查字典！）</code></li><li>put方法：<code>根据可以算出hash值，再去相应分支，判断key.equals，全部为false则插入，否则说明已经存在该元素了，如果hash值没有分支，则再数组中新建一个链表存储新的分支。</code></li></ul></li><li>Set集合：HashSet<ol><li><code>HashSet底层实际上是一个HashMap,HashMap底层采用了哈希表数据结构。</code></li><li><code>哈希表又叫做散列表，哈希表底层是一个数组，这个数组中每一个元素是一个单向链表。每个单向链表都有一个独一无二的hash值，代表数组的下标。在某个单向链表中的每一个节点上的hash值是相等的。hash值实际上是key调用hashCode方法，在通过&quot;hash function&quot;转换成的值。</code></li><li>如何向哈希表中添加元素：<br><code>先调用被存储的key的hashCode方法，经过某个算法得出hash值，如果在这个哈希表中不存在这个hash值，则直接加入元素。如果该hash值已经存在，继续调用key之间的equals方法，如果equals方法返回false，则将该元素添加。如果equals方法返回true，则放弃添加该元素。</code></li><li><code>HashSet其实是HashMap中的key部分。HashSet有什么特点，HashMap中的key 应该具有相同的特点。</code></li></ol></li><li>SortedSet; 无序不可重复，但是存进去的元素可以按照元素大小顺序自动排列.<ul><li>SortedSet集合存储元素为什么可以自动排序？<br>因为被存储的元素实现了Comparable接口，SUN编写TreeSet集合在添加元素的时候，会调用compareTo方法完成比较.<br><img src="/images/javase_26.png" alt=""><br>Colllection集合的UML关系图：<br><img src="/images/javase_27.png" alt=""><br>Map集合的UML关系图：<br><img src="/images/javase_28.png" alt=""><br>单向链表数据结构特点（和数组比较）<br><img src="/images/javase_29.png" alt=""><br>双向链表数据结构：<br><img src="/images/javase_30.png" alt=""><br>哈希表数据结构：<br><img src="/images/javase_31.png" alt=""></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 内部类</title>
      <link href="/2016/08/09/java-2/"/>
      <url>/2016/08/09/java-2/</url>
      
        <content type="html"><![CDATA[<h3 id="关于静态内部类"><a href="#关于静态内部类" class="headerlink" title="关于静态内部类"></a>关于静态内部类</h3><ol><li>静态内部类可以等同看做静态变量 </li><li>内部类重要的作用：可以访问外部类中私有的数据。 </li><li>静态内部类可以直接访问外部类的静态数据,无法直接访问成员。</li></ol><h3 id="关于成员内部类"><a href="#关于成员内部类" class="headerlink" title="关于成员内部类"></a>关于成员内部类</h3><ol><li>成员内部类可以等同看做成员变量        </li><li>成员内部类中不能有静态声明.        </li><li>成员内部类可以访问外部类所有的数据.</li></ol><h3 id="关于局部内部类"><a href="#关于局部内部类" class="headerlink" title="关于局部内部类"></a>关于局部内部类</h3><ol><li>局部内部类等同于局部变量    </li><li>重点：局部内部类在访问局部变量的时候，局部变量必须使用final修饰。</li><li>局部内部类不能用访问控制权限修饰符修饰。</li></ol><h3 id="关于匿名内部类（常用）"><a href="#关于匿名内部类（常用）" class="headerlink" title="关于匿名内部类（常用）"></a>关于匿名内部类（常用）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    匿名内部类：指的是类没有名字.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="comment">//静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">t</span><span class="params">(CustomerService cs)</span> </span>&#123;</span><br><span class="line">        cs.logout();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//入口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用t方法</span></span><br><span class="line">        <span class="comment">//t(new CustomerServiceImpl());</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//使用匿名内部类的方式执行t方法</span></span><br><span class="line">        <span class="comment">//整个这个&quot;new CustomerService()&#123;&#125;&quot;就是个匿名内部类</span></span><br><span class="line">        t(<span class="keyword">new</span> CustomerService() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;exit!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//匿名内部类的优点：少定义一个类.</span></span><br><span class="line">        <span class="comment">//缺点：无法重复使用!</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CustomerService</span></span>&#123;</span><br><span class="line">    <span class="comment">//退出系统</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">logout</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编写一个类实现CustomerService接口</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">class CustomerServiceImpl implements CustomerService &#123;</span></span><br><span class="line"><span class="comment">    public void logout() &#123;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;系统已经安全退出！&quot;);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 正则表达式</title>
      <link href="/2016/08/09/java-1/"/>
      <url>/2016/08/09/java-1/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>汉字匹配<br><code>[\u4e00-\u9fa5]</code></li></ul></blockquote><blockquote><ul><li>邮箱 <a href="mailto:abc@yahoo.com">abc@yahoo.com</a>  <a href="mailto:abc_adf@yahoo.com.cn">abc_adf@yahoo.com.cn</a><br><code>\w*@\w*\.\w*(.\w*)?</code></li></ul></blockquote><blockquote><ul><li>固定电话号码 0510-1234567 (010)-12345678<br><code>0\d&#123;2,3&#125;-\d&#123;7,8&#125;|\(0\d&#123;2,3&#125;\)-\d&#123;7,8&#125;</code></li></ul></blockquote><blockquote><ul><li>手机号码 138-1234-4567 15012345678<br><code>\d&#123;3&#125;-?\d&#123;4&#125;-?\d&#123;4&#125;</code></li></ul></blockquote><blockquote><ul><li>匹配rgb十六进制颜色值 如:白色 0xFFFFFF蓝色 0x0000FF绿色 0x00FF00<br><code>0x(\d|A|B|C|D|E|F)&#123;6&#125;</code></li></ul></blockquote><blockquote><ul><li>身份证号码 32021219910328003X<br><code>\d&#123;17&#125;(\d|X)</code></li></ul></blockquote><blockquote><ul><li>日期yyyy-mm-dd格式 1962-02-63   2016-8-9<br><code>\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;|\d&#123;4&#125;-\d-\d</code></li></ul></blockquote><blockquote><ul><li>找出网页中所有链接的正则<br><code>href=\&quot;(.+?)\&quot;</code><br>效果如下：<br><img src="/images/javase_24.png" alt=""></li></ul></blockquote><blockquote><ul><li>找出网页中所有图片网址的正则<br><code>&lt;img.*src=(.*?)[^&gt;]*?&gt;</code><br>效果如下：<br><img src="/images/javase_25.png" alt=""></li></ul></blockquote><p>教程： <a href="http://deerchao.net/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 接口</title>
      <link href="/2016/08/08/java-4/"/>
      <url>/2016/08/08/java-4/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>编程一定要面向抽象编程，这样可以使程序耦合度降低，可扩展能力增强！</li><li>接口作用：<ol><li><code>可以使项目分层，所有层都面向接口开发，开发效率提高了。</code></li><li><code>接口使代码和代码之间的耦合度降低，就像内存条和主板的关系，变得“可插拔”。可以随意切换。</code></li></ol></li><li><code>接口和抽象类都能完成某个功能，优先选择接口。</code></li><li><code>因为接口可以多实现，多继承。（如果没有这一点，那么抽象类能实现的功能比接口要多！就因为这一点，抽象类比不上接口）</code></li><li><code>并且一个类除了实现接口之外，还可以去继承其他类（保留了类的继承）。</code></li><li><code>接口在运行时也会生成class文件！</code></li><li>接口也是一种引用类型，可以等同看做类.</li></ul></blockquote><ol><li>如何定义接口，语法：<br> [修饰符] interface 接口名{}</li><li>接口中只能出现：常量、抽象方法<ul><li>常量(必须用public static final修饰)//<code>public static final是可以省略的.</code></li><li>抽象方法(接口中所有的抽象方法都是public abstract)<code>public abstract是可以省略的.</code></li></ul></li><li><code>接口其实是一个特殊的抽象类,特殊在接口是完全抽象的。</code></li><li>接口中没有构造方法,无法被实例化。</li><li>接口和接口之间可以多继承。</li><li>一个类可以实现多个接口。(这里的“实现”可以等同看做“继承”)</li><li><code>一个非抽象的类实现接口，需要将接口中所有的方法“实现/重写/覆盖”.</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 抽象类</title>
      <link href="/2016/08/08/java-3/"/>
      <url>/2016/08/08/java-3/</url>
      
        <content type="html"><![CDATA[<p>抽象类和抽象方法不能被final修饰！报错非法的组合。</p><ol><li>如何定义抽象类? class关键字前加abstract</li><li>抽象类无法被实例化</li><li>虽然抽象类没有办法实例化，但是抽象类也有构造方法，该构造方法是给子类创建对象用的。</li><li>抽象类中可以定义抽象方法.抽象方法的语法：在方法的修饰符列表中添加abstract关键字.并且抽象方法应该以“;”结束,不能带有“{}”<br>例如：public abstract void m1();</li><li><code>抽象类中不一定有抽象方法，但抽象方法必须出现在抽象类中。</code></li><li>一个非抽象的类继承抽象类，必须将抽象类中的抽象方法覆盖，实现，重写。<br><img src="/images/javase_23.jpg" alt=""></li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： Final关键字</title>
      <link href="/2016/08/08/java-2/"/>
      <url>/2016/08/08/java-2/</url>
      
        <content type="html"><![CDATA[<h3 id="final表示不可改变的含义"><a href="#final表示不可改变的含义" class="headerlink" title="final表示不可改变的含义"></a>final表示不可改变的含义</h3><ol><li>采用final 修饰的类不能被继承</li><li>采用final 修饰的方法不能被覆盖</li><li>采用final 修饰的变量不能被修改</li><li>final修饰的变量必须显示初始化<code>（该变量必须在构造方法运行结束之前赋上值，否则报错！）</code></li><li><code>如果修饰的引用，那么这个引用只能指向一个对象，也就是说这个引用不能再次赋值，但被指向的对象是可以修改的</code></li><li>构造方法不能被final 修饰</li><li>会影响JAVA类的初始化:final 定义的静态常量调用时不会执行java 的类初始化方法，也就是说不会执行static代码块等相关语句，这是由java 虚拟机规定的。我们不需要了解的很深，有个概念就可以了。</li><li><code>final修饰的成员变量一般和static联用。因为final修饰的成员变量不能改变，也就是说无论有多少对象，每个对象都会有一个值相等的成员变量，那么就没有必要把该变量放在堆中了，所以应该把该变量变为static的，从而放到方法区中！</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： Super关键字</title>
      <link href="/2016/08/08/java-1/"/>
      <url>/2016/08/08/java-1/</url>
      
        <content type="html"><![CDATA[<h2 id="Super关键字"><a href="#Super关键字" class="headerlink" title="Super关键字"></a>Super关键字</h2><blockquote><ol><li>super不是引用类型，super中存储的不是内存地址，super指向的不是父类对象.</li><li>super代表的是当前子类对象中的父类型特征。<ul><li>通过子类的构造方法去调用父类的构造方法，作用是：给当前子类对象中的父类型特征赋值。</li><li>super(…);调用了父类中的构造方法，但是并不会创建父类对象。<code>所以，java中，构造方法执行不一定创建对象！！！</code></li></ul></li><li>什么时候使用super?    <ul><li>子类和父类中都有某个数据，例如，子类和父类中都有name这个属性。</li><li>如果要再子类中访问父类中的name属性，需要使用super.</li></ul></li><li>super可以用在什么地方？<ul><li>super可以用在成员方法中.不能用在静态方法中.</li><li>super可以用在构造方法中.</li></ul></li></ol></blockquote><p><img src="/images/javase_22.jpg" alt=""></p><h3 id="super关键字用在构造方法中："><a href="#super关键字用在构造方法中：" class="headerlink" title="super关键字用在构造方法中："></a>super关键字用在构造方法中：</h3><ul><li>语法：super(实参);</li><li>作用：通过子类的构造方法去调用父类的构造方法.</li><li>语法规则：一个构造方法第一行如果没有this(…);也没有显示的去调用super(…);</li><li>系统会默认调用super();</li></ul><p><strong>注意：</strong> super(…);的调用只能放在构造方法的第一行.</p><ul><li>super(….)和this(….)不能共存。（因为this（…）也只能放在构造方法的第一行，所以两者肯定不能共存！）</li><li>通过子类的构造方法去调用父类的构造方法，作用是：给当前子类对象中的父类型特征赋值。</li><li>super(…);调用了父类中的构造方法，但是并不会创建父类对象。</li><li>在java语言中只要是创建java对象，那么Object中的无参数构造方法一定会执行。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 上下转型和多态</title>
      <link href="/2016/08/07/java-3/"/>
      <url>/2016/08/07/java-3/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li><code>静态绑定：程序在本类和父类中查找匹配的方法执行</code></li><li><code>动态绑定：程序根据引用指向的堆中数据查找最合适的方法执行，如找不到再返回父类中查找</code></li></ul></blockquote><h3 id="关于java语言中向上转型和向下转型"><a href="#关于java语言中向上转型和向下转型" class="headerlink" title="关于java语言中向上转型和向下转型"></a>关于java语言中向上转型和向下转型</h3><p>1.向上转型(upcasting) :  子—&gt;父<br>2.向下转型(downcasting) :  父—&gt;子</p><p><strong>注意：</strong> 无论是向上转型还是向下转型，两个类之间必须要有继承关系。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//向上转型又被称作：自动类型转换.</span></span><br><span class="line">        <span class="comment">//父类型的引用指向子类型对象.</span></span><br><span class="line">        <span class="comment">//程序分两个阶段：编译阶段，运行阶段。</span></span><br><span class="line">        <span class="comment">//程序编译阶段只知道a1是一个Animal类型。</span></span><br><span class="line">        <span class="comment">//程序在运行的时候堆中的实际对象是Cat类型。</span></span><br><span class="line">        Animal a1 = <span class="keyword">new</span> Cat();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//程序在编译阶段a1被编译器看做Animal类型.</span></span><br><span class="line">        <span class="comment">//所以程序在编译阶段a1引用绑定的是Animal类中的eat方法.(静态绑定)</span></span><br><span class="line">        <span class="comment">//程序在运行的时候堆中的对象实际上是Cat类型，而Cat已经重写了eat方法。</span></span><br><span class="line">        <span class="comment">//所以程序在运行阶段对象的绑定的方法是Cat中的eat方法.(动态绑定)</span></span><br><span class="line">        a1.eat(); <span class="comment">//猫吃鱼</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//向下转型：强制类型转换</span></span><br><span class="line">        Animal a2 = <span class="keyword">new</span> Cat(); <span class="comment">//向上转型.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//要执行move方法,怎么做？</span></span><br><span class="line">        <span class="comment">//只能强制类型转换,需要加强制类型转换符</span></span><br><span class="line">        Cat c1 = (Cat)a2;</span><br><span class="line">        </span><br><span class="line">        c1.move();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//判断以下程序运行的时候会出什么问题？</span></span><br><span class="line">        <span class="comment">//Animal a3 = new Dog(); //向上转型.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//强制类型转换</span></span><br><span class="line">        <span class="comment">//Cat c2 = (Cat)a3; // java.lang.ClassCastException</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//在做强制类型转换的时候程序是存在风险的！</span></span><br><span class="line">        <span class="comment">//为了避免ClassCastException的发生，java引入了 instanceof</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            用法：</span></span><br><span class="line"><span class="comment">                1. instanceof运算符的运算结果是 boolean类型 </span></span><br><span class="line"><span class="comment">                2. (引用 instanceof 类型) --&gt; true/false</span></span><br><span class="line"><span class="comment">                </span></span><br><span class="line"><span class="comment">                例如：(a instanceof Cat) 如果结果是true表示：a引用指向堆中的java对象是Cat类型.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        Animal a3 = <span class="keyword">new</span> Dog();</span><br><span class="line">        </span><br><span class="line">        System.out.println(a3 <span class="keyword">instanceof</span> Cat); <span class="comment">//false</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//推荐：在做向下转型的时候要使用instanceof运算符判断，避免ClassCastException</span></span><br><span class="line">        <span class="keyword">if</span>(a3 <span class="keyword">instanceof</span> Cat) &#123;</span><br><span class="line">            Cat c2 = (Cat)a3;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>其实就是多种状态，overload （重载）是多态的一种，属于编译期绑定，也就是静态绑定（前期绑定） ，override 是运行期间绑定（后期绑定） 。<br>多态存在的条件：</p><ul><li>有继承</li><li>有覆盖</li><li>父类指向子类的引用</li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 类的继承和方法的覆盖</title>
      <link href="/2016/08/07/java-2/"/>
      <url>/2016/08/07/java-2/</url>
      
        <content type="html"><![CDATA[<h3 id="关于继承"><a href="#关于继承" class="headerlink" title="关于继承"></a>关于继承</h3><p>引入类继承最基本的作用是：代码重用。<br>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[修饰符列表] class 子类名 extends 父类名&#123;</span><br><span class="line">类体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>父类，超类,基类，superclass</li><li>子类，派生类，subclass</li><li>没有显示继承其他类，默认继承SUN提供的java.lang.Object;java语言中，</li><li>类和类之间只支持单继承。            </li><li><code>java语言中子类继承父类，会将父类中所有的数据全部继承，包括私有的也能继承过来。</code></li><li><code>但是在子类中无法直接访问父类中的私有的数据。但是可以间接访问.</code></li><li>注意：构造方法无法被子类继承。</li></ul><h3 id="关于方法的覆盖"><a href="#关于方法的覆盖" class="headerlink" title="关于方法的覆盖"></a>关于方法的覆盖</h3><p>方法覆盖，方法的重写，Overwrite,Override</p><ol><li>什么时候方法要进行重写？的<br> 如果父类中的方法已经无法满足当前子类的业务需求，需要将父类中的方法进行重新写一遍。</li><li>子类如果重写父类中的方法之后，子类对象一定调用的是重写之后的方法。</li><li>发生方法覆盖的条件：<ul><li><code>发生在具有继承关系的两个类之间</code></li><li><code>必须具有相同的方法名，相同的返回值类型，相同的参数列表.</code></li><li><code>重写的方法不能比被重写的方法拥有更小的访问权限。</code></li><li><code>子类方法不能抛出比父类方法更多的异常，但可以抛出父类方法异常的子异常</code></li><li><code>私有的方法不能被覆盖。(多态之后讲)</code>        </li><li><code>构造方法无法被覆盖。因为构造方法无法被继承。</code>        </li><li><code>静态的方法不存在覆盖。(多态之后讲) 静态方法不存在覆盖，因为静态方法执行和对象无关。</code></li><li><code>覆盖指的是成员方法，和成员变量无关。</code></li></ul></li><li>继承最基本的作用：代码重用。 继承最重要的作用：方法可以重写。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 单例模式</title>
      <link href="/2016/08/07/java-1/"/>
      <url>/2016/08/07/java-1/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>单例模式要领：<ol><li><code>构造方法私有化</code></li><li><code>对外提供一个公开的静态的获取当前类型对象的方法.</code></li><li><code>提供一个当前类型的静态变量。</code></li></ol></li><li>单例模式分为两种：<ul><li><code>饿汉式单例：在类加载阶段就创建了对象。</code></li><li><code>懒汉式单例：用到对象的时候才会创建对象。</code></li></ul></li><li>为了解决什么问题？<ol><li>为了保证JVM中某一个类型的java对象永远只有一个。    </li><li>为了节省内存的开销。</li></ol></li><li>缺点：单例模式的类无法被继承！</li></ul></blockquote><h3 id="饿汉式（线程安全）"><a href="#饿汉式（线程安全）" class="headerlink" title="饿汉式（线程安全）"></a>饿汉式（线程安全）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getUniqueInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="懒汉式（线程不安全，延迟加载）"><a href="#懒汉式（线程不安全，延迟加载）" class="headerlink" title="懒汉式（线程不安全，延迟加载）"></a>懒汉式（线程不安全，延迟加载）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getUniqueInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (uniqueInstance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="懒汉式（线程安全，延迟加载）"><a href="#懒汉式（线程安全，延迟加载）" class="headerlink" title="懒汉式（线程安全，延迟加载）"></a>懒汉式（线程安全，延迟加载）</h3><ul><li>在方法上加锁，会影响性能</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getUniqueInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (uniqueInstance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="双重校验锁（线程安全，延迟加载）"><a href="#双重校验锁（线程安全，延迟加载）" class="headerlink" title="双重校验锁（线程安全，延迟加载）"></a>双重校验锁（线程安全，延迟加载）</h3><ul><li>只对实例化的语句加锁</li><li>可能有多个线程进入外层if，所以在同步代码块里面再加一个锁防止多次实例化</li><li>volatile关键字禁止JVM的指令重排</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> Singleton uniqueInstance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getUniqueInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (uniqueInstance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (uniqueInstance == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态内部类实现（线程安全，延迟加载）"><a href="#静态内部类实现（线程安全，延迟加载）" class="headerlink" title="静态内部类实现（线程安全，延迟加载）"></a>静态内部类实现（线程安全，延迟加载）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getUniqueInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SingletonHolder.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="枚举实现（最佳实现）"><a href="#枚举实现（最佳实现）" class="headerlink" title="枚举实现（最佳实现）"></a>枚举实现（最佳实现）</h3><ul><li>防止反射攻击</li><li>确保复杂序列化只创建一个实例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    uniqueInstance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
            <tag> 代码块 </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 代码块：排序算法</title>
      <link href="/2016/08/06/java-2/"/>
      <url>/2016/08/06/java-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 冒泡排序arr数组，sequence为true时，为升序排序；sequence为false时，为降序排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">boolean</span> sequence)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; arr.length - i - <span class="number">1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(sequence &amp;&amp; arr[j] &gt; arr[j + <span class="number">1</span>] ||</span><br><span class="line">                    !sequence &amp;&amp; arr[j] &lt; arr[j + <span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;第&quot;</span>+(i + <span class="number">1</span>)+<span class="string">&quot;轮：&quot;</span>);</span><br><span class="line">        printArray(arr);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;排序后&quot;</span>);</span><br><span class="line">    printArray(arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 选择排序arr数组，sequence为true时，为升序排序；sequence为false时，为降序排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">boolean</span> sequence)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;arr.length - <span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> min = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>;j &lt;arr.length;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(sequence &amp;&amp; arr[j] &lt; arr[min] ||</span><br><span class="line">                    !sequence &amp;&amp; arr[j] &gt; arr[min])&#123;</span><br><span class="line">                min = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(min != i)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">            arr[i] = arr[min];</span><br><span class="line">            arr[min] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printArray(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
            <tag> 代码块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 代码块：最大公约数，最小公倍数</title>
      <link href="/2016/08/06/java-1/"/>
      <url>/2016/08/06/java-1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获得2数的最大公约数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getGCD</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = y &lt; x ? y : x;</span><br><span class="line">    <span class="keyword">int</span> b = x &gt;= y ? x : y;</span><br><span class="line">    <span class="keyword">int</span> c = <span class="number">1</span>, e; <span class="comment">// 定义c为最大公约数，d为最小公倍数，e为中间变量</span></span><br><span class="line">    <span class="keyword">while</span> (b % a != <span class="number">0</span>) &#123;</span><br><span class="line">        e = b % a;</span><br><span class="line">        <span class="keyword">if</span> (e &gt; a) &#123;</span><br><span class="line">            b = e;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            b = a;</span><br><span class="line">            a = e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    c = a;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获得2数的最小公倍数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLCM</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x * y / getGCD(x, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
            <tag> 代码块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： UML， 组合和聚合、关联和依赖</title>
      <link href="/2016/08/02/java-1/"/>
      <url>/2016/08/02/java-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p><del>类A的属性是另一个类B，那么这两个类是关联的，但不一定是聚合，如果在A类中创建了B类的实例（使用new！），那么B类和A类就是聚合关系，但不一定是组合关系，因为不一定在A类创建的同时去创建B类的实例，反之则B类和A类就是组合关系了！</del><br><code>关于判断两者关系，具体问题具体分析，最主要还是要看生命周期！</code></p><p>聚合：表示两个对象之间是整体和部分的弱关系，部分的生命周期可以超越整体。如电脑和鼠标。</p><p>组合：表示两个对象之间是整体和部分的强关系，部分的生命周期不能超越整体，或者说不能脱离整体而存在。组合关系的“部分”，是不能在整体之间进行共享的。</p><p>不过，如果你要说，眼睛可以移植，是不是说可以脱离人而存在，它们就不是组合关系了？其实，UML中对象的关系都是在相应的软件环境或实际场景下定义的，这里区别聚合和组合的关系，关键还是在于它们之中整体和部分的关系强、弱，以及它们之间的依附关系。如果刚才说眼睛可以移植给别人，那你也可以把它认为是聚合，这都要结合实际场景来说明。</p><p>另外两个比较重要的关系是关联和依赖：<br>关联：简单的可以认为，如果一个类作为了另外一个类的属性，那一定是关联关系。但你要知道，<code>聚合是一种特殊的关联，而组合又是一种特殊的聚合。</code>一般的关联我们认为是平级的、无整体部分关系的，如朋友关系。</p><p>依赖：对象之间的临时关系，临时性体现在不超越方法的周期。简单的说，在方法使用到的，如参数类，就一定是依赖关系。</p><p><strong>is a 关系</strong>，那么它是一个集成关系；比如：我 is a 人；再比如菱形、圆形和方形都是形状的一种，那么他们都应该从形状类继承而不是聚合。</p><p><strong>has a关系</strong>，那么它是一个聚合关系；比如：我 has a 头；再比如电脑是由显示器、CPU、硬盘等组成的，那么你应该把显示器、CPU、硬盘这些类聚合成电脑类，而不是从电脑类继承。</p><p>聚合和组合都属于关联，很难区分，但是只要记住一点，区分它们就容易多了：</p><p><code>处于聚合关系的两个类生命周期不同步，则是聚合关系；处于组合关系的两个类的生命周期同步；</code></p><p><code>eg：聚合关系,当A创建的时候，B不一定创建；当A消亡时，B不一定消亡。class A&#123;   private  B;&#125;class B&#123;....&#125;</code></p><p><code>组合关系，当创建一个A对象时，也会创建一个B对象；当A对象消亡时，作为A的属性的B对象也会消亡。class A&#123;private B b=new B();....&#125;class B&#123;....&#125;</code></p></blockquote><p>在UML类图中，常见的有以下几种关系: 泛化（Generalization）,  实现（Realization）, 关联（Association), 聚合（Aggregation）, 组合(Composition), 依赖(Dependency)</p><ol><li><p>泛化（Generalization）<br>【泛化关系】：是一种继承关系, 表示一般与特殊的关系, 它指定了子类如何特化父类的所有特征和行为. 例如：老虎是动物的一种, 即有老虎的特性也有动物的共性.<br>【箭头指向】：带三角箭头的实线，箭头指向父类<br><img src="/images/javase_14.jpg" alt=""></p></li><li><p>实现（Realization）<br>【实现关系】：是一种类与接口的关系, 表示类是接口所有特征和行为的实现.<br>【箭头指向】：带三角箭头的虚线，箭头指向接口<br><img src="/images/javase_15.jpg" alt=""></p></li><li><p>关联（Association)<br>【关联关系】：是一种拥有的关系, 它使一个类知道另一个类的属性和方法；如：老师与学生，丈夫与妻子<br>关联可以是双向的，也可以是单向的。双向的关联可以有两个箭头或者没有箭头，单向的关联有一个箭头。<br>【代码体现】：成员变量<br>【箭头及指向】：带普通箭头的实心线，指向被拥有者<br><img src="/images/javase_16.jpg" alt=""><br>上图中，老师与学生是双向关联，老师有多名学生，学生也可能有多名老师。但学生与某课程间的关系为单向关联，一名学生可能要上多门课程，课程是个抽象的东西他不拥有学生。<br><img src="/images/javase_17.jpg" alt=""><br>上图为自身关联：</p></li><li><p>聚合（Aggregation）<br>【聚合关系】：是整体与部分的关系, 且部分可以离开整体而单独存在. 如车和轮胎是整体和部分的关系, 轮胎离开车仍然可以存在.<br>聚合关系是关联关系的一种，是强的关联关系；关联和聚合在语法上无法区分，必须考察具体的逻辑关系。<br>【代码体现】：成员变量<br>【箭头及指向】：带空心菱形的实心线，菱形指向整体<br><img src="/images/javase_18.jpg" alt=""></p></li><li><p>组合(Composition)<br>【组合关系】：是整体与部分的关系, 但部分不能离开整体而单独存在. 如公司和部门是整体和部分的关系, 没有公司就不存在部门.<br>组合关系是关联关系的一种，是比聚合关系还要强的关系，它要求普通的聚合关系中代表整体的对象负责代表部分的对象的生命周期<br>【代码体现】：成员变量<br>【箭头及指向】：带实心菱形的实线，菱形指向整体<br><img src="/images/javase_19.jpg" alt=""></p></li><li><p>依赖(Dependency)<br>【依赖关系】：是一种使用的关系,  即一个类的实现需要另一个类的协助, 所以要尽量不使用双向的互相依赖.<br>【代码表现】：局部变量、方法的参数或者对静态方法的调用<br>【箭头及指向】：带箭头的虚线，指向被使用者<br><img src="/images/javase_20.jpg" alt=""></p></li></ol><p>各种关系的强弱顺序：<br><code>泛化 = 实现 &gt; 组合 &gt; 聚合 &gt; 关联 &gt; 依赖</code><br>下面这张UML图，比较形象地展示了各种类图关系：<br><img src="/images/javase_21.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： this关键字</title>
      <link href="/2016/07/31/java-2/"/>
      <url>/2016/07/31/java-2/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>this用在所有方法中：用来区分局部变量和成员变量的名字二义性！<ul><li>如：在set方法中这样写：name = name; 则java会遵循“谁近谁优先”的规则，会给局部变量赋值！</li><li>因为所有的成员（方法或引用）按规范应使用“引用.”来访问，那么在成员方法中，要访问成员变量就应使用this来做引用！（this.可以省略）</li><li>this用在成员方法中，哪个对象去调用这个方法，this就代表这个对象。</li><li>this不能用在静态方法中，因为静态方法的调用不需要对象，使用类名.访问，那么没有对象的存在，无法使用this来指代当前对象！</li></ul></li><li>this用在构造方法中：<ul><li>语法：this(实参);</li><li>通过一个构造方法去调用另一个构造方法。</li><li>目的：代码重用。</li><li>this(实参)必须出现在构造方法的第一行。</li></ul></li></ul></blockquote><h3 id="this-关键字"><a href="#this-关键字" class="headerlink" title="this 关键字"></a>this 关键字</h3><p>this 关键字指的是当前调用的对象，如果有 100 个对象，将有 100 个 this 对象指向各个对象<br>this 关键字可以使用在：</p><ul><li>当局部变量和成员变量重名的时候可以使用 this 指定调用成员变量</li><li>通过 this 调用另一个构造方法<br><img src="/images/javase_13.jpg" alt=""><br>如上图：this指向自身的对象！</li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： java内存的主要划分</title>
      <link href="/2016/07/31/java-1/"/>
      <url>/2016/07/31/java-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>java内存的主要划分：class文件加载到方法区，方法区还存放静态变量和常量，方法区开始执行程序，当调用方法时，会将该方法的栈帧压到栈区，该栈帧中存放局部变量，当方法中new出一个对象，则会在堆中开辟空间存放，使用完后由垃圾收集器回收，垃圾收集器就是针对堆区。堆中的对象何时被回收：当堆中的对象没有更多的引用指向它，则该对象变成了垃圾，等待回收!</p></blockquote><p>深入java虚拟机第二版，重点看第五章<br><img src="/images/javase_12.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 面向对象基础</title>
      <link href="/2016/07/30/java-1/"/>
      <url>/2016/07/30/java-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关于系统默认值：</p><ul><li>基本数据类型<ul><li>byte,short,int,long   0</li><li>float,double  0.0</li><li>boolean false</li><li>char     \u0000</li></ul></li><li>引用数据类型：null</li></ul></blockquote><blockquote><p>面向过程与面向对象的区别（盖饭、蛋炒饭）</p><ul><li>炒饭对应为面向过程，蛋和饭混为一个整体，当客户需求改变时，如客户想吃别的炒饭，则要把所有饭全部挑出来，对应程序中要修改各个模块的各个方法；</li><li>而盖饭对应面向对象，当客户需求改变时，只需要把盖的东西换成客户想要的即可，两个对象耦合度很低，只通过盖这个动作协作起来。</li></ul></blockquote><blockquote><p>为什么会出现面向对象分析方法？<br>因为现实世界太复杂多变，面向过程的分析方法无法满足</p></blockquote><blockquote><p>面向过程？<br>采用面向过程必须了解整个过程， 每个步骤都有因果关系， 每个因果关系都构成了一个步骤，多个步骤就构成了一个系统， 因为存在因果关系每个步骤很难分离， 非常紧密， 当任何一步骤出现问题，将会影响到所有的系统。如：采用面向过程生产电脑，那么他不会分 CPU 、主板和硬盘，它会按照电脑的工作流程一次成型。</p></blockquote><blockquote><p>面向对象？<br>面向对象对会将现实世界分割成不同的单元（对象） ，实现各个对象，如果完成某个功能，只需要将各个对象协作起来就可以。</p></blockquote><blockquote><p>面向对象的三大特性</p><ol><li>封装</li><li>继承</li><li>多态</li></ol></blockquote><h3 id="类与对象的概念"><a href="#类与对象的概念" class="headerlink" title="类与对象的概念"></a>类与对象的概念</h3><p>类是对具有共性事物的抽象描述，是在概念上的一个定义，那么如何发现类呢?<br>通常根据名词(概念) 来发现类，如在成绩管理系统中：学生、班级、课程、成绩<br>学生—张三<br>班级—622<br>课程—J2SE<br>成绩—张三成绩<br>以上“张三” 、 “622” 、 “J2SE”和“张三的成绩”他们是具体存在的，称为对象，也叫实例<br>也就是说一个类的具体化（实例化） ，就是对象或实例<br>为什么面向对象成为主流技术， 主要就是因为更符合人的思维模式， 更容易的分析现实世界，<br>所以在程序设计中也采用了面向对象的技术， 从软件的开发的生命周期来看， 基于面向对象<br>可以分为三个阶段：</p><ol><li>OOA（面向对象的分析）</li><li>OOD（面向对象的设计）</li><li>OOP（面向对象的编程）—–Java 就是一个纯面向对象的语言<br><img src="/images/javase_10.jpg" alt=""></li></ol><p>通过以上分析，大家应该了解：<br><code>类=属性+方法</code><br><code>属性来源于类的状态，而方法来源于动作</code><br>以上模型完全可以使用面向对象的语言，如 Java 来实现</p><p>对象的存储方式：<br>    对象存储在堆中，所以我们定义的stu1只能称为引用，不能称为对象！<br><img src="/images/javase_11.jpg" alt=""></p><blockquote><p>局部变量和成员变量：<br>以上属性称为成员变量，局部变量是在方法中定义的变量，方法的参数，方法的返回值， 局部变量使用前必须初始化，而成员变量会默认初始化，初始化的值名为该类型的默认值<br>一个类可以创建 N 个对象，成员变量只属于当前的对象（只属于对象，不属于类） ，只有通过对象才可以访问成员变量，通过类不能直接访问成员变量！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 构造器（构造方法/构造函数）</title>
      <link href="/2016/07/29/java-1/"/>
      <url>/2016/07/29/java-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>构造方法的作用是</p><ul><li>创建对象</li><li>给成员变量赋值(初始化成员变量)，因为成员变量是对象级别的，所以成员变量只有在构造方法调用时才被赋值（或者用系统默认赋值，或者用用户自己给的实参的值赋值）！！！</li></ul></blockquote><h3 id="构造函数（构造方法，构造器，Constructor）"><a href="#构造函数（构造方法，构造器，Constructor）" class="headerlink" title="构造函数（构造方法，构造器，Constructor）"></a>构造函数（构造方法，构造器，Constructor）</h3><blockquote><p>构造方法主要用来创建类的实例化对象， 可以完成创建实例化对象的初始化工作， 声明格式：<br>构造方法修饰词列表 类名（方法参数列表）<br>构造方法修饰词列表：public 、proteced、private<br>类的构造方法和普通方法一样可以进行重载</p></blockquote><p>构造方法具有的特点：</p><ul><li>构造方法名称必须与类名一致</li><li>构造方法不具有任何返回值类型，即没有返回值，关键字 void 也不能加入，加入后就不是构造方法了，就成了普通的方法了</li><li>任何类都有构造方法，如果没有显示的定义，则系统会为该类定义一个默认的构造器，这个构造器不含任何参数，如果显示的定义了构造器，系统就不会创建默认的不含参数的构造器了。</li></ul><ol><li>构造方法语法：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[修饰符列表] 构造方法名(形式参数列表)&#123;</span><br><span class="line">    方法体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>构造方法的方法名必须和类名一致</li><li>构造方法的作用是什么？<ul><li>第一,创建对象</li><li>第二,给成员变量赋值(初始化成员变量)</li></ul></li><li>构造方法应该如何调用？<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new 构造方法名(实参); 在堆中开辟空间存储对象</span><br></pre></td></tr></table></figure></li><li>如果一个类没有提供任何构造方法，系统默认提供无参数构造方法.<br>如果一个类已经手动的提供了构造方法，那么系统不会再提供任何构造方法。</li><li>成员变量到底什么时候赋值？<br>只有在调用构造方法的时候，才会给成员变量赋值。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： static关键字（静态和成员）</title>
      <link href="/2016/07/28/java-2/"/>
      <url>/2016/07/28/java-2/</url>
      
        <content type="html"><![CDATA[<ul><li>成员是对象级别的，访问成员必须用“引用.”，如果用“类名.”访问会报错!</li><li>静态是类级别的，访问静态必须用类“类名.”，<code>如果用“引用.”也能访问，但是底层仍使用“类名.”</code>，并不会用到对象，如果用空引用访问静态，也不会报错，因为静态访问与对象无关！</li><li>何时使用静态:一般情况下工具类中的方法大部分都是静态方法!</li><li>静态方法中无法访问非静态变量。<blockquote><p><code>如果用空引用访问成员则会发生空指针异常！</code></p></blockquote></li></ul><h3 id="静态变量和成员变量"><a href="#静态变量和成员变量" class="headerlink" title="静态变量和成员变量"></a>静态变量和成员变量</h3><p>解释静态变量诞生的：<br>如下程序在堆栈中的结构如图，那么每个animal对象中都有一个属性“陆生”，那么将会造成内存空间的浪费，所以可以定义静态变量！<br><img src="/images/javase_8.jpg" alt=""></p><p>如下图，已定义static变量，该变量存放在方法区，属于类级别，所以用类名点访问！<br><img src="/images/javase_9.jpg" alt=""></p><p>什么时候变量声明成静态变量？<br>如果这个属性所有的对象都有，并且这个属性的值是相同的，则该属性声明成静态的属性。</p><p>成员变量：创建java对象的时候初始化。一般用getter和setter方法访问和修改！<br>静态变量：在类加载阶段赋值，并且只赋值一次。一般用类名点访问。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticTest04</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Animal a1 = <span class="keyword">new</span> Animal(<span class="string">&quot;AAA&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        Animal a2 = <span class="keyword">new</span> Animal(<span class="string">&quot;BBB&quot;</span>,<span class="number">11</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如何访问(类名.)</span></span><br><span class="line">        System.out.println(Animal.type);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//也可以使用 引用.   此时实质上并没有用到该引用</span></span><br><span class="line">        System.out.println(a1.type);</span><br><span class="line">        </span><br><span class="line">        Animal a3 = <span class="keyword">null</span>;</span><br><span class="line">        System.out.println(a3.type); <span class="comment">//静态变量底层访问的时候一定使用的  类名. 和对象无关，不会出现空指针异常。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象现实世界中的“陆生”动物</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;   <span class="comment">//Field</span></span><br><span class="line">    <span class="comment">//成员变量(一个对象一份.)</span></span><br><span class="line">    <span class="comment">//成员变量在创建对象的时候初始化，并且存储在堆中的每一个对象中。</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//静态变量，被存储在方法区.</span></span><br><span class="line">    <span class="comment">//所有的java对象共享这一份。</span></span><br><span class="line">    <span class="comment">//所以静态变量是类级别的，使用“类名.”的方式访问.</span></span><br><span class="line">    <span class="keyword">static</span> String type = <span class="string">&quot;陆生&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Constructor</span></span><br><span class="line">    Animal(String name,<span class="keyword">int</span> age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态方法和成员方法"><a href="#静态方法和成员方法" class="headerlink" title="静态方法和成员方法"></a>静态方法和成员方法</h3><ul><li>static修饰的方法叫做静态方法</li><li>一般情况下工具类中的方法大部分都是静态方法。</li><li>静态方法不用创建对象也能直接访问该方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticTest03</span></span>&#123;</span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="comment">//成员方法必须使用“引用.”调用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//静态方法</span></span><br><span class="line">    <span class="comment">//可以使用“类名.”方式调用.也可以用“引用.”，即使用的是“引用.”，底层还是用的“类名.”</span></span><br><span class="line">    <span class="comment">//静态方法中不能直接访问非静态数据.</span></span><br><span class="line">    <span class="comment">//静态方法中不能使用this</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;m2....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//入口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    StaticTest03 st = <span class="keyword">new</span> StaticTest03();</span><br><span class="line">    st.m1();</span><br><span class="line">    m2();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//静态的方法按照正规的方式访问：“类名.”</span></span><br><span class="line">    <span class="comment">//静态的方法也能用“引用.”访问</span></span><br><span class="line">    st.m2(); <span class="comment">//编译阶段检查出st是StaticTest03类型，编译通过，运行的时候，仍然使用 &quot;StaticTest03.&quot;的方式访问。</span></span><br><span class="line">    <span class="comment">//该方法执行不需要对象。</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//空的引用去访问成员的时候会出现空指针异常。</span></span><br><span class="line">    <span class="comment">//m2方法不是“成员”而是静态的。</span></span><br><span class="line">    <span class="comment">//所以即使引用是空的，也不会报空指针异常。</span></span><br><span class="line">    StaticTest03 s = <span class="keyword">null</span>;</span><br><span class="line">    s.m2(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态语句块和实例语句块"><a href="#静态语句块和实例语句块" class="headerlink" title="静态语句块和实例语句块"></a>静态语句块和实例语句块</h3><ul><li>静态语句块：<ul><li>在类加载阶段执行，并且只执行一次，并且是自上而下的顺序执行。</li></ul></li><li>实例语句块：<ul><li>每一次调用构造方法之前会执行一次。</li><li>实例语句块执行顺序也是自上而下。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticTest02</span></span>&#123;</span><br><span class="line">    <span class="comment">//静态语句块</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//实例语句块</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    StaticTest02()&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;StaticTest02无参数的构造执行！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//入口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//调用构造方法</span></span><br><span class="line">        <span class="keyword">new</span> StaticTest02();</span><br><span class="line">        <span class="keyword">new</span> StaticTest02();</span><br><span class="line">        <span class="keyword">new</span> StaticTest02();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： Spring构造注入还是设置注入</title>
      <link href="/2016/07/28/java-1/"/>
      <url>/2016/07/28/java-1/</url>
      
        <content type="html"><![CDATA[<h3 id="构造方法注入代码如下："><a href="#构造方法注入代码如下：" class="headerlink" title="构造方法注入代码如下："></a>构造方法注入代码如下：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserManagerImpl</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="set注入代码如下："><a href="#set注入代码如下：" class="headerlink" title="set注入代码如下："></a>set注入代码如下：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="构造方法注入与set注入的区别："><a href="#构造方法注入与set注入的区别：" class="headerlink" title="构造方法注入与set注入的区别："></a>构造方法注入与set注入的区别：</h3><ul><li>构造方法注入的方式，在new UserManagerImpl对象的同时，就把userDao对象传给UserManagerImpl这个正在new的对象，它的时机比较早。</li><li>构造方法注入: 先把UserManagerImpl创建好以后，再调用set方法。</li></ul><h3 id="使用构造方法注入的理由："><a href="#使用构造方法注入的理由：" class="headerlink" title="使用构造方法注入的理由："></a>使用构造方法注入的理由：</h3><ul><li>构造方法注入使用强依赖规定，如果不给足够的参数，对象则无法创建。</li><li>由于Bean的依赖都通过构造方法设置了，那么就不用写更多的set方法，有助于减少代码量。<h3 id="使用set注入的理由："><a href="#使用set注入的理由：" class="headerlink" title="使用set注入的理由："></a>使用set注入的理由：</h3></li><li>如果Bean有很多的依赖，那么构造方法的参数列表会变的很长。</li><li>如果一个对象有多种构造方法，构造方法会造成代码量增加。</li><li>如果构造方法中有两个以上的参数类型相同，那么将很难确定参数的用途。</li><li>……<br>Spring官方更推荐使用set注入。</li></ul><h3 id="下面对spring依赖注入的两种方式进行一些介绍和比对。"><a href="#下面对spring依赖注入的两种方式进行一些介绍和比对。" class="headerlink" title="下面对spring依赖注入的两种方式进行一些介绍和比对。"></a>下面对spring依赖注入的两种方式进行一些介绍和比对。</h3><p>Spring依赖注入的两种方式是：<br>     3.1.设置注入；<br>     3.2 .构造注入；</p><h4 id="spring依赖注入之设置注入的优点："><a href="#spring依赖注入之设置注入的优点：" class="headerlink" title="spring依赖注入之设置注入的优点："></a>spring依赖注入之设置注入的优点：</h4><p>与传统的JavaBean的写法更相似，程序员更容易理解、接受，通过setter方式设定依赖关系显得更加直观、明显；<br>对于复杂的依赖关系，如果采用构造注入，会导致构造器过于臃肿，难以阅读。Spring在创建Bean实例时，需要同时实例化其依赖的全部实例，因而导致死你功能下降。而使用设置注入，则避免这下问题；<br>尤其在某些属性可选的情况下，多参数的构造器更加笨拙。</p><h4 id="spring依赖注入之构造注入的优点："><a href="#spring依赖注入之构造注入的优点：" class="headerlink" title="spring依赖注入之构造注入的优点："></a>spring依赖注入之构造注入的优点：</h4><p>构造注入可以再构造器中决定依赖关系的注入顺序，优先依赖的优先注入。<br>对于依赖关系无须变化的Bean，构造注入更有用处；因为没有setter方法，所有的依赖关系全部在构造器内设定，因此，不用担心后续代码对依赖关系的破坏。<br>依赖关系只能在构造器中设定，则只有组件的创建者才能改变组件的依赖关系。对组件的调用者而言，组件内部的依赖关系完全透明，更符合高内聚的原则；<br>建议采用以设置注入为主，构造注入为辅的注入策略。对于依赖关系无须变化的注入，尽量采用构造注入；而其他的依赖关系的注入，则考虑采用设置注入。</p><blockquote><p><code>私有变量也叫状态，而方法叫做行为；一个类的私有变量在类外部是无法访问的，也就是无法直接修改私有变量；而构造对象的时候，有些状态是必须的，或在对象生命周期中不会修改的状态，在构造对象时对其进行初始化更方便，更安全(没有其他方法可以改变，只能在构造函数中初始化，或setXXX()都是private修饰)；有些状态是可选的，或临时的，对象在其生命周期中是可发生改变的，所以需要更改器方法(setXXX())来对其值进行修改；</code><br><code>比如说，设计一个Person类时，如果要求身份证号，姓名和性别是必需初始化的，且不会改变的；而地址，E-Mail，电话号等是可选的；你说怎么设计最好呢？</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 递归的例子：楼梯算法</title>
      <link href="/2016/07/22/java-1/"/>
      <url>/2016/07/22/java-1/</url>
      
        <content type="html"><![CDATA[<p>n层阶梯的楼梯，每次可以走1~2层阶梯，打印列举所有走法。<br>            // 比如<br>            // 走1层的可能走法 (1种)<br>            // 1<br>            // 走2层的可能走法(2种)<br>            // 1 1<br>            // 2<br>            // 走3层的可能走法(3种)<br>            // 1 1 1<br>            // 1 2<br>            // 2 1<br>            // 走4层的可能走法(5种)<br>            // 1 1 1 1<br>            // 1 1 2<br>            // 2 2<br>            // 2 1 1<br>            // 1 2 1<br>            // 走n层的走法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">step</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &lt;= n - <span class="number">2</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a.length; j++) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[j] == <span class="number">0</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    x = j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            a[x] = i;</span><br><span class="line">            step(n, a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sum == n - <span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a.length; j++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j] == <span class="number">0</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                x = j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        a[x] = <span class="number">1</span>;</span><br><span class="line">        step(n, a);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] != <span class="number">0</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(a[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>;<span class="comment">// 每次step方法执行到最后的时候，要擦除这次往a数组中赋的值！</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = a.length - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[j] != <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            x = j;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    a[x] = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 局部变量是数组，step方法根据数组的各位数总和判断是否再继续调用，当执行到最后，局部变量数组</span></span><br><span class="line">    <span class="comment">// 又变成结果输出，step方法顺利执行完，此时将执行上一层的step方法，该结果有要作为局部变量使用</span></span><br><span class="line">    <span class="comment">// 如果不改结果，程序逻辑将会出错！那么想到要在输出结果后把变量的上一次赋值擦除，那么程序能继续</span></span><br><span class="line">    <span class="comment">// 正确运行，然而当上一层的step方法执行完后，又要返回更上一层，此时没有执行到输出结果的那个分支，</span></span><br><span class="line">    <span class="comment">// 那么变量又会出错，所以经分析，应该在每一个step方法的结束处更改变量。测试成功！</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/javase_7.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 方法</title>
      <link href="/2016/07/21/java-7/"/>
      <url>/2016/07/21/java-7/</url>
      
        <content type="html"><![CDATA[<h2 id="方法-Method"><a href="#方法-Method" class="headerlink" title="方法(Method)"></a>方法(Method)</h2><p>程序中完成独立功能,可重复使用的一段代码的集合；</p><h3 id="方法格式"><a href="#方法格式" class="headerlink" title="方法格式:"></a>方法格式:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] 返回值类型 方法名称(形参1，形参2)</span><br><span class="line">&#123;</span><br><span class="line">    方法体</span><br><span class="line">    [return 值]；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="术语"><a href="#术语" class="headerlink" title="术语:"></a>术语:</h3><p>修饰符:public,static等<br>public 用来说明访问权限<br>static 是类方法还是对象方法</p><blockquote><p>如果方法使用了static参数<br>    使用 类名.方法名(参数)<br>如果方法没有static参数<br>    得使用方法所在类的对象来调用(先不讨论,面向对象)</p></blockquote><p>返回值类型 方法其实是完成一个功能,操作完成后，是否要给调用者返回一个结果。<br>如果不需要给调用者返回结果，则使用关键字void来声明。 即无返回值的意思<br>方法名称: 遵守标识符的要求，建议遵守命名规范，动词或动宾结构,首字母小写，采用驼峰命名<br>形式参数:方法圆括号中的变量，方法内部的局部变量。<br>参数列表: 参数类型+参数的个数+参数的顺序<br><code>方法签名: = 方法名称+方法参数列表。</code><br><code>在同一个类中，方法签名必须是唯一的</code><br>方法体:{}括号中的代码,表示具体完成该功能的代码<br>返回值: 在方法内部使用return关键字，给调用者返回结果，并结束当前方法<br>方法的调用者 在哪里调用了某一方法，哪里就是该方法的调用者。<br>实际参数 调用者调用一个具体方法的时候，实际传递的参数</p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： java内存模型</title>
      <link href="/2016/07/21/java-6/"/>
      <url>/2016/07/21/java-6/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/javase_1.jpg" alt=""></p><h3 id="程序计数器"><a href="#程序计数器" class="headerlink" title="程序计数器:"></a>程序计数器:</h3><p>当前线程所执行的字节码的行号指示器</p><h3 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈:"></a>本地方法栈:</h3><p>为虚拟机使用的native方法服务</p><h3 id="java虚拟机栈Stack"><a href="#java虚拟机栈Stack" class="headerlink" title="java虚拟机栈Stack:"></a>java虚拟机栈Stack:</h3><p>描述java方法执行的内存模型,每个方法被执行的时候同时创建一个栈帧用于存放局部变量、操作栈、动态链接、方法出口等信息。</p><p><code>每个方法创建一个栈帧,栈帧存放了当前方法的信息，当方法调用完毕后，该方法的栈帧就被销毁了</code></p><h3 id="Java堆"><a href="#Java堆" class="headerlink" title="Java堆:"></a>Java堆:</h3><p>被所有线程共享的一块内存区域,所有的对象实例以及数组都要在堆上分配，使用new关键字，就表示在堆上开辟一块新的存储区域</p><h3 id="方法区"><a href="#方法区" class="headerlink" title="方法区"></a>方法区</h3><p>线程共享的内存区域 存储已被虚拟机加载的类的信息、常量、静态变量即时编译器编译后的代码数据等。</p><h3 id="GC-Garbage-Collection垃圾回收器"><a href="#GC-Garbage-Collection垃圾回收器" class="headerlink" title="GC(Garbage Collection垃圾回收器)"></a>GC(Garbage Collection垃圾回收器)</h3><p>Java的自动垃圾回收机制</p><p>程序员不需要手动的控制内存的释放。当JVM发觉内存资源紧张的时候，就会自动的清理无用对象(没有应用的对象)所占用的内存空间</p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 中断流程控制语句</title>
      <link href="/2016/07/21/java-5/"/>
      <url>/2016/07/21/java-5/</url>
      
        <content type="html"><![CDATA[<h3 id="1-break"><a href="#1-break" class="headerlink" title="1. break"></a>1. break</h3><blockquote><p>break语句用于do-while while for语句时，可以是程序终止循环，而执行循环体后的语句。<br>一般和一条判断语句一起使用，条件判断为真得时候，跳出循环。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-continue"><a href="#2-continue" class="headerlink" title="2. continue"></a>2. continue</h3><blockquote><p>跳到下一次循环,continue后面的语句就不执行了<br>一般和一条判断语句一起使用，条件判断为真得时候，跳过continue后面的语句进入下一次循环。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    System.out.println(i);   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-嵌套循环"><a href="#3-嵌套循环" class="headerlink" title="3. 嵌套循环"></a>3. 嵌套循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单纯break只能跳出一层循环</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line">        System.out.print(<span class="string">&quot;i=&quot;</span>+i+<span class="string">&quot;,j=&quot;</span>+j+<span class="string">&quot;   &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 跳出2层循环的方法:使用标签</span></span><br><span class="line">a:</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">3</span>) <span class="keyword">break</span> a;<span class="comment">// 跳出标签为ll的for循环</span></span><br><span class="line">        System.out.print(<span class="string">&quot;i=&quot;</span>+i+<span class="string">&quot;,j=&quot;</span>+j+<span class="string">&quot;   &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： for循环</title>
      <link href="/2016/07/21/java-4/"/>
      <url>/2016/07/21/java-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>for循环的三个语句可以放置任何表达式，但是有个不成文的规则，for循环的3个部分应当对同一个计数器变量进行初始化，检测和更新。若不遵循这一规则，编写的循环常常晦涩难懂！<br>如果在循环第一部分声明了一个变量，那么该变量的作用域就是整个循环体，如果这个变量需要在循环结束后使用，那么需要在循环开始前的外部声明它！<br>for循环的变量和步进量如果为浮点数，可能会因为舍入的误差永远无法结束循环！</p></blockquote><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>虽然所有循环结构都可以用while或者do…while表示，但Java提供了另一种语句 —— for循环，使一些循环结构变得更加简单。</p><p>for循环执行的次数是在执行前就确定的。语法格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(初始化; 布尔表达式; 更新) </span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;代码语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>关于for循环有以下几点说明：</p><ul><li>最先执行初始化步骤。可以声明一种类型，但可初始化一个或多个循环控制变量，也可以是空语句。</li><li>然后，检测布尔表达式的值。如果为true，循环体被执行。如果为false，循环终止，开始执行循环体后面的语句。</li><li>执行一次循环后，更新循环控制变量。</li><li>再次检测布尔表达式。循环执行上面的过程。</li></ul></blockquote><p>实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> x = <span class="number">10</span>; x &lt; <span class="number">20</span>; x = x+<span class="number">1</span>) </span><br><span class="line">      &#123;</span><br><span class="line">         System.out.print(<span class="string">&quot;value of x : &quot;</span> + x );</span><br><span class="line">         System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上实例编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">value of x : 10</span><br><span class="line">value of x : 11</span><br><span class="line">value of x : 12</span><br><span class="line">value of x : 13</span><br><span class="line">value of x : 14</span><br><span class="line">value of x : 15</span><br><span class="line">value of x : 16</span><br><span class="line">value of x : 17</span><br><span class="line">value of x : 18</span><br><span class="line">value of x : 19</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： while循环和do...while循环</title>
      <link href="/2016/07/21/java-3/"/>
      <url>/2016/07/21/java-3/</url>
      
        <content type="html"><![CDATA[<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>while是最基本的循环，它的结构为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while( 布尔表达式 ) </span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;循环内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>只要布尔表达式为true，循环体会一直执行下去。</p><p>有时程序也需要死循环。</p><p>实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line">      <span class="keyword">while</span>( x &lt; <span class="number">20</span> ) </span><br><span class="line">      &#123;</span><br><span class="line">         System.out.print(<span class="string">&quot;value of x : &quot;</span> + x );</span><br><span class="line">         x++;</span><br><span class="line">         System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上实例编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">value of x : 10</span><br><span class="line">value of x : 11</span><br><span class="line">value of x : 12</span><br><span class="line">value of x : 13</span><br><span class="line">value of x : 14</span><br><span class="line">value of x : 15</span><br><span class="line">value of x : 16</span><br><span class="line">value of x : 17</span><br><span class="line">value of x : 18</span><br><span class="line">value of x : 19</span><br></pre></td></tr></table></figure></p><h3 id="do…while循环"><a href="#do…while循环" class="headerlink" title="do…while循环"></a>do…while循环</h3><p>对于while语句而言，如果不满足条件，则不能进入循环。但有时候我们需要即使不满足条件，也至少执行一次。</p><p>do…while循环和while循环相似，不同的是，do…while循环至少会执行一次。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">do &#123;</span><br><span class="line">    &#x2F;&#x2F;代码语句</span><br><span class="line">&#125;while(布尔表达式);</span><br></pre></td></tr></table></figure><br>注意：布尔表达式在循环体的后面，所以语句块在检测布尔表达式之前已经执行了。 如果布尔表达式的值为true，则语句块一直执行，直到布尔表达式的值为false。</p><p>实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">         System.out.print(<span class="string">&quot;value of x : &quot;</span> + x );</span><br><span class="line">         x++;</span><br><span class="line">         System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      &#125;<span class="keyword">while</span>( x &lt; <span class="number">20</span> );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上实例编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">value of x : 10</span><br><span class="line">value of x : 11</span><br><span class="line">value of x : 12</span><br><span class="line">value of x : 13</span><br><span class="line">value of x : 14</span><br><span class="line">value of x : 15</span><br><span class="line">value of x : 16</span><br><span class="line">value of x : 17</span><br><span class="line">value of x : 18</span><br><span class="line">value of x : 19</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： switch语句</title>
      <link href="/2016/07/21/java-2/"/>
      <url>/2016/07/21/java-2/</url>
      
        <content type="html"><![CDATA[<p>switch语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>switch语法格式如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">switch(expression)</span><br><span class="line">&#123;</span><br><span class="line">    case value :</span><br><span class="line">       &#x2F;&#x2F;语句</span><br><span class="line">       break; &#x2F;&#x2F;可选</span><br><span class="line">    case value :</span><br><span class="line">       &#x2F;&#x2F;语句</span><br><span class="line">       break; &#x2F;&#x2F;可选</span><br><span class="line">    &#x2F;&#x2F;你可以有任意数量的case语句</span><br><span class="line">    default : &#x2F;&#x2F;可选</span><br><span class="line">       &#x2F;&#x2F;语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>switch语句有如下规则：</p><ul><li>switch语句中的变量类型只能为byte、short、int或者char。<code>java8之后可以使用String</code></li><li>switch语句可以拥有多个case语句。每个case后面跟一个要比较的值和冒号。</li><li>case语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。</li><li>当变量的值与case语句的值相等时，那么case语句之后的语句开始执行，直到break语句出现才会跳出switch语句。</li><li>当遇到break语句时，switch语句终止。程序跳转到switch语句后面的语句执行。case语句不必须要包含break语句。如果没有break语句出现，程序会继续执行下一条case语句，直到出现break语句。<code>该现象称为case穿透现象，利用case穿透现象可以编写一些简洁的程序。</code></li><li>switch语句可以包含一个default分支，该分支必须是switch语句的最后一个分支。default在没有case语句的值和变量值相等的时候执行。default分支不需要break语句。<br>实例<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">      <span class="comment">//char grade = args[0].charAt(0);</span></span><br><span class="line">      <span class="keyword">char</span> grade = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">switch</span>(grade)</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span> :</span><br><span class="line">            System.out.println(<span class="string">&quot;Excellent!&quot;</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span> :</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span> :</span><br><span class="line">            System.out.println(<span class="string">&quot;Well done&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span> :</span><br><span class="line">            System.out.println(<span class="string">&quot;You passed&quot;</span>);</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;F&#x27;</span> :</span><br><span class="line">            System.out.println(<span class="string">&quot;Better try again&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">default</span> :</span><br><span class="line">            System.out.println(<span class="string">&quot;Invalid grade&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;Your grade is &quot;</span> + grade);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>以上代码编译运行结果如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Well done</span><br><span class="line">Your grade is C</span><br></pre></td></tr></table></figure></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： if语句</title>
      <link href="/2016/07/21/java-1/"/>
      <url>/2016/07/21/java-1/</url>
      
        <content type="html"><![CDATA[<h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p>一个if语句包含一个布尔表达式和一条或多条语句。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>if语句的用语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;如果布尔表达式为true将执行的语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果布尔表达式的值为true，则执行if语句中的代码块。否则执行If语句块后面的代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>( x &lt; <span class="number">20</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;这是 if 语句&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是 if 语句</span><br></pre></td></tr></table></figure></p><h3 id="if…else语句"><a href="#if…else语句" class="headerlink" title="if…else语句"></a>if…else语句</h3><p>if语句后面可以跟else语句，当if语句的布尔表达式值为false时，else语句块会被执行。</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><p>if…else的用法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;如果布尔表达式的值为true</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;如果布尔表达式的值为false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">30</span>;</span><br><span class="line">        <span class="keyword">if</span>( x &lt; <span class="number">20</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;这是 if 语句&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;这是 else 语句&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上代码编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是 else 语句</span><br></pre></td></tr></table></figure></p><h3 id="if…else-if…else语句"><a href="#if…else-if…else语句" class="headerlink" title="if…else if…else语句"></a>if…else if…else语句</h3><p>if语句后面可以跟elseif…else语句，这种语句可以检测到多种可能的情况。</p><blockquote><p>使用if，else if，else语句的时候，需要注意下面几点:</p><ul><li>if语句至多有1个else语句，else语句在所有的elseif语句之后。</li><li>If语句可以有若干个elseif语句，它们必须在else语句之前。</li><li>一旦其中一个else if语句检测为true，其他的else if以及else语句都将跳过执行。</li></ul></blockquote><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><p>if…else if… else语法格式如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式 1)</span><br><span class="line">&#123;</span><br><span class="line">     &#x2F;&#x2F;如果布尔表达式 1的值为true执行代码</span><br><span class="line">&#125;</span><br><span class="line">else if(布尔表达式 2)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;如果布尔表达式 2的值为true执行代码</span><br><span class="line">&#125;</span><br><span class="line">else if(布尔表达式 3)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;如果布尔表达式 3的值为true执行代码</span><br><span class="line">&#125;else </span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;如果以上布尔表达式都不为true执行代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">30</span>;</span><br><span class="line">        <span class="keyword">if</span>( x == <span class="number">10</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;Value of X is 10&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>( x == <span class="number">20</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;Value of X is 20&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>( x == <span class="number">30</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;Value of X is 30&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;This is else statement&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上代码编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Value of X is 30</span><br></pre></td></tr></table></figure></p><h3 id="嵌套的if…else语句"><a href="#嵌套的if…else语句" class="headerlink" title="嵌套的if…else语句"></a>嵌套的if…else语句</h3><p>使用嵌套的if-else语句是合法的。也就是说你可以在另一个if或者elseif语句中使用if或者elseif语句。</p><h4 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h4><p>嵌套的if…else语法格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式 1)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;如果布尔表达式 1的值为true执行代码</span><br><span class="line">    if(布尔表达式 2)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;如果布尔表达式 2的值为true执行代码</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>你可以像 if 语句一样嵌套 else if…else。</p><p>实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">30</span>;</span><br><span class="line">        <span class="keyword">int</span> y = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( x == <span class="number">30</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( y == <span class="number">10</span> )</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;X = 30 and Y = 10&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上代码编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X &#x3D; 30 and Y &#x3D; 10</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 用户输入</title>
      <link href="/2016/07/20/java-11/"/>
      <url>/2016/07/20/java-11/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">InputDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 创建Scanner类的对象，这个对象从控制台读取用户的输入的内容</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">// 读取整数 浮点数 布尔型</span></span><br><span class="line">        <span class="comment">// 2. 打印信息,提示一下用户准备输入什么内容</span></span><br><span class="line">        System.out.print(<span class="string">&quot;请输入一个数(1-7):&quot;</span>);</span><br><span class="line">        <span class="comment">// 3. 读取用户的输入的内容</span></span><br><span class="line">        <span class="keyword">int</span> week = sc.nextInt();<span class="comment">// nextByte() nextShot() nextLong() nextFloat() nextDouble() nextBoolean()</span></span><br><span class="line">        <span class="comment">// 4. 输出一下看看。</span></span><br><span class="line">        System.out.print(<span class="string">&quot;用户输入的是&quot;</span>+week);</span><br><span class="line">        <span class="comment">// 2. 读取字符串</span></span><br><span class="line">        System.out.print(<span class="string">&quot;请输入字符传:&quot;</span>);</span><br><span class="line">        String str = sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;输入的字符串:&quot;</span>+str);</span><br><span class="line">        <span class="keyword">char</span> c = str.charAt(<span class="number">0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;第一个字符是:&quot;</span>+c);</span><br><span class="line">        <span class="keyword">int</span> year,month,day;</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入年份:&quot;</span>);</span><br><span class="line">        year = sc.nextInt();</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入月份:&quot;</span>);</span><br><span class="line">        month = sc.nextInt();</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入日期:&quot;</span>);</span><br><span class="line">        day = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;用户输入的是&quot;</span>+year+<span class="string">&quot;-&quot;</span>+month+<span class="string">&quot;-&quot;</span>+day);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 随机数</title>
      <link href="/2016/07/20/java-10/"/>
      <url>/2016/07/20/java-10/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomDemo</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 创建一个随机数对象</span></span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">// 使用它来得到随即的值</span></span><br><span class="line">        System.out.println( r.nextBoolean() ); <span class="comment">// 得到一个随机的boolean值</span></span><br><span class="line">        System.out.println( r.nextInt() );  <span class="comment">// Int范围内的随机数</span></span><br><span class="line">        System.out.println( r.nextDouble() );<span class="comment">// 0~1 之间的随机浮点数</span></span><br><span class="line">        System.out.println( r.nextInt(<span class="number">11</span>) ); <span class="comment">// 产生0~10的随机数</span></span><br><span class="line">        <span class="comment">// 练习:</span></span><br><span class="line">        <span class="comment">//1. 产生-5~4的随机数</span></span><br><span class="line">        System.out.println( r.nextInt(<span class="number">10</span>)-<span class="number">5</span> );</span><br><span class="line">        <span class="comment">//2. 产生范围100~200的随机数  100 + 0~100</span></span><br><span class="line">        System.out.println( r.nextInt(<span class="number">101</span>)+ <span class="number">100</span>);</span><br><span class="line">        <span class="comment">//3. 产生-50 49 48 ... 38 39 40的随机数</span></span><br><span class="line">        <span class="comment">//4. 产生-5.0 -4.9 ... 3.8 3.9 4.0的随机数</span></span><br><span class="line">        System.out.println((r.nextInt(<span class="number">91</span>)-<span class="number">50</span>)/<span class="number">10.0</span>);</span><br><span class="line">        <span class="comment">// 综合练习:</span></span><br><span class="line">        <span class="comment">//1. 编写一个猜拳游戏，0 1 2让用户输入用户的出拳,电脑随机产生出拳数值。显示用户和电脑的出拳信息，并显示输赢情况</span></span><br><span class="line">        <span class="comment">//2. 使用随机数产生年份(在1000~3000范围内),月份,日期，注意日期的合理性,不要出现2016-2-31</span></span><br><span class="line">        <span class="comment">//3. 随机产生一个温度-5.0~40.0范围，然后判断温度，如果大于30度，显示“太热了，开空调!”,如果&quot;小于10度，显示&quot;太冷了，开空调&quot;,否则显示&quot;温度适宜，不开空调。&quot;</span></span><br><span class="line">        <span class="keyword">int</span> computerHand = r.nextInt(<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;电脑的出拳:&quot;</span>+computerHand);</span><br><span class="line">        <span class="comment">// 浮点数是不精确的。 </span></span><br><span class="line">        <span class="comment">// 5.0 如果显示4.99999 不要奇怪！</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 运算符的优先级</title>
      <link href="/2016/07/20/java-9/"/>
      <url>/2016/07/20/java-9/</url>
      
        <content type="html"><![CDATA[<h2 id="运算符优先级表"><a href="#运算符优先级表" class="headerlink" title="运算符优先级表"></a>运算符优先级表</h2><table><thead><tr><th>优先级</th><th>运算符</th><th>结合性</th></tr></thead><tbody><tr><td>1</td><td>()  [] .</td><td>从左到右</td></tr><tr><td>2</td><td>!  +(正)  -(负)  ~  ++  –</td><td>从右到左</td></tr><tr><td>3</td><td>*  /  %</td><td>从左到右</td></tr><tr><td>4</td><td>+(加)  -(减)</td><td>从左到右</td></tr><tr><td>5</td><td>&lt;&lt;  &gt;&gt;  &gt;&gt;&gt;</td><td>从左到右</td></tr><tr><td>6</td><td>&lt;  &lt;=  &gt;  &gt;=  instanceof</td><td>从左到右</td></tr><tr><td>7</td><td>==  !=</td><td>从左到右</td></tr><tr><td>8</td><td>&amp;(按位与)</td><td>从左到右</td></tr><tr><td>9</td><td>^</td><td>从左到右</td></tr><tr><td>10</td><td>&#124;</td><td>从左到右</td></tr><tr><td>11</td><td>&amp;&amp;</td><td>从左到右</td></tr><tr><td>12</td><td>&#124;&#124;</td><td>从左到右</td></tr><tr><td>13</td><td>?:</td><td>从右到左</td></tr><tr><td>14</td><td>=  +=  -=  *=  /=  %=  &amp;=  &#124;=  ^=  ~=  &lt;&lt;=  &gt;&gt;=  &gt;&gt;&gt;=</td><td>从右到左</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 表达式</title>
      <link href="/2016/07/20/java-8/"/>
      <url>/2016/07/20/java-8/</url>
      
        <content type="html"><![CDATA[<p>表达式(experssion)表达式，是由数字、算符、数字分组符号（括号）、自由变量和约束变量等以<code>能求得数值的</code>有意义排列方法所得的组合。</p><p>用运算符号连接的变量/常量科称之为表达式.</p><p>如:</p><p>a+b</p><p>3.14+a</p><p>(x+y)*z+100</p><p>表达式中操作数运算的结果就是表达式的结果<br>表达式的运算顺序取决于<a href="/2016/07/20/java-9/">运算符的优先级</a></p><p>根据组成的运算符类型分类：</p><ul><li>算数表达式、关系表达式、逻辑表达式、赋值表达式、条件表达式（条件？结果1：结果2）</li><li>关系运算符 &gt; &lt;  &gt;= 关系表达式</li><li>逻辑运算符  &amp; | &amp;&amp; || ^ 逻辑表达式</li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 条件运算符</title>
      <link href="/2016/07/20/java-7/"/>
      <url>/2016/07/20/java-7/</url>
      
        <content type="html"><![CDATA[<p>条件运算符也被称为三元运算符、三目运算符。</p><p>该运算符有3个操作数，并且需要判断布尔表达式的值。该运算符的主要是决定哪个值应该赋值给变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable x &#x3D; (expression) ? value if true : value if false</span><br></pre></td></tr></table></figure><p><strong>实例:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a , b;</span><br><span class="line">        a = <span class="number">10</span>;</span><br><span class="line">        b = (a == <span class="number">1</span>) ? <span class="number">20</span>: <span class="number">30</span>;</span><br><span class="line">        System.out.println( <span class="string">&quot;Value of b is : &quot;</span> + b );</span><br><span class="line">        b = (a == <span class="number">10</span>) ? <span class="number">20</span>: <span class="number">30</span>;</span><br><span class="line">        System.out.println( <span class="string">&quot;Value of b is : &quot;</span> + b );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上实例编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Value of b is : 30</span><br><span class="line">Value of b is : 20</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 赋值运算符</title>
      <link href="/2016/07/20/java-6/"/>
      <url>/2016/07/20/java-6/</url>
      
        <content type="html"><![CDATA[<h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>下面是Java语言支持的赋值运算符：</p><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>=</td><td>简单的赋值运算符，将右操作数的值赋给左侧操作数</td><td>C = A + B将把A + B得到的值赋给C</td></tr><tr><td>+=</td><td>加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数</td><td>C += A等价于C = C + A</td></tr><tr><td>-=</td><td>减和赋值操作符，它把左操作数和右操作数相减赋值给左操作数</td><td>C -= A等价于C = C - A</td></tr><tr><td>*=</td><td>乘和赋值操作符，它把左操作数和右操作数相乘赋值给左操作数</td><td>C = A等价于C = C A</td></tr><tr><td>/=</td><td>除和赋值操作符，它把左操作数和右操作数相除赋值给左操作数</td><td>C /= A等价于C = C / A</td></tr><tr><td>%=</td><td>取模和赋值操作符，它把左操作数和右操作数取模后赋值给左操作数</td><td>C%= A等价于C = C％A</td></tr><tr><td>&lt;&lt;=</td><td>左移位赋值运算符</td><td>C &lt;&lt; = 2等价于C = C &lt;&lt; 2</td></tr><tr><td>&gt;&gt;=</td><td>右移位赋值运算符</td><td>C &gt;&gt; = 2等价于C = C &gt;&gt; 2</td></tr><tr><td>&amp;=</td><td>按位与赋值运算符</td><td>C &amp;= 2等价于C = C&amp;2</td></tr><tr><td>^=</td><td>按位异或赋值操作符</td><td>C ^= 2等价于C = C ^ 2</td></tr><tr><td>&#124;=</td><td>按位或赋值操作符</td><td>C &#124;= 2等价于C = C &#124;124 2</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 位运算符</title>
      <link href="/2016/07/20/java-5/"/>
      <url>/2016/07/20/java-5/</url>
      
        <content type="html"><![CDATA[<h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p>位运算符就是直接操作二进制位的。</p><p>Java定义了位运算符，应用于整数类型(int)，长整型(long)，短整型(short)，字符型(char)，和字节型(byte)等类型。</p><p>位运算符作用在所有的位上，并且按位运算。</p><p>假设a = 60，b = 13;它们的二进制格式表示将如下：</p><table><thead><tr><th>位运算符</th><th>木奥数</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与  </td></tr><tr><td>&#124;</td><td>按位或  </td></tr><tr><td>^</td><td>按位异或 </td></tr><tr><td>~</td><td>取反   </td></tr><tr><td>&lt;&lt;</td><td>左移   </td></tr><tr><td>&gt;&gt;</td><td>右移   </td></tr><tr><td>&gt;&gt;&gt;</td><td>无符号右移</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A &#x3D; 0011 1100 </span><br><span class="line">B &#x3D; 0000 1101</span><br><span class="line">-----------------</span><br><span class="line">A &amp; b &#x3D; 0000 1100</span><br><span class="line">A | B &#x3D; 0011 1101</span><br><span class="line">A ^ B &#x3D; 0011 0001</span><br><span class="line">~A &#x3D; 1100 0011</span><br></pre></td></tr></table></figure><p>下表列出了位运算符的基本运算,假设整数变量A的值为60和变量B的值为13：</p><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>＆</td><td>按位与操作符，当且仅当两个操作数的某一位都非0时候结果的该位才为1。</td><td>(A＆B)，得到12，即0000 1100</td></tr><tr><td>&#124;</td><td>按位或操作符，只要两个操作数的某一位有一个非0时候结果的该位就为1。</td><td>(A &#124; B)得到61，即 0011 1101</td></tr><tr><td>^</td><td>按位异或操作符，两个操作数的某一位不相同时候结果的该位就为1。</td><td>(A ^ B)得到49，即 0011 0001</td></tr><tr><td>〜</td><td>按位补运算符翻转操作数的每一位。</td><td>(〜A)得到-61，即1100 0011</td></tr><tr><td>&lt;&lt;</td><td>按位左移运算符。左操作数按位左移右操作数指定的位数。</td><td>A &lt;&lt; 2得到240，即 1111 0000</td></tr><tr><td>&gt;&gt;</td><td>按位右移运算符。左操作数按位右移右操作数指定的位数。</td><td>A &gt;&gt; 2得到15即 1111</td></tr><tr><td>&gt;&gt;&gt;</td><td>按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。</td><td>A&gt;&gt;&gt;2得到15即0000 1111</td></tr></tbody></table><blockquote><p><strong>异或的应用</strong><br>如果操作数A连续异或同一个操作数两次，那么结果还是操作数A。 应用:对数据加密.</p></blockquote><h3 id="位运算符可能会出现的笔试题目："><a href="#位运算符可能会出现的笔试题目：" class="headerlink" title="位运算符可能会出现的笔试题目："></a>位运算符可能会出现的笔试题目：</h3><ol><li>交换两个变量的值,不准出现第三方变量。</li><li>取出一个二进制数据的指定位数。要求读取该二进制数据的低4位<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    00000000-00000000-00010100-01001101</span><br><span class="line">&amp;   00000000-00000000-00000000-00001111</span><br><span class="line">------------------------------------------</span><br><span class="line">    00000000-00000000-00000000-00001101</span><br></pre></td></tr></table></figure><h3 id="无符号右移与右移的区别"><a href="#无符号右移与右移的区别" class="headerlink" title="无符号右移与右移的区别"></a>无符号右移与右移的区别</h3>进行右移运算的时候，如果操作数是一个正数，那么左边的空缺位使用0补， 如果操作数是一个负数，那么左边的空缺位使用1补。而使用无符号右移的时候，不管是正数还是负数都 统一使用0补。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="number">6</span>&amp;<span class="number">3</span>); <span class="comment">// 2 </span></span><br><span class="line">        System.out.println(<span class="number">6</span>|<span class="number">3</span>); <span class="comment">// 7</span></span><br><span class="line">        System.out.println(<span class="number">6</span>^<span class="number">3</span>); <span class="comment">//  5</span></span><br><span class="line">        System.out.println(~<span class="number">7</span>);  <span class="comment">// -8</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span></span><br><span class="line"><span class="class"></span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">3</span>; </span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">5</span>; </span><br><span class="line">        <span class="comment">// 第一种方式： 定义第三方变量。 </span></span><br><span class="line">        <span class="keyword">int</span> temp = a; <span class="comment">//3 </span></span><br><span class="line">        a = b; <span class="comment">//a = 5 </span></span><br><span class="line">        b = temp;</span><br><span class="line">        <span class="comment">//方式2：相加法， 缺点： 两个int类型的数据相加，有可能会出现超出int的表示范围。</span></span><br><span class="line">        a = a+b;  <span class="comment">// a =8</span></span><br><span class="line">        b = a-b; <span class="comment">//b = 8 - 5 = 3</span></span><br><span class="line">        a = a-b; <span class="comment">// a = 8 - 3 = 5</span></span><br><span class="line">        <span class="comment">//方式3： 可以使用异或。 缺点： 逻辑不清晰。</span></span><br><span class="line">        a = a^b;  <span class="comment">// a = 3^5</span></span><br><span class="line">        b = a^b;  <span class="comment">// b = (3^5)^5 = 3</span></span><br><span class="line">        a = a^b; <span class="comment">//  a = (5^3)^3 = 5 </span></span><br><span class="line">        System.out.println(<span class="string">&quot;a = &quot;</span>+ a+<span class="string">&quot; b=&quot;</span>+b); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 逻辑运算符</title>
      <link href="/2016/07/20/java-4/"/>
      <url>/2016/07/20/java-4/</url>
      
        <content type="html"><![CDATA[<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>逻辑运算符的作用是用于连接布尔表达式的。</p><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>&amp;</td><td>与,并且</td><td>只有左右变量同时 为true，那么结果才是true，否则就为false</td></tr><tr><td>&#124;</td><td>或,或者</td><td>只要两边的布尔表达式有一边为true，那么结果就为true，只有两边同时为false 的时候，结果才是false.</td></tr><tr><td>^</td><td>异或</td><td>只要两边的布尔表达式 结果不一致，那么结果就为true，如果左右两边 的布尔表达式一致，那么就为false.</td></tr><tr><td>！</td><td>非</td><td>取反</td></tr><tr><td>&amp;&amp;</td><td>短路与、双与</td><td>与&amp;相似，见下</td></tr><tr><td>&#124;&#124;</td><td>短路或、双或</td><td>与&amp;#124相似，见下</td></tr></tbody></table><p>下表列出了逻辑运算符的基本运算，假设布尔变量A为真，变量B为假</p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。</td><td>(A &amp;&amp; B)为假。</td></tr><tr><td>&#124;&#124;</td><td>称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。</td><td>(A &#124;&#124; B)为真。</td></tr><tr><td>！</td><td>称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到    false。</td><td>!(A &amp;&amp; B)为真。</td></tr></tbody></table><p>实例 下面的简单示例程序演示了逻辑运算符。复制并粘贴下面的Java程序并保存为Test.java文件，然后编译并运行这个程序：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> a = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;a &amp;&amp; b = &quot;</span> + (a&amp;&amp;b));</span><br><span class="line">        System.out.println(<span class="string">&quot;a || b = &quot;</span> + (a||b) );</span><br><span class="line">        System.out.println(<span class="string">&quot;!(a &amp;&amp; b) = &quot;</span> + !(a &amp;&amp; b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上实例编译运行结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a &amp;&amp; b &#x3D; false</span><br><span class="line">a || b &#x3D; true</span><br><span class="line">!(a &amp;&amp; b) &#x3D; true</span><br></pre></td></tr></table></figure></p><blockquote><ul><li>短路与和单与符号的相同与不同点：<ul><li>相同点： 短路与和单与运算的结果是一样的。</li><li>不同点： 使用短路与的时候，如果左边的布尔表达式为false，则不会在运算右边的布尔表达式，从而提高了效率。使用单与的时候，即使发现左边的布尔表达式为false，还是会运算右边的布尔表达式的。</li></ul></li><li>短路或与单或的相同点与不同点：<ul><li>相同点：运算的结果是一致 的。</li><li>不同点：使用短路或的时候，当发现左边的布尔表达式为true时，则不会运算右边的布尔表达式。 使用单或的时候 发现左边的布尔表达式为true，还是会运算右边布尔表达式。</li></ul></li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> workAge = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> age = <span class="number">24</span>;</span><br><span class="line">        System.out.println(workAge&gt;=<span class="number">2</span>|age++&gt;<span class="number">18</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;age:&quot;</span>+ age);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">true</span>&amp;<span class="keyword">true</span>);  <span class="comment">//true</span></span><br><span class="line">        System.out.println(<span class="keyword">true</span>&amp;<span class="keyword">false</span>); <span class="comment">// false</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>&amp;<span class="keyword">true</span>); <span class="comment">// false</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>&amp;<span class="keyword">false</span>); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">true</span>|<span class="keyword">true</span>);  <span class="comment">// true</span></span><br><span class="line">        System.out.println(<span class="keyword">true</span>|<span class="keyword">false</span>); <span class="comment">// true</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>|<span class="keyword">true</span>); <span class="comment">// true</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>|<span class="keyword">false</span>); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">true</span>^<span class="keyword">true</span>);  <span class="comment">//  false</span></span><br><span class="line">        System.out.println(<span class="keyword">true</span>^<span class="keyword">false</span>); <span class="comment">//  true</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>^<span class="keyword">true</span>); <span class="comment">//  true</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>^<span class="keyword">false</span>); <span class="comment">//  false</span></span><br><span class="line"></span><br><span class="line">        System.out.println(!<span class="keyword">true</span>); <span class="comment">// </span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">true</span>&amp;&amp;<span class="keyword">true</span>);  <span class="comment">//true</span></span><br><span class="line">        System.out.println(<span class="keyword">true</span>&amp;&amp;<span class="keyword">false</span>); <span class="comment">// false</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>&amp;&amp;<span class="keyword">true</span>); <span class="comment">// false</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>&amp;&amp;<span class="keyword">false</span>); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">true</span>||<span class="keyword">true</span>);  <span class="comment">// true</span></span><br><span class="line">        System.out.println(<span class="keyword">true</span>||<span class="keyword">false</span>); <span class="comment">// true</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>||<span class="keyword">true</span>); <span class="comment">// true</span></span><br><span class="line">        System.out.println(<span class="keyword">false</span>||<span class="keyword">false</span>); <span class="comment">// false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 比较运算符</title>
      <link href="/2016/07/20/java-3/"/>
      <url>/2016/07/20/java-3/</url>
      
        <content type="html"><![CDATA[<h2 id="比较运算符（关系运算符）"><a href="#比较运算符（关系运算符）" class="headerlink" title="比较运算符（关系运算符）"></a>比较运算符（关系运算符）</h2><table><thead><tr><th>符号</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>判断是否等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr></tbody></table><blockquote><p><strong>注意:</strong></p><ul><li>==用于比较两个基本数据类型数据的时候，比较的是两个变量所存储的值是否一致.</li><li>==用于比较两个引用类型变量的数据时候，比较的是两个 引用类型变量所记录的内存地址是否一致.</li></ul></blockquote><p>下表为Java支持的关系运算符 表格中的实例整数变量A的值为10，变量B的值为20： </p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>==</td><td>检查如果两个操作数的值是否相等，如果相等则条件为真。</td><td>（A == B）为假（非真）。</td></tr><tr><td>!=</td><td>检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td><td>（A != B） 为真。</td></tr><tr><td>&gt;</td><td>检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td><td>（A&gt; B）非真。</td></tr><tr><td>&lt;</td><td>检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td><td>（A&lt; B）为真。</td></tr><tr><td>&gt;=</td><td>检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td><td>（A&gt; = B）为假。</td></tr><tr><td>&lt;=</td><td>检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td><td>（A &lt;= B）为真。</td></tr></tbody></table><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>下面的简单示例程序演示了关系运算符。复制并粘贴下面的Java程序并保存为Test.java文件，然后编译并运行这个程序：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;a == b = &quot;</span> + (a == b) );</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;a != b = &quot;</span> + (a != b) );</span><br><span class="line">        System.out.println(<span class="string">&quot;a &gt; b = &quot;</span> + (a &gt; b) );</span><br><span class="line">        System.out.println(<span class="string">&quot;a &lt; b = &quot;</span> + (a &lt; b) );</span><br><span class="line">        System.out.println(<span class="string">&quot;b &gt;= a = &quot;</span> + (b &gt;= a) );</span><br><span class="line">        System.out.println(<span class="string">&quot;b &lt;= a = &quot;</span> + (b &lt;= a) );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>以上实例编译运行结果如下：<br>a == b = false<br>a != b = true<br>a &gt; b = false<br>a &lt; b = true<br>b &gt;= a = true<br>b &lt;= a = false</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        int a = 10;</span></span><br><span class="line"><span class="comment">        int b =10;</span></span><br><span class="line"><span class="comment">        System.out.println(&quot;10等于10吗？&quot;+ (a==b));  </span></span><br><span class="line"><span class="comment">        System.out.println(&quot;10不等于1吗？&quot;+ (10!=1) ); //true  </span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span> b  = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">long</span> l = <span class="number">30</span>;</span><br><span class="line">        System.out.println(l&gt;b); <span class="comment">//两个不同类型的数据是否可以比较呢.,可以的，但是两个不同类型的数据必须是兼用的数据。</span></span><br><span class="line">        <span class="comment">//这个比较的过程会先把b转换了long类型的数据，然后再进行比较 。</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&#x27;a&#x27;</span>&gt;<span class="number">50</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 算数运算符</title>
      <link href="/2016/07/20/java-2/"/>
      <url>/2016/07/20/java-2/</url>
      
        <content type="html"><![CDATA[<h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><p>算术运算符用在数学表达式中，它们的作用和在数学中的作用一样。下表列出了所有的算术运算符。 表格中的实例假设整数变量A的值为10，变量B的值为20：</p><table><thead><tr><th>操作符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>+</td><td>加法 - 相加运算符两侧的值</td><td>A + B等于30</td></tr><tr><td>-</td><td>减法 - 左操作数减去右操作数</td><td>A – B等于-10</td></tr><tr><td>*</td><td>乘法 - 相乘操作符两侧的值</td><td>A * B等于200</td></tr><tr><td>/</td><td>除法 - 左操作数除以右操作数</td><td>B / A等于2</td></tr><tr><td>％</td><td>取模 - 左操作数除右操作数的余数</td><td>B%A等于0</td></tr><tr><td>++</td><td>自增 - 操作数的值增加1</td><td>B + +等于21</td></tr><tr><td>–</td><td>自减 – 操作数的值减少1</td><td>B - -等于19</td></tr></tbody></table><h3 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">++</span><br><span class="line">--</span><br></pre></td></tr></table></figure><ul><li>前自增: ++位于操作数的前面 比如： ++i<ul><li>先自增，后使用。</li></ul></li><li>后自增: ++位于操作数的后面。 比如： i++<ul><li>先使用，后自增。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> c = i++; <span class="comment">// =&gt;  c = i; i = i+1;   // 先使用,后自增</span></span><br><span class="line">System.out.println(<span class="string">&quot;c=&quot;</span>+c+<span class="string">&quot;,i=&quot;</span>+i); <span class="comment">//  =&gt; c = 12 i = 13</span></span><br><span class="line"><span class="keyword">int</span> d = ++i; <span class="comment">// =&gt;  i=i+1; d = i;     // 先自增,后使用</span></span><br><span class="line">System.out.println(<span class="string">&quot;d=&quot;</span>+d+<span class="string">&quot;,i=&quot;</span>+i); <span class="comment">//  =&gt; i = 14  d = 14 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 面试题:// 输出时什么?</span></span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">1</span>;</span><br><span class="line">num1 = num1++;</span><br><span class="line">System.out.println(num1); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">1</span>;</span><br><span class="line">num2 = ++num2;</span><br><span class="line">System.out.println(num2); <span class="comment">// 2</span></span><br><span class="line"><span class="keyword">int</span> c = i++;<span class="comment">// 表达式的值 = 12 ; i=i+1 i=13; c = 表达式的值     c = 12</span></span><br><span class="line">System.out.println(<span class="string">&quot;c=&quot;</span> + c + <span class="string">&quot;,i=&quot;</span> + i);</span><br><span class="line"><span class="keyword">int</span> d = ++i;<span class="comment">// i=i+1 i=14;  表达式的值 = 14 ; c = 表达式的值     c = 14</span></span><br><span class="line">System.out.println(<span class="string">&quot;d=&quot;</span> + d + <span class="string">&quot;,i=&quot;</span> + i);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//int sum = ++a; //前自增。 a = a+1  ， sum = a</span></span><br><span class="line">        <span class="keyword">int</span> sum = a++; <span class="comment">//后自增  sum = 0 , a = a+1</span></span><br><span class="line">        System.out.println(<span class="string">&quot;sum= &quot;</span>+ sum+ <span class="string">&quot; a = &quot;</span>+ a); <span class="comment">//1 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： java格式化输出 printf 例子</title>
      <link href="/2016/07/20/java-1/"/>
      <url>/2016/07/20/java-1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Printf</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// %s表示输出字符串，也就是将后面的字符串替换模式中的%s</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%s&quot;</span>, <span class="keyword">new</span> Integer(<span class="number">1212</span>));</span><br><span class="line">        <span class="comment">// %n表示换行</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%s%n&quot;</span>, <span class="string">&quot;end line&quot;</span>);</span><br><span class="line">        <span class="comment">// 还可以支持多个参数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%s = %s%n&quot;</span>, <span class="string">&quot;Name&quot;</span>, <span class="string">&quot;Zhangsan&quot;</span>);</span><br><span class="line">        <span class="comment">// %S将字符串以大写形式输出</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%S = %s%n&quot;</span>, <span class="string">&quot;Name&quot;</span>, <span class="string">&quot;Zhangsan&quot;</span>);</span><br><span class="line">        <span class="comment">// 支持多个参数时，可以在%s之间插入变量编号，1$表示第一个字符串，3$表示第3个字符串</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$s = %3$s %2$s%n&quot;</span>, <span class="string">&quot;Name&quot;</span>, <span class="string">&quot;san&quot;</span>, <span class="string">&quot;Zhang&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;true = %b; false = &quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;%b%n&quot;</span>, <span class="keyword">false</span>);</span><br><span class="line">        Integer iObj = <span class="number">342</span>;</span><br><span class="line">        <span class="comment">// %d表示将整数格式化为10进制整数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%d; %d; %d%n&quot;</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">        <span class="comment">// %o表示将整数格式化为8进制整数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%o; %o; %o%n&quot;</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">        <span class="comment">// %x表示将整数格式化为16进制整数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%x; %x; %x%n&quot;</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">        <span class="comment">// %X表示将整数格式化为16进制整数，并且字母变成大写形式</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%X; %X; %X%n&quot;</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">        Double dObj = <span class="number">45.6d</span>;</span><br><span class="line">        <span class="comment">// %e表示以科学技术法输出浮点数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%e; %e; %e%n&quot;</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641d</span>, dObj);</span><br><span class="line">        <span class="comment">// %E表示以科学技术法输出浮点数，并且为大写形式</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%E; %E; %E%n&quot;</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641d</span>, dObj);</span><br><span class="line">        <span class="comment">// %f表示以十进制格式化输出浮点数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%f; %f; %f%n&quot;</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641d</span>, dObj);</span><br><span class="line">        <span class="comment">// 还可以限制小数点后的位数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%.1f; %.3f; %f%n&quot;</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641d</span>, dObj);</span><br><span class="line">        <span class="comment">// %t表示格式化日期时间类型，%T是时间日期的大写形式，在%t之后用特定的字母表示不同的输出格式</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="keyword">long</span> dataL = date.getTime();</span><br><span class="line">        <span class="comment">// 格式化年月日</span></span><br><span class="line">        <span class="comment">// %t之后用y表示输出日期的年份（2位数的年，如99）</span></span><br><span class="line">        <span class="comment">// %t之后用m表示输出日期的月份，%t之后用d表示输出日期的日号</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$ty-%1$tm-%1$td; %2$ty-%2$tm-%2$td%n&quot;</span>, date, dataL);</span><br><span class="line">        <span class="comment">// %t之后用Y表示输出日期的年份（4位数的年），</span></span><br><span class="line">        <span class="comment">// %t之后用B表示输出日期的月份的完整名， %t之后用b表示输出日期的月份的简称</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tY-%1$tB-%1$td; %2$tY-%2$tb-%2$td%n&quot;</span>, date, dataL);</span><br><span class="line">        <span class="comment">// 以下是常见的日期组合</span></span><br><span class="line">        <span class="comment">// %t之后用D表示以 &quot;%tm/%td/%ty&quot;格式化日期</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tD%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">//%t之后用F表示以&quot;%tY-%tm-%td&quot;格式化日期</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tF%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// 输出时分秒</span></span><br><span class="line">        <span class="comment">// %t之后用H表示输出时间的时（24进制），%t之后用I表示输出时间的时（12进制），</span></span><br><span class="line">        <span class="comment">// %t之后用M表示输出时间的分，%t之后用S表示输出时间的秒</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tH:%1$tM:%1$tS; %2$tI:%2$tM:%2$tS%n&quot;</span>, date, dataL);</span><br><span class="line">        <span class="comment">// %t之后用L表示输出时间的秒中的毫秒</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tH:%1$tM:%1$tS %1$tL%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// %t之后p表示输出时间的上午或下午信息</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tH:%1$tM:%1$tS %1$tL %1$tp%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// 以下是常见的时间组合</span></span><br><span class="line">        <span class="comment">// %t之后用R表示以&quot;%tH:%tM&quot;格式化时间</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tR%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// %t之后用T表示以&quot;%tH:%tM:%tS&quot;格式化时间</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tT%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// %t之后用r表示以&quot;%tI:%tM:%tS %Tp&quot;格式化时间</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tr%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// %t之后用A表示得到星期几的全称</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tF %1$tA%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// %t之后用a表示得到星期几的简称</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tF %1$ta%n&quot;</span>, date);</span><br><span class="line">        <span class="comment">// 输出时间日期的完整信息</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%1$tc%n&quot;</span>, date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 原码反码补码</title>
      <link href="/2016/07/13/java-1/"/>
      <url>/2016/07/13/java-1/</url>
      
        <content type="html"><![CDATA[<p>计算机中的符号数有三种表示方法，即原码、反码和补码。<br>三种表示方法均有符号位和数值位两部分，符号位都是用0表示“正”，用1表示“负”，而数值位，三种表示方法各不相同。<br><code>在计算机系统中，数值一律用补码来表示和存储。</code><br>原因在于，使用补码，可以将符号位和数值域统一处理；同时，加法和减法也可以统一处理。<br>此外，补码与原码相互转换，其运算过程是相同的，不需要额外的硬件电路。</p><p>正数的原码、反码、补码都相同。</p><ul><li>原码:就是二进制表示,最高位为符号位,0表示正,1表示负</li><li>反码:负数的反码,就是逐位取反(符号位除外)</li><li>补码:负数的补码，反码末位加1.</li></ul><p>正数5:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">二进制:00000101</span><br><span class="line">原码:00000101</span><br><span class="line">反码:00000101</span><br><span class="line">补码:00000101</span><br></pre></td></tr></table></figure><br>负数5:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">二进制:10000101</span><br><span class="line">原码:10000101</span><br><span class="line">反码:11111010</span><br><span class="line">补码:11111011</span><br></pre></td></tr></table></figure><br>计算: 2-1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2-1 &#x3D; 2 + (-1)</span><br><span class="line">2 000000100000001000000010</span><br><span class="line">-1 100000011111111011111111</span><br><span class="line">负数的补码求原始数据步骤:1. -12. 取反3. 符号位改为1</span><br><span class="line">1111111111111110</span><br><span class="line">2</span><br><span class="line">    00000010 </span><br><span class="line">-1  11111111</span><br><span class="line">    00000001</span><br></pre></td></tr></table></figure><br>计算:2-3 = 2 + (-3) = -1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 000000100000001000000010</span><br><span class="line">-3100000111111110011111101</span><br><span class="line">2 00000010-3 11111101 11111111</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>-128是人为规定的。</strong><br>因为8位2进制中，存在 “-0”(1000 0000)和”0”(0000 0000)，虽然“-0”也是“0”,但根据正、反、补码体系，“-0”的补码和“+0”是不同的，这样就出现两个补码代表一个数值的情况。为了将补码与数字一一对应，所以人为规定“0”一律用“+0”代表。同时为了充分利用资源，就将原来本应该表示“-0”的补码规定为代表-128。<br><strong>验证 1000 0000 到底是0还是-128，先假设为X</strong><br>则     2+X=?<br>            0000 0010<br>            1000 0000<br>            1000 0010       –&gt;     1000 0001      –&gt;      0111 1110<br>            即为正负126<br>所以X=-128或X=124，显然应该取负数解！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 数据类型和常量(字面量)和变量</title>
      <link href="/2016/07/12/java-5/"/>
      <url>/2016/07/12/java-5/</url>
      
        <content type="html"><![CDATA[<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>在java中 的数据类型分为两类数据类型</p><ul><li>基本数据类型(8种)<ul><li>整数：byte short int long</li><li>小数： float double</li><li>布尔： boolean</li><li>字符： char</li></ul></li><li>引用数据类型<ul><li>字符串： String</li></ul></li></ul><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><table><thead><tr><th>类型</th><th>占用内存</th><th>范围</th></tr></thead><tbody><tr><td>byte(字节)</td><td>8位（bit)</td><td>2^8=256,-128~127          1111 1111~0111 1111                     </td></tr><tr><td>short(短整型)</td><td>16bit</td><td>2^16 = 65536              **~0111 1111 1111 1111</td></tr><tr><td>int(整型)</td><td>32bit</td><td>超出20亿                    **~0111 1111 1111 1111 1111 1111 1111 1111</td></tr><tr><td>long(长整型)</td><td>64bit</td><td>2^64                             *<em>~</em></td></tr></tbody></table><blockquote><p><strong>注意:</strong></p><ul><li>如果一个整数没有加上任何的标识的时候，那么默认是int类型的数据。</li><li>如果需要把该数据表示成一个long类型的数据，那么需要加数据后面加上L表示，L是不区分大小写的，但是建议使用大写。</li></ul><p><strong>疑惑:</strong><br>存储整数可以使用四种数据类型，那么具体怎么选择使用呢？<br>选用数据类型的原则： 在能满足需求的情况下，能小就小。节省内存空间。</p></blockquote><h3 id="小数-浮点数"><a href="#小数-浮点数" class="headerlink" title="小数(浮点数)"></a>小数(浮点数)</h3><p>小数的数据类型：</p><table><thead><tr><th>类型</th><th>占用内存</th></tr></thead><tbody><tr><td>float(单精度浮点型)</td><td>32bit  </td></tr><tr><td>double(双精度浮点型)</td><td>64bit</td></tr></tbody></table><blockquote><p><strong>注意：</strong><br>如果一个小数没有加上任何标识的时候，那么该小数默认是double类型的数据，如果需要表示成float类型，那么需要在小数的后面加上f表示。f不区分大小写的。<br><code>float数据类型不精确的问题：因小树部分转换为二进制时采用乘二取余法，所以小树部分不精确！</code></p></blockquote><h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><p>布尔类型只有两个值:true或者false。<br>boolean:1字节或者4个字节<br>如果使用boolean声明一个基本类型的变量时，那么该变量占4个字节， 如果使用boolean声明一个数组类型 的时候，那么每个数组的元素占 一个字节。</p><h3 id="字符类型："><a href="#字符类型：" class="headerlink" title="字符类型："></a>字符类型：</h3><p>char 2字节（16bit）<br>字符串的数据类型是：String 引用数据类型,不属于基本数据类型。</p><h2 id="常量-字面量"><a href="#常量-字面量" class="headerlink" title="常量(字面量)"></a>常量(字面量)</h2><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量:变量就是在程序运行过程中其值可以发生变化的量,变量就是一个存储数据的容器。</p><h3 id="容器具备什么特点"><a href="#容器具备什么特点" class="headerlink" title="容器具备什么特点:"></a>容器具备什么特点:</h3><ul><li>容量(大小)。</li><li>存储一定格式的数据。</li><li>名字.<h3 id="声明（定义）一个变量的格式："><a href="#声明（定义）一个变量的格式：" class="headerlink" title="声明（定义）一个变量的格式："></a>声明（定义）一个变量的格式：</h3>数据类型 变量名字 = 数据值;<h3 id="变量名的命名规范"><a href="#变量名的命名规范" class="headerlink" title="变量名的命名规范"></a>变量名的命名规范</h3>首单词小写，其他单词首字母大写，其他小写。<h3 id="java表示一个变量的容量多大是使用了数据类型描述的。"><a href="#java表示一个变量的容量多大是使用了数据类型描述的。" class="headerlink" title="java表示一个变量的容量多大是使用了数据类型描述的。"></a>java表示一个变量的容量多大是使用了数据类型描述的。</h3><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3></li><li>变量是必须先声明再使用。</li><li>在一个作用域中不能声明同名 的变量。<h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><h3 id="数据类型转换-1"><a href="#数据类型转换-1" class="headerlink" title="数据类型转换:"></a>数据类型转换:</h3></li><li>小数据类型——–&gt;大数据类型 自动类型转换</li><li>大数据类型———&gt;小数据类型 强制类型转换<h3 id="强制类型转换的格式："><a href="#强制类型转换的格式：" class="headerlink" title="强制类型转换的格式："></a>强制类型转换的格式：</h3>小数据类型  变量名 = (小数据类型)大数据类型;<h3 id="数据类型转换要注意的细节"><a href="#数据类型转换要注意的细节" class="headerlink" title="数据类型转换要注意的细节:"></a>数据类型转换要注意的细节:</h3></li><li>凡是byte、short 、 char数据类型数据在运算的时候都会自动转换成int类型的数据再运算。(包括赋值运算！)</li><li>两个不同数据类型的数据在运算的时候，结果取决于大的数据类型。</li><li>char类型的一个字符可以看做无符号的short类型的数！<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    System.out.println(12); //整数常量</span></span><br><span class="line"><span class="comment">    System.out.println(3.14); //小数常量</span></span><br><span class="line"><span class="comment">    System.out.println(false); //布尔常量</span></span><br><span class="line"><span class="comment">    System.out.println(&#x27;1&#x27;); //字符常量</span></span><br><span class="line"><span class="comment">    System.out.println(&quot;hello world&quot;); //字符串常量</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    如果一个数据没有加上任何的标识之前，默认就是十进制的数据。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    System.out.println(<span class="number">10</span>);<span class="comment">// 十进制</span></span><br><span class="line">    System.out.println(<span class="number">0b10</span>); <span class="comment">//二进制 , 如果一个数据要表示二进制，那么要在该数据的前面加上0b开头。</span></span><br><span class="line">    System.out.println(<span class="number">010</span>); <span class="comment">//八进制数据， 八进制的数据需要以0开头</span></span><br><span class="line">    System.out.println(<span class="number">0x10</span>); <span class="comment">//十六进制数据， 十六进制的数据需要以0x开头</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo5</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//需求1： 定义一个变量存储一个正常人的年龄。 </span></span><br><span class="line">        <span class="keyword">byte</span> age = <span class="number">120</span>;  <span class="comment">//声明了一个byte类型的变量，该变量的名字叫age，把120存储到了age变量中。</span></span><br><span class="line">        <span class="comment">//改变变量的值</span></span><br><span class="line">        age = <span class="number">121</span>;</span><br><span class="line">        <span class="comment">//需求2： 定义一个变量存储老师口袋钱。</span></span><br><span class="line">        <span class="keyword">short</span> money = <span class="number">128</span>;</span><br><span class="line">        <span class="comment">//需求3： 定义一个变量存储老黎的钱。</span></span><br><span class="line">        <span class="keyword">int</span> bossMoney = <span class="number">1000000000</span>;</span><br><span class="line">        <span class="comment">//需求4: 定义一个变量存储周小川老板</span></span><br><span class="line">        <span class="keyword">long</span>  allMoney = <span class="number">10000000000000000L</span>;</span><br><span class="line">        <span class="comment">//存储小数</span></span><br><span class="line">        <span class="keyword">float</span> f = <span class="number">3.14f</span>;</span><br><span class="line">        <span class="keyword">double</span> d = <span class="number">3.1415926537</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        String str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">        System.out.println(str); <span class="comment">//需要获取一个变量存储的数据，只需要使用变量名即可。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;    </span><br><span class="line">        <span class="comment">//int age = 12; //声明一个变量</span></span><br><span class="line">        <span class="keyword">int</span> age ,height ;  <span class="comment">//声明了变量</span></span><br><span class="line">        <span class="comment">//给变量赋值</span></span><br><span class="line">        age = <span class="number">10</span>;</span><br><span class="line">        height = <span class="number">175</span>;</span><br><span class="line">        System.out.println(age);</span><br><span class="line">        System.out.println(height);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">&quot;&quot;</span>; <span class="comment">//字符串还是字符呢？  &quot;&quot;字符串没有内容是属于一个空字符串。</span></span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo2</span></span></span><br><span class="line"><span class="class"></span>&#123; </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">     <span class="comment">/* </span></span><br><span class="line"><span class="comment">     byte b= 11; // 一个字节 </span></span><br><span class="line"><span class="comment">     short s = b; // 把b变量存储的值赋予给s变量。 </span></span><br><span class="line"><span class="comment">     int i = s; // i是4字节</span></span><br><span class="line"><span class="comment">     long l = i; // l 是8个字节。 </span></span><br><span class="line"><span class="comment">     System.out.println(l);</span></span><br><span class="line"><span class="comment">     int i = 128;  //4个字节</span></span><br><span class="line"><span class="comment">     byte b =(byte) i;  // 1个字节</span></span><br><span class="line"><span class="comment">     System.out.println(b);  // -128</span></span><br><span class="line"><span class="comment">     //如果是负数，那么最高位肯定是1， 正数的二进制位的最高位是0。</span></span><br><span class="line"><span class="comment">     System.out.println(Integer.toBinaryString(-7));  //sun给我们提供一个功能 Integer.tobinaryString()  查看一个数据的二进制数据形式的。</span></span><br><span class="line"><span class="comment">     //   11111001（补码）</span></span><br><span class="line"><span class="comment">     凡是byte、short 、 char数据类型数据在运算的时候都会自动转换成int类型的数据再运算。</span></span><br><span class="line"><span class="comment">     byte b1 =1;</span></span><br><span class="line"><span class="comment">     byte b2 = 2;</span></span><br><span class="line"><span class="comment">     byte b3 = (byte)(b1+b2);</span></span><br><span class="line"><span class="comment">     System.out.println(b3); //3  </span></span><br><span class="line"><span class="comment">     System.out.println(&#x27;a&#x27;+1); //98 </span></span><br><span class="line"><span class="comment">     两个不同数据类型的数据在运算的时候，结果取决于大的数据类型</span></span><br><span class="line"><span class="comment">     int i =10;</span></span><br><span class="line"><span class="comment">     long l = 20;</span></span><br><span class="line"><span class="comment">     i = (int)(i+l); </span></span><br><span class="line"><span class="comment">     System.out.println(i);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="keyword">int</span> i = <span class="number">10</span>;  <span class="comment">//</span></span><br><span class="line">     <span class="keyword">byte</span> b = i;  <span class="comment">// 一个整数没有加上任何标识的时候，默认是int类型的数据。</span></span><br><span class="line">     <span class="comment">//10 是一个常量， 编译器在编译的时候就能够确认常量的值了，byte b = 10,在编译到的时候</span></span><br><span class="line">     <span class="comment">//java编译器就会检查到10并没有超出byte的表示范围，所以允许赋值。</span></span><br><span class="line">     <span class="comment">//java编译器在编译的时候并不能确认变量所存储的值，变量存储的值是在运行的时候才在内存中分配空间的</span></span><br><span class="line">     System.out.println(b); </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 注释</title>
      <link href="/2016/07/12/java-4/"/>
      <url>/2016/07/12/java-4/</url>
      
        <content type="html"><![CDATA[<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>注释就是使用文字对程序的说明，注释是写给程序员看的，编译器会忽略注释的 内容的。</p><h3 id="1-单行注释"><a href="#1-单行注释" class="headerlink" title="1 单行注释"></a>1 单行注释</h3><p>第一种： 单行注释。 // 注释的内容</p><h3 id="2-多行注释"><a href="#2-多行注释" class="headerlink" title="2 多行注释"></a>2 多行注释</h3><p>第二种： 多行注释。 / 注释的内容 /</p><h3 id="3-文档注释"><a href="#3-文档注释" class="headerlink" title="3 文档注释"></a>3 文档注释</h3><p>第三种： 文档注释. /* 注释的内容 /</p><h3 id="注释要注意的细节"><a href="#注释要注意的细节" class="headerlink" title="注释要注意的细节:"></a>注释要注意的细节:</h3><p>单行注释可以嵌套使用，多行注意是不能嵌套使用的。</p><h3 id="注释的作用："><a href="#注释的作用：" class="headerlink" title="注释的作用："></a>注释的作用：</h3><ul><li>使用文字对程序说明。</li><li>调试程序。</li></ul><h3 id="多行注释与文档注释的区别"><a href="#多行注释与文档注释的区别" class="headerlink" title="多行注释与文档注释的区别:"></a>多行注释与文档注释的区别:</h3><p>多行注释的内容不能用于生成一个开发者文档，而文档注释 的内容可以生产一个开发者文档。</p><h3 id="使用javadoc开发工具即可生成一个开发者文档。"><a href="#使用javadoc开发工具即可生成一个开发者文档。" class="headerlink" title="使用javadoc开发工具即可生成一个开发者文档。"></a>使用javadoc开发工具即可生成一个开发者文档。</h3><p>javadoc工具的使用格式：<br>javadoc -d 存放文档的路径   java的源文件<br>例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javadoc -d .\doc   Demo1.java</span><br></pre></td></tr></table></figure></p><h3 id="使用javadoc工具要注意细节"><a href="#使用javadoc工具要注意细节" class="headerlink" title="使用javadoc工具要注意细节"></a>使用javadoc工具要注意细节</h3><ul><li>如果一个类需要使用javadoc工具生成一个软件的开发者文档，那么该类必须使用public修饰。</li><li>文档注释注释的内容一般都是位于类或者方法的上面的。<h3 id="写注释的规范："><a href="#写注释的规范：" class="headerlink" title="写注释的规范："></a>写注释的规范：</h3></li><li>一般单行注释是位于代码的右侧</li><li>多行注释与文档注释一般是写在类或者方法的上面的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 标识符和关键字</title>
      <link href="/2016/07/12/java-3/"/>
      <url>/2016/07/12/java-3/</url>
      
        <content type="html"><![CDATA[<h2 id="标识符和关键字"><a href="#标识符和关键字" class="headerlink" title="标识符和关键字"></a>标识符和关键字</h2><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>在java程序中有些名字是可以自定义的，那么这些自定义的名字我们就称作为自定义的标识符。 比如:类名、方法名、变量名</p><h4 id="标识符要求："><a href="#标识符要求：" class="headerlink" title="标识符要求："></a>标识符要求：</h4><ul><li>标识符的组成元素是由 字母（a-zA-Z） 、数字(0-9) 、 下划线(_)、 美元符号($).</li><li>标识符不能以数字开头。</li><li>标识符是严格区分大小写的。</li><li>标识符的长度是没有长度限制的。</li><li>关键字、保留字不能用于自定义的标识符。</li><li>不要使用Java中内置的类名作为自己的类名。<h4 id="自定义标识符的规范："><a href="#自定义标识符的规范：" class="headerlink" title="自定义标识符的规范："></a>自定义标识符的规范：</h4></li><li>标识符的命名一般要有意义的。(要做到让人见名知意)</li><li>类名和接口名单词的首字母大写，其他单词小写。 比如： RunTime.</li><li>变量名与方法名首单词全部小写，其他单词首字母大写，其他小写。 比如： doCook()；</li><li>包名全部单词小写。<h4 id="判断一下那些是符合的标识符"><a href="#判断一下那些是符合的标识符" class="headerlink" title="判断一下那些是符合的标识符:"></a>判断一下那些是符合的标识符:</h4></li><li>12abc_ 不合法 数字不能开头</li><li>_12abc 合法</li><li>$ab12# 不合法 #号不属于标识符组成元素。</li><li>abc@123 不合法 @号不属于标识符组成元素。</li></ul><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>是在java程序中具备特殊含义的标识符。关键字一般用于描述一个程序的结构或者表示数据类型。</p><table><thead><tr><th>关键字</th><th>含义</th></tr></thead><tbody><tr><td>abstract</td><td>表明类或者成员方法具有抽象属性</td></tr><tr><td>assert</td><td>用来进行程序调试</td></tr><tr><td>boolean</td><td>基本数据类型之一，布尔类型</td></tr><tr><td>break</td><td>提前跳出一个块</td></tr><tr><td>byte</td><td>基本数据类型之一，字节类型</td></tr><tr><td>case</td><td>用在switch语句之中，表示其中的一个分支　</td></tr><tr><td>catch</td><td>用在异常处理中，用来捕捉异常</td></tr><tr><td>char</td><td>基本数据类型之一，字符类型</td></tr><tr><td>class</td><td>类</td></tr><tr><td>const</td><td>保留关键字，没有具体含义</td></tr><tr><td>continue</td><td>回到一个块的开始处</td></tr><tr><td>default</td><td>默认，例如，用在switch语句中，表明一个默认的分支</td></tr><tr><td>do</td><td>用在do-while循环结构中</td></tr><tr><td>double</td><td>基本数据类型之一，双精度浮点数类型</td></tr><tr><td>else</td><td>用在条件语句中，表明当条件不成立时的分支</td></tr><tr><td>enum</td><td>枚举</td></tr><tr><td>extends</td><td>表明一个类型是另一个类型的子类型，这里常见的类型有类和接口</td></tr><tr><td>final</td><td>用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变</td></tr><tr><td>finally</td><td>用于处理异常情况，用来声明一个基本肯定会被执行到的语句块</td></tr><tr><td>float</td><td>基本数据类型之一，单精度浮点数类型</td></tr><tr><td>for</td><td>一种循环结构的引导词</td></tr><tr><td>goto</td><td>保留关键字，没有具体含义</td></tr><tr><td>if</td><td>条件语句的引导词</td></tr><tr><td>implements</td><td>表明一个类实现了给定的接口</td></tr><tr><td>import</td><td>表明要访问指定的类或包</td></tr><tr><td>instanceof</td><td>用来测试一个对象是否是指定类型的实例对象</td></tr><tr><td>int</td><td>基本数据类型之一，整数类型</td></tr><tr><td>interface</td><td>接口</td></tr><tr><td>long</td><td>基本数据类型之一，长整数类型</td></tr><tr><td>native</td><td>用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的</td></tr><tr><td>new</td><td>用来创建新实例对象</td></tr><tr><td>package</td><td>包</td></tr><tr><td>private</td><td>一种访问控制方式：私用模式</td></tr><tr><td>protected</td><td>一种访问控制方式：保护模式</td></tr><tr><td>public</td><td>一种访问控制方式：共用模式</td></tr><tr><td>return</td><td>从成员方法中返回数据</td></tr><tr><td>short</td><td>基本数据类型之一,短整数类型</td></tr><tr><td>static</td><td>表明具有静态属性</td></tr><tr><td>strictfp</td><td>用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范</td></tr><tr><td>super</td><td>表明当前对象的父类型的引用或者父类型的构造方法</td></tr><tr><td>switch</td><td>分支语句结构的引导词</td></tr><tr><td>synchronized</td><td>表明一段代码需要同步执行</td></tr><tr><td>this</td><td>指向当前实例对象的引用</td></tr><tr><td>throw</td><td>抛出一个异常</td></tr><tr><td>throws</td><td>声明在当前定义的成员方法中所有需要抛出的异常</td></tr><tr><td>transient</td><td>声明不用序列化的成员域</td></tr><tr><td>try</td><td>尝试一个可能抛出异常的程序块</td></tr><tr><td>void</td><td>声明当前成员方法没有返回值</td></tr><tr><td>volatile</td><td>表明两个或者多个变量必须同步地发生变化</td></tr><tr><td>while</td><td>用在循环结构中</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 分隔符</title>
      <link href="/2016/07/12/java-2/"/>
      <url>/2016/07/12/java-2/</url>
      
        <content type="html"><![CDATA[<h2 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h2><table><thead><tr><th>分隔符</th><th>作用</th></tr></thead><tbody><tr><td>空格</td><td>分隔单词</td></tr><tr><td>分号;</td><td>语句的分割,表示一句话结束，好比中文的句号</td></tr><tr><td>花括号、大括号{}</td><td>表示代码块,是一个整体</td></tr><tr><td>方括号、中括号[]</td><td>定义数组、和访问数组元素</td></tr><tr><td>圆括号、小括号()</td><td>使用比较广泛，遇到时解释</td></tr><tr><td>圆点.</td><td>类和对象访问成员时使用</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 进制转换</title>
      <link href="/2016/07/12/java-1/"/>
      <url>/2016/07/12/java-1/</url>
      
        <content type="html"><![CDATA[<h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><h3 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h3><p><code>进制：用有限的数字符号代表所有的数值。</code><br>计算机的出现是为了服务于人类的，那么人类在现实生活中使用的数据基本上都是 十进制的数据，那么计算机是否有可以存储现实生活中的数据呢？如果可以存储 又以哪种形式存储呢？</p><h3 id="二进制由来"><a href="#二进制由来" class="headerlink" title="二进制由来"></a>二进制由来</h3><p>电脑记录我们现实生活中的数据都是使用二进制进行记录的，那么我们 就要懂得如何把十进制数据转换成二进制。</p><h3 id="八进制、十六进制"><a href="#八进制、十六进制" class="headerlink" title="八进制、十六进制"></a>八进制、十六进制</h3><ul><li>十进制转二进制等<br><code>2进制转换为8进制时，每3位相对应；</code><br><code>2进制转换为16进制时，每4位相对应；</code><br>练习一下: 画一张表(0~16)</li></ul><table><thead><tr><th style="text-align:left">10进制</th><th style="text-align:left">2进制</th><th style="text-align:left">8进制</th><th style="text-align:left">16进制</th></tr></thead><tbody><tr><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">1</td><td style="text-align:left">0001</td><td style="text-align:left">1</td><td style="text-align:left">1</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">0010</td><td style="text-align:left">2</td><td style="text-align:left">2</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">0011</td><td style="text-align:left">3</td><td style="text-align:left">3</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0100</td><td style="text-align:left">4</td><td style="text-align:left">4</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">0101</td><td style="text-align:left">5</td><td style="text-align:left">5</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">0110</td><td style="text-align:left">6</td><td style="text-align:left">6</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">0111</td><td style="text-align:left">7</td><td style="text-align:left">7</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">1000</td><td style="text-align:left">10</td><td style="text-align:left">8</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">1001</td><td style="text-align:left">11</td><td style="text-align:left">9</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">1010</td><td style="text-align:left">12</td><td style="text-align:left">A</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">1011</td><td style="text-align:left">13</td><td style="text-align:left">B</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">1100</td><td style="text-align:left">14</td><td style="text-align:left">C</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">1101</td><td style="text-align:left">15</td><td style="text-align:left">D</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">1110</td><td style="text-align:left">16</td><td style="text-align:left">E</td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">1111</td><td style="text-align:left">17</td><td style="text-align:left">F</td></tr><tr><td style="text-align:left">16</td><td style="text-align:left">10000</td><td style="text-align:left">20</td><td style="text-align:left">10</td></tr></tbody></table><ul><li>二进制等其他进制转十进制<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    System.out.println(12); //整数常量</span></span><br><span class="line"><span class="comment">    System.out.println(3.14); //小数常量</span></span><br><span class="line"><span class="comment">    System.out.println(false); //布尔常量</span></span><br><span class="line"><span class="comment">    System.out.println(&#x27;1&#x27;); //字符常量</span></span><br><span class="line"><span class="comment">    System.out.println(&quot;hello world&quot;); //字符串常量</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    如果一个数据没有加上任何的标识之前，默认就是十进制的数据。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    System.out.println(<span class="number">10</span>);<span class="comment">// 十进制</span></span><br><span class="line">    System.out.println(<span class="number">0b10</span>); <span class="comment">//二进制 , 如果一个数据要表示二进制，那么要在该数据的前面加上0b开头。</span></span><br><span class="line">    System.out.println(<span class="number">010</span>); <span class="comment">//八进制数据， 八进制的数据需要以0开头</span></span><br><span class="line">    System.out.println(<span class="number">0x10</span>); <span class="comment">//十六进制数据， 十六进制的数据需要以0x开头</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： 第一个程序 设置环境变量</title>
      <link href="/2016/07/11/java-2/"/>
      <url>/2016/07/11/java-2/</url>
      
        <content type="html"><![CDATA[<h2 id="第一个Java程序-hello-World"><a href="#第一个Java程序-hello-World" class="headerlink" title="第一个Java程序 hello,World!"></a>第一个Java程序 hello,World!</h2><p>打开一个记事本在记事本里面输入以上代码,注意书写正确:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello java&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="HelloWord-剖析"><a href="#HelloWord-剖析" class="headerlink" title="HelloWord 剖析:"></a>HelloWord 剖析:</h3><ul><li>class:java关键字，用于定义一个类</li><li>{}:花括号表示范围。</li><li>main:是主函数，程序的入口（固定写法）。</li><li>System.out.println(“hello,World!”); 打印输出”Hello,World!”<h3 id="helloworld的小细节"><a href="#helloworld的小细节" class="headerlink" title="helloworld的小细节"></a>helloworld的小细节</h3></li><li>缺少main方法,出现提示：缺少一个名称为main的方法。</li><li>源文件中的大小写要注意。初学者请牢记，第一个hello例子中只有String和System中两个字符是大写的，其他的都小写。</li><li>配置path和classpath时，里面的路径是所有查找的目标的父目录，而不是目标自己。</li><li>A.java.txt 文本文件默认是txt结尾的，注意要把隐藏已知文件类型扩展名去掉。</li><li>大小写 只有类名Demo，String和System中三个个首字母是大写的。 public class Demo{ public static void main(String[] args) { System.out.println(“hello java”); } }</li><li>path 看path环境变量配置 ，里面的路径是所有查找的目标的父目录，而不是目标自己。</li><li>写错类名, 源文件名不存在或者写错，或者当前路径错误。 类文件名写错，或者类文件不在当前路径下，或者不在classpath指定 路径下。</li><li>javac 生成的.class 文件的名称取决于类名跟.java名没有关系。<h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><h3 id="设置Path"><a href="#设置Path" class="headerlink" title="设置Path"></a>设置Path</h3><h3 id="设置JAVA-HOME"><a href="#设置JAVA-HOME" class="headerlink" title="设置JAVA_HOME"></a>设置JAVA_HOME</h3></li><li>目前path环境变量除了保存了我们自己配置的信息以外，还有系统自带的信息，如果一旦不不小心删除了path环境变量信息，那么就可能导致系统部分功能无法使用。</li><li>尽量避免修改的path环境变量信息。</li><li>注意JAVA_HOME变量要设置在系统变量里面，而不是用户变量里，否则会导致java命令可用，javac命令不可用！<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME &#x3D; jdk安装路径</span><br><span class="line">Path &#x3D; %JAVA_HOME%bin;%Path%</span><br></pre></td></tr></table></figure><h3 id="设置classpath"><a href="#设置classpath" class="headerlink" title="设置classpath"></a>设置classpath</h3></li><li>设置了classpath环境变量的时候，启动jvm(java虚拟机)的时候，那么java虚拟机就会 根据classpath环境变量所保存路径信息下去寻找对应的class文件。</li><li>设置classpath环境变量信息的有分号与没有分号 的区别：<ul><li>如果配置classpath环境变量信息没有加上分号,那么java虚拟机仅会在classpath所保存的路径下去搜索对应的class文件，不会在当前路径下去搜索了。</li><li>如果配置classpath环境变量信息加上分号，那么java虚拟机除了会在classpath所保存的路径下去搜索对应 的class文件之外,如果能找到对应的class文件 那么就马上指定对应的class文件，否则还会去 当前路径下去搜索。</li></ul></li><li>配置classpath的作用? 答:设置了class文件的路径信息。</li></ul><h3 id="设置临时环境变量"><a href="#设置临时环境变量" class="headerlink" title="设置临时环境变量"></a>设置临时环境变量</h3><p>set命令的用法：</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>set</td><td>查看所有的环境变量信息</td></tr><tr><td>set 环境变量的名字</td><td>查看指定的环境变量信息</td></tr><tr><td>set 环境变量名字 = 路径信息</td><td>设置指定的环境变量信息</td></tr><tr><td>set 环境变量名字 =</td><td>清空指定的环境变量信息</td></tr><tr><td>set 环境变量名字 = 新路径；%环境变量名字%</td><td>在原有的基础上添加新的路径信息</td></tr></tbody></table><p>注意: set命令设置的环境变量信息，是临时环境变量信息。</p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE笔记： Java简介</title>
      <link href="/2016/07/11/java-1/"/>
      <url>/2016/07/11/java-1/</url>
      
        <content type="html"><![CDATA[<h2 id="Java简介及开发环境搭建"><a href="#Java简介及开发环境搭建" class="headerlink" title="Java简介及开发环境搭建"></a>Java简介及开发环境搭建</h2><h3 id="编程语言简介"><a href="#编程语言简介" class="headerlink" title="编程语言简介"></a>编程语言简介</h3><ul><li>机器语言：纯粹的机器代码<ul><li>机器语言是有0，1，0，1的二进制代码组成，可以有计算机直接执行。效率最高，但是通用性不强，对于不同的硬件需要不同的程序。说白了，不适合人来编程。</li></ul></li><li>汇编语言：8086汇编、Win32汇编、.NET的汇编<ul><li>汇编语言：效率稍微低于机器语言，通过简单的助记符来替代繁琐而枯燥的0，1代码。同样的通用性不强，对于不同的硬件需要设计不同语言。学习曲线比较大，需要硬件知识很多。介于其特殊的性质，在某些行业中得到广泛的应用。</li></ul></li><li>高级语言：<ul><li>高级语言：通过人类可以识别的自然语言（主要是英语）来进行编程，效率再次降低，但是程序编制难度和可读性大幅提高。可移植性好，实用性较好。比较适合大规模开发，是现在大多数人选择的语言。而且Java语言和.NET平台的出现在一定程度上解决了由于平台的不同所导致的移植困难的情况。 Basic、Pascal、Object Pascal、C、C++、Objective-C、Swift、C#、Java、ASP、ASP.NET、Perl、PHP、SQL、FoRTRAN 等等 Visual Basic、Visual Basic.NET、Delphi、Visual C++、C++ Builder、C# Builder、Visual Foxpro 等等</li></ul></li></ul><h3 id="编程语言分类"><a href="#编程语言分类" class="headerlink" title="编程语言分类:"></a>编程语言分类:</h3><ul><li>编译型（源代码编译成可执行文件后再执行) 如:C++ Objective-C 等</li><li>解释型(解释一行运行一行) 如:Python 等</li></ul><h3 id="Java-既是编译型又是解释型"><a href="#Java-既是编译型又是解释型" class="headerlink" title="Java 既是编译型又是解释型"></a>Java 既是编译型又是解释型</h3><p>Java源代码 -(javac)&gt; 字节码 - (java)-&gt; 解释执行</p><h3 id="机器语言和汇编语言"><a href="#机器语言和汇编语言" class="headerlink" title="机器语言和汇编语言"></a>机器语言和汇编语言</h3><p><img src="/images/javase_2.jpg" alt=""><br><img src="/images/javase_3.jpg" alt=""></p><h3 id="高级语言"><a href="#高级语言" class="headerlink" title="高级语言"></a>高级语言</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo1</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java语言起源"><a href="#Java语言起源" class="headerlink" title="Java语言起源"></a>Java语言起源</h3><p>Java是SUN(Stanford University Network 斯坦福大学网络公司)1995年推出的一门高级编程语言。 Java名称的来源Java最初被命名为Oak，目标在于家用电器等小型系统的编程语言，随着市场的变化，SUN着眼于网络应用的开发。Java的名字的来源：Java是印度尼西亚爪哇岛的英文名称，因盛产咖啡而闻名。</p><p>历史:</p><ul><li>1995年5月23日，JAVA语言诞生雏形</li><li>1996年，1997分别推出JDK1.0，JDK1.1版</li><li>1999年，JAVA被分成J2SE,J2EE,J2ME</li><li>2000年，JDK1.4发布</li><li>2004年9月30日18:00PM，J2SE1.5发布，成为Java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE1.5更名为Java SE 5.0</li><li>2005年，JAVA版本正式更名为JAVAEE,JAVASE, JAVAME</li><li>2006年12月，SUN公司发布JRE6.0 　　</li><li>2009年04月20日，Oracle以74亿美元收购Sun。取得java的版权。</li><li>2010年9月，JDK7.0已经发布，增加了简单闭包功能。 　　</li><li>2011年7月，甲骨文公司发布java7的正式版。<br><img src="/images/javase_5.jpg" alt=""></li></ul><h3 id="java语言重要特性之跨平台"><a href="#java语言重要特性之跨平台" class="headerlink" title="java语言重要特性之跨平台"></a>java语言重要特性之跨平台</h3><ol><li><p>跨平台<br>什么是跨平台（计算机系统），跨平台概念是软件开发中一个重要的概念，即不依赖于操作系统，也不信赖硬件环境。一个操作系统下开发的应用，放到另一个操作系统下依然可以运行。</p></li><li><p>Java的跨平台<br>“write once run anywhere” Java的跨平台是相对于其他编程语言而言的，通过Java语言编写的应用程序在不同的系统平台上都可以运行。一般的高级语言如果要在不同的平台上运行，至少需要编译成不同的目标代码。在windows编译的c语言程序，在linux下是不能运行的。当然在linux下编译的c语言程序在windows下也是不能运行的。而Java语言在不同平台上运行时不需要重新编译。 Java跨平台的原理：Java的跨平台是通过Java虚拟机（JVM）来实现的。<br><img src="/images/javase_4.jpg" alt=""></p></li><li><p>Java的三大平台</p></li></ol><ul><li>JavaSE （Java Platform，Standard Edition)<ul><li>Java SE 以前称为J2SE。它允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的Java 应用程序。</li><li>Java SE 包含了支持Java Web 服务开发的类，并为Java Platform，Enterprise Edition（Java EE）提供基础。 例子：类似QQ、扫雷、飞秋、凌波这样子的桌面应用。</li></ul></li><li>Java EE（Java Platform，Enterprise Edition)<ul><li>这个版本以前称为J2EE。企业版本帮助开发和部署可移植、健壮、可伸缩且安全的服务器端 Java 应用程序。Java EE 是在Java SE 的基础上构建的，Ja它提供Web 服务、组件模型、管理和通信API，可以用来实现企业级的面向服务体系结构（service-oriented architecture，SOA）和Web 2.0 应用程序。</li></ul></li><li>Java ME（Java Platform，Micro Edition）<ul><li>这个版本以前称为J2ME，也叫K-JAVA。Java ME 为在移动设备和嵌入式设备（比如手机、PDA、电视机顶盒和打印机）上运行的应用程序提供一个健壮且灵活的环境。Java ME 包括灵活的用户界面、健壮的安全模型、许多内置的网络协议以及对可以动态下载的连网和离线应用程序的丰富支持。基于Java ME 规范的应用程序只需编写一次，就可以用于许多设备，而且可以利用每个设备的本机功能。</li></ul></li></ul><h3 id="环境的搭建"><a href="#环境的搭建" class="headerlink" title="环境的搭建"></a>环境的搭建</h3><p><img src="/images/javase_6.jpg" alt=""></p><ol><li><p>Java虚拟机（JVM）<code>(即可运行.class文件)</code></p><ul><li>Java Virtual Machine 一个软件模拟的计算机。</li><li>Java源程序想象成我们的C源程序，Java源程序编译后生成的字节码（.class）就相当于C源程序编译后的二进制可执行文件。</li><li>JVM虚拟机相当于计算机系统（操作系统+硬件环境），Java解释器相当于CPU。</li><li>.exe文件直接在windows操作系统下运行，在CPU上运行的是机器码（.exe文件）</li><li>.class字节码文件是运行在JVM虚拟机下的，在Java解释器上运行的是Java字节码。</li><li>Java解释器相当于运行Java字节码的“CPU”，但该“CPU”不是通过硬件实现的，而是用软件实现的。* Java解释器实际上就是特定的平台下的一 个应用程序。只要实现了特定平台下的解释器程序，Java字节码就能通过解释器程序在该平台下运行，这是Java跨平台的根本。</li><li>当前，并不是在所有的平台 下都有相应Java解释器程序，这也是Java并不能在所有的平台下都能运行的原因，它只能在已实现了Java解释器程序的平台下运行。</li></ul></li><li><p>Java运行环境(JRE)<code>（即可运行.java文件）</code><br>JRE Java Runtime Environment Java运行环境。包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。</p></li><li><p>Java开发环境(JDK)<code>（可开发java文件）</code></p><ul><li>JDK（Java Development Kit）是Sun Microsystems针对Java开发员的产品。自从Java推出以来，JDK已经成为使用最广泛的Java SDK。JDK 是整个Java的核心，包括了Java运行环境、Java工具和Java基础类库。JDK是学好Java的第一步。从SUN的JDK5.0开始，提供了泛型等非常实用的功能，其版本也不断更新，运行效率得到了非常大的提高。</li><li>JDK的安装<ul><li>网址：<a href="http://www.oracle.com/index.html">http://www.oracle.com/index.html</a> 、<a href="http://www.java.sun.com">http://www.java.sun.com</a></li></ul></li><li>JDK目录介绍<ul><li>bin目录：存放Java的编译器、解释器等工具(可执行文件)。java javac</li><li>db目录：JDK7附带的一个轻量级的数据库，名字叫做Derby。</li><li>include目录：存放的调用系统资源的接口文件。</li><li>jre目录：存放Java运行环境文件。</li><li>lib目录：存放Java的类库文件。</li><li>src.zip文件：JDK提供的类的源代码。</li></ul></li><li>安装JDK需要注意的事项：<ul><li>安装路径中不要包含中文。</li><li>安装路径中不要包含空格。</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java SE笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
